var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.138,1,2.983]],["body/controllers/AppController.html",[0,1.875,1,4.915,2,1.516,3,0.163,4,0.163,5,0.109,6,4.772,7,0.329,8,0.013,9,5.466,10,2.7,11,4.315,12,2.823,13,0.803,14,4.665,15,4.772,16,4.176,17,2.823,18,3.974,19,3.11,20,3.701,21,5.466,22,5.902,23,3.791,24,5.466,25,3.974,26,5.466,27,2.295,28,5.466,29,0.163,30,0.234,31,2.13,32,3.203,33,2.482,34,0.01,35,0.01]],["title/modules/AppModule.html",[36,0.937,37,2.983]],["body/modules/AppModule.html",[1,4.153,2,1.346,3,0.1,4,0.1,5,0.067,7,0.332,8,0.013,13,0.491,14,4.415,15,2.917,16,3.789,17,1.726,29,0.1,30,0.143,34,0.007,35,0.007,36,1.432,37,6.103,38,1.351,39,1.403,40,1.517,41,1.517,42,1.403,43,2.594,44,1.517,45,2.917,46,2.917,47,2.917,48,4.168,49,4.703,50,4.703,51,4.703,52,4.703,53,4.703,54,4.703,55,4.703,56,4.703,57,4.168,58,4.703,59,4.168,60,2.203,61,1.517,62,1.517,63,3.341,64,2.594,65,3.341,66,3.341,67,1.726,68,0.927,69,4.51,70,2.262,71,3.341,72,3.341,73,3.341,74,3.341,75,1.65,76,1.17,77,1.65,78,0.957,79,3.341,80,3.341,81,3.341,82,3.341,83,3.341,84,3.341,85,3.341,86,3.341,87,3.341,88,3.341,89,3.83,90,2.917,91,2.124,92,2.917,93,2.917,94,2.429,95,3.341,96,2.917,97,3.341,98,3.341,99,3.341,100,2.637,101,2.262,102,2.429,103,3.341,104,1.403,105,2.124,106,3.341,107,2.637,108,1.351,109,3.341,110,3.341,111,0.927,112,2.917,113,2.637,114,2.262,115,3.341,116,4.851,117,3.341,118,0.841,119,2.637,120,3.341,121,3.341,122,1.093,123,2.429,124,2.917,125,3.341,126,3.341,127,2.917,128,3.341,129,3.341]],["title/injectables/AppService.html",[14,2.608,130,0.795]],["body/injectables/AppService.html",[3,0.18,4,0.18,5,0.121,7,0.241,8,0.012,13,0.886,14,4.562,29,0.18,30,0.259,34,0.011,35,0.011,118,1.518,130,1.391,131,2.188,132,5.266,133,0.648,134,1.927,135,7.928,136,0.823,137,6.031,138,1.62,139,1.054,140,6.031,141,6.031]],["title/controllers/AuthController.html",[0,1.138,142,2.983]],["body/controllers/AuthController.html",[0,0.962,2,0.962,3,0.103,4,0.103,5,0.069,7,0.311,8,0.013,10,1.714,11,2.739,12,3.634,13,0.51,18,2.523,19,1.974,20,2.35,22,3.029,23,3.015,27,2.678,29,0.103,30,0.149,31,1.352,32,2.176,34,0.007,35,0.007,89,2.739,92,3.029,108,2.359,118,1.701,122,1.91,133,0.373,134,1.339,136,0.922,138,1.815,142,3.625,143,3.029,144,1.642,145,3.029,146,4.986,147,4.986,148,4.986,149,4.986,150,4.986,151,3.47,152,2.54,153,1.647,154,3.47,155,2.224,156,3.47,157,3.47,158,2.001,159,0.821,160,0.854,161,1.937,162,1.714,163,3.47,164,5.259,165,3.47,166,5.095,167,3.47,168,3.503,169,3.47,170,3.47,171,3.47,172,3.47,173,3.47,174,3.47,175,4.353,176,3.47,177,3.47,178,3.47,179,4.004,180,3.47,181,3.47,182,3.47,183,1.792,184,5.57,185,2.739,186,1.642,187,1.514,188,2.206,189,2.35,190,1.457,191,1.642,192,3.16,193,2.739,194,2.739,195,3.47,196,1.792,197,1.714,198,3.47,199,3.47,200,3.47,201,4.986,202,3.47,203,3.47,204,3.47,205,5.836,206,3.47,207,3.47,208,3.47,209,3.47,210,3.47,211,3.936,212,3.47,213,3.47,214,3.47,215,1.526,216,2.739,217,1.576,218,3.47,219,3.47,220,3.47,221,2.739,222,3.47,223,3.47,224,2.523,225,3.47,226,3.47,227,3.47,228,3.47,229,3.47,230,3.47]],["title/modules/AuthModule.html",[36,0.937,48,2.462]],["body/modules/AuthModule.html",[2,1.621,3,0.13,4,0.13,5,0.087,7,0.326,8,0.013,13,0.641,16,4.007,17,2.253,19,2.481,23,4.213,29,0.13,30,0.187,34,0.009,35,0.009,36,1.505,38,1.763,39,1.831,40,1.98,41,1.98,42,1.831,43,2.993,44,2.993,48,4.973,57,4.536,59,4.536,60,2.654,61,1.98,62,1.98,64,2.993,69,4.614,90,3.807,91,2.772,102,4.249,107,3.443,108,1.763,119,3.443,142,4.792,185,3.443,231,3.807,232,4.361,233,3.807,234,3.807,235,5.118,236,5.118,237,4.361,238,3.807,239,5.844,240,4.361,241,3.807,242,2.953,243,4.361,244,4.361,245,3.807,246,4.361,247,3.807,248,4.361,249,4.361,250,3.807,251,4.361,252,3.807]],["title/injectables/AuthService.html",[23,2.119,130,0.795]],["body/injectables/AuthService.html",[3,0.072,4,0.072,5,0.048,7,0.273,8,0.013,12,1.953,13,0.353,16,3.642,17,1.241,23,1.953,29,0.072,30,0.103,31,1.473,32,2.312,34,0.006,35,0.006,101,2.56,102,2.748,105,1.527,108,2.926,113,1.897,118,1.717,122,1.529,130,0.733,131,0.872,133,0.258,134,1.015,136,0.905,138,1.255,139,1.063,152,2.143,155,2.074,158,1.569,159,0.879,160,0.67,161,1.519,162,2.617,164,4.525,168,1.442,175,3.3,179,3.015,188,1.527,189,1.627,190,1.009,191,1.137,192,3.465,193,1.897,215,2.321,216,2.984,217,3.17,221,5.385,224,1.747,242,1.627,247,4.08,250,2.098,252,2.098,253,2.098,254,0.983,255,4.673,256,4.673,257,4.673,258,4.673,259,6.117,260,4.08,261,3.78,262,2.403,263,3.16,264,5.588,265,2.403,266,3.78,267,2.403,268,3.78,269,2.403,270,3.78,271,4.183,272,2.403,273,2.984,274,3.3,275,3.368,276,3.18,277,2.403,278,2.403,279,2.403,280,2.403,281,1.527,282,1.747,283,1.296,284,2.098,285,1.049,286,1.747,287,2.403,288,3.78,289,2.403,290,2.403,291,2.748,292,3.78,293,2.02,294,3.78,295,3.78,296,2.403,297,2.737,298,3.3,299,2.098,300,2.403,301,1.697,302,2.406,303,5.03,304,3.78,305,3.78,306,3.78,307,6.4,308,3.78,309,3.78,310,3.78,311,3.78,312,3.78,313,4.673,314,3.78,315,4.673,316,3.78,317,3.78,318,2.403,319,2.403,320,1.421,321,2.403,322,1.897,323,2.403,324,1.367,325,2.403,326,3.78,327,2.151,328,1.237,329,3.78,330,0.951,331,2.403,332,3.78,333,3.78,334,3.78,335,2.047,336,2.403,337,1.367,338,2.403,339,2.403,340,3.78,341,2.403,342,4.08,343,2.403,344,2.403,345,2.403,346,2.403,347,2.403,348,2.403,349,2.403,350,2.403,351,2.403]],["title/controllers/CompaniesController.html",[0,1.138,352,2.983]],["body/controllers/CompaniesController.html",[0,1.011,2,1.011,3,0.109,4,0.109,5,0.073,7,0.301,8,0.013,10,2.963,13,0.536,27,2.518,29,0.109,30,0.156,33,1.656,34,0.008,35,0.008,76,1.277,104,2.739,111,1.011,118,1.733,133,0.392,134,1.387,136,0.94,138,1.849,139,1.205,144,1.725,152,2.715,153,1.678,155,2.33,158,2.04,159,0.837,160,0.871,161,1.974,183,2.668,186,1.725,187,1.591,190,1.531,191,1.725,196,1.883,197,1.801,283,1.011,320,1.941,330,0.918,352,3.755,353,3.183,354,3.183,355,1.48,356,2.425,357,2.088,358,2.088,359,3.183,360,4.547,361,3.646,362,2.188,363,3.916,364,3.646,365,3.498,366,1.81,367,3.646,368,2.797,369,1.474,370,3.646,371,3.646,372,2.506,373,1.474,374,2.939,375,3.646,376,1.725,377,5.088,378,3.283,379,3.646,380,1.974,381,2.075,382,2.518,383,3.813,384,3.183,385,1.474,386,4.078,387,1.474,388,3.646,389,3.646,390,1.591,391,2.188,392,3.646,393,2.318,394,2.188,395,2.188,396,1.474,397,2.188,398,2.075,399,2.075,400,2.075,401,3.646,402,2.075,403,2.075,404,3.646,405,2.318,406,3.646,407,2.075,408,3.646]],["title/modules/CompaniesModule.html",[36,0.937,49,2.778]],["body/modules/CompaniesModule.html",[2,1.869,3,0.162,4,0.162,5,0.109,7,0.315,8,0.013,13,0.799,29,0.162,30,0.233,34,0.01,35,0.01,36,1.672,38,2.199,39,2.283,40,2.47,41,2.47,42,2.283,43,3.325,44,2.47,49,5.429,60,3.06,61,2.47,62,2.47,64,2.47,67,2.809,68,1.509,159,0.661,352,5.324,366,1.905,383,5.096,384,4.748,409,4.748,410,4.748,411,5.438,412,5.438,413,4.899,414,4.748,415,2.944,416,4.748,417,2.199]],["title/injectables/CompaniesService.html",[130,0.795,383,2.608]],["body/injectables/CompaniesService.html",[3,0.087,4,0.087,5,0.059,7,0.289,8,0.013,13,0.43,29,0.087,30,0.125,31,1.139,32,1.276,34,0.007,35,0.007,68,0.811,75,1.444,76,2.059,77,1.444,78,1.514,104,3.034,108,3.154,118,1.728,130,0.852,131,1.061,133,0.314,134,1.181,136,0.903,138,1.692,139,1.113,152,2.58,155,2.071,158,1.96,159,0.804,160,0.837,161,1.897,162,3.112,190,1.228,215,2.102,217,3.118,285,1.276,293,2.033,301,1.466,320,1.652,324,1.664,330,0.736,335,1.583,337,3.007,355,1.26,356,1.777,357,1.777,358,1.777,359,3.838,360,4.207,366,1.54,368,1.583,369,1.777,372,2.406,373,1.777,376,2.081,377,4.784,382,1.846,383,2.795,385,1.182,386,3.471,387,1.182,396,1.182,414,2.553,418,2.553,419,2.924,420,3.181,421,2.924,422,4.396,423,2.924,424,2.639,425,2.778,426,3.171,427,2.924,428,3.171,429,2.924,430,2.924,431,2.924,432,2.308,433,1.583,434,1.755,435,1.755,436,1.664,437,1.664,438,2.924,439,2.924,440,1.276,441,3.171,442,2.553,443,2.639,444,2.172,445,2.553,446,2.553,447,1.755,448,1.755,449,1.755,450,2.639,451,1.755,452,2.639,453,2.639,454,1.276,455,0.957,456,1.755,457,1.755,458,2.639,459,2.924,460,1.755,461,1.755,462,2.38,463,2.38,464,1.755,465,2.639,466,1.755,467,1.755,468,1.755,469,1.755,470,1.444,471,1.755,472,3.526,473,2.924,474,1.755,475,1.755,476,1.755,477,1.755,478,1.755,479,1.755,480,1.755,481,1.755,482,1.755,483,1.755,484,1.755,485,1.755,486,1.755,487,1.755,488,1.859,489,1.755,490,2.924,491,4.396,492,1.228,493,1.276,494,2.924]],["title/classes/Company.html",[30,0.176,366,1.437]],["body/classes/Company.html",[3,0.111,4,0.111,5,0.074,7,0.209,8,0.013,29,0.181,30,0.224,34,0.008,35,0.008,68,1.03,78,1.737,111,1.03,114,4.104,122,1.216,133,0.399,136,1.073,139,1.156,153,1.917,159,0.737,160,1.043,215,1.137,254,1.361,283,1.03,285,1.621,293,1.795,301,1.681,366,2.305,413,2.701,417,2.45,432,4.132,434,2.229,440,2.645,455,1.216,462,2.011,463,2.011,492,2.544,493,2.645,495,0.966,496,2.701,497,3.449,498,4.406,499,6.06,500,3.449,501,3.449,502,4.104,503,6.06,504,4.971,505,3.715,506,3.555,507,3.715,508,3.449,509,3.637,510,4.095,511,3.715,512,3.715,513,3.715,514,3.715,515,2.585,516,3.715,517,3.715,518,3.715,519,3.715,520,3.715,521,2.229,522,2.978,523,2.701,524,5.744,525,4.132,526,3.243,527,3.544,528,3.805,529,2.933,530,2.516,531,4.57,532,3.327,533,3.243,534,2.361,535,2.701,536,3.243,537,2.361,538,2.544,539,3.243,540,3.243,541,2.933]],["title/classes/Company-1.html",[30,0.147,366,1.199,444,1.69]],["body/classes/Company-1.html",[3,0.108,4,0.108,5,0.072,7,0.239,8,0.013,29,0.108,30,0.294,34,0.008,35,0.008,78,1.471,111,2.252,122,1.183,133,0.389,136,0.815,139,1.161,153,1.455,159,0.834,160,0.868,254,1.335,276,3.081,283,1.904,293,1.768,328,1.68,330,1.969,366,2.405,455,2.247,495,0.94,500,2.922,502,4.043,506,3.768,515,2.536,538,2.155,542,5.132,543,2.628,544,3.737,545,3.615,546,3.615,547,3.615,548,5.213,549,2.298,550,3.264,551,4.053,552,5.213,553,3.477,554,3.477,555,4.053,556,3.477,557,2.241,558,2.17,559,3.544,560,3.865,561,3.699,562,3.717,563,3.477,564,4.341,565,3.156,566,2.854,567,3.156,568,3.156,569,3.733,570,3.733,571,4.053,572,4.053,573,4.483,574,4.483,575,2.628,576,5.213,577,2.628,578,3.156,579,3.264]],["title/classes/Company-2.html",[30,0.147,105,2.175,366,1.199]],["body/classes/Company-2.html",[3,0.109,4,0.109,5,0.073,7,0.241,8,0.013,27,2.745,29,0.155,30,0.296,34,0.008,35,0.008,78,1.486,111,2.245,133,0.394,136,0.707,139,1.173,153,1.263,159,0.895,160,0.827,179,2.085,188,3.824,254,1.348,283,1.814,293,1.781,301,1.987,302,2.594,330,2.047,366,2.418,425,2.176,454,2.854,455,2.41,495,0.953,497,3.721,538,2.525,544,3.743,549,2.329,553,3.51,554,3.51,556,3.51,557,1.599,559,3.55,560,3.973,562,3.257,580,2.481,581,3.664,582,3.664,583,3.61,584,2.329,585,2.085,586,2.95,587,3.721,588,4.157,589,4.157,590,2.481,591,2.893,592,2.893]],["title/classes/CreateCompanyDto.html",[30,0.176,360,2.608]],["body/classes/CreateCompanyDto.html",[3,0.141,4,0.141,5,0.095,7,0.189,8,0.013,27,1.987,29,0.141,30,0.265,34,0.009,35,0.009,111,2.215,133,0.509,136,0.992,139,1.173,153,1.772,159,0.917,160,0.919,254,1.604,283,1.313,330,2.01,360,3.922,454,2.066,455,1.549,495,1.231,497,4.292,500,4.292,502,5.108,544,3.425,557,2.066,559,3.174,560,3.945,583,2.841,593,6.585,594,3.737,595,3.757,596,6.17,597,4.734,598,4.734,599,4.734,600,4.734]],["title/classes/CreateFileDto.html",[30,0.176,601,2.608]],["body/classes/CreateFileDto.html",[3,0.193,4,0.193,5,0.129,8,0.012,29,0.193,30,0.277,34,0.011,35,0.011,495,1.681,601,4.751,602,5.645,603,5.104]],["title/classes/CreateJobDto.html",[30,0.176,558,2.462]],["body/classes/CreateJobDto.html",[3,0.082,4,0.082,5,0.055,7,0.204,8,0.013,29,0.082,30,0.264,34,0.006,35,0.006,78,1.207,111,2.298,122,1.378,133,0.297,136,1.007,139,1.159,153,1.797,159,0.787,160,0.957,254,1.095,276,2.528,283,2.013,293,0.818,328,1.378,330,2.026,366,2.36,455,2.374,495,0.718,500,3.497,502,1.871,506,3.872,515,2.82,538,1.16,542,5.906,543,2.009,544,3.535,548,4.456,549,1.756,550,2.678,551,3.325,552,4.456,553,2.852,554,2.852,555,3.325,556,2.852,557,1.838,558,2.528,559,3.421,560,3.897,561,4.048,562,3.929,563,2.852,564,3.711,565,2.412,566,2.181,567,2.412,568,2.412,569,4.468,570,4.468,571,4.852,572,4.852,573,4.984,574,3.677,575,3.711,576,5.654,577,3.711,578,3.677,579,3.907,595,3.748,604,2.412,605,2.763,606,2.763,607,4.212,608,4.212,609,2.763,610,2.763,611,2.763,612,2.763,613,2.763,614,2.763,615,2.763,616,2.763,617,2.763,618,2.763,619,2.763,620,2.763,621,2.763]],["title/classes/CreatePermissionDto.html",[30,0.176,622,2.608]],["body/classes/CreatePermissionDto.html",[3,0.146,4,0.146,5,0.098,7,0.196,8,0.013,29,0.146,30,0.271,34,0.009,35,0.009,36,1.742,111,2.232,133,0.527,136,1.006,139,1.182,153,1.796,159,0.927,160,0.932,254,1.641,330,2.025,495,1.275,544,2.228,557,2.141,560,3.975,595,4.156,622,4.014,623,6.66,624,3.873,625,4.849,626,5.166,627,4.906,628,4.906,629,4.906,630,4.906]],["title/classes/CreateResumeDto.html",[30,0.176,631,2.462]],["body/classes/CreateResumeDto.html",[3,0.106,4,0.106,5,0.071,7,0.203,8,0.013,27,1.49,29,0.151,30,0.253,34,0.008,35,0.008,78,1.452,111,2.234,133,0.381,136,0.967,139,1.072,153,1.727,160,0.896,254,1.317,283,1.967,301,2.024,330,2.103,331,4.743,454,1.549,455,1.934,495,0.923,538,3.133,544,3.499,550,2.257,557,1.549,559,3.534,560,3.978,562,1.922,583,3.547,584,4.507,586,2.884,590,4.003,595,2.618,631,3.042,632,5.761,633,2.581,634,5.601,635,5.601,636,4.334,637,5.761,638,5.306,639,5.16,640,3.55,641,2.581,642,3.55,643,3.55,644,3.55,645,3.55,646,3.55,647,2.257]],["title/classes/CreateRoleDto.html",[30,0.176,648,2.608]],["body/classes/CreateRoleDto.html",[3,0.128,4,0.128,5,0.086,7,0.232,8,0.013,29,0.128,30,0.249,34,0.009,35,0.009,78,1.661,111,2.258,112,5.061,113,4.576,122,1.897,133,0.463,136,0.956,139,1.029,153,1.707,159,0.889,160,0.886,254,1.507,283,1.944,297,3.975,330,1.969,372,1.51,455,1.897,495,1.12,500,4.161,510,3.299,515,3.461,538,2.434,544,3.321,550,3.685,551,4.576,557,1.88,559,3.414,560,3.72,562,3.139,563,3.926,564,4.763,579,4.892,584,3.685,595,3.62,648,3.685,649,6.384,650,3.401,651,4.308,652,4.308,653,4.308,654,4.308,655,4.308,656,2.633,657,5.797,658,4.308,659,4.308]],["title/classes/CreateSubscriberDto.html",[30,0.176,660,2.608]],["body/classes/CreateSubscriberDto.html",[3,0.138,4,0.138,5,0.092,7,0.185,8,0.013,29,0.138,30,0.26,34,0.009,35,0.009,111,2.203,122,1.985,133,0.496,136,0.925,139,1.167,153,1.651,159,0.909,160,0.857,254,1.577,283,1.997,301,2.171,330,1.999,455,2.356,495,1.199,544,3.27,550,3.856,555,4.789,557,2.013,559,3.466,560,3.695,561,4.572,562,4.05,563,3.124,564,3.353,583,4.068,586,3.452,595,3.133,641,3.353,660,3.856,661,6.286,662,3.641,663,4.612,664,4.612,665,4.612,666,4.612,667,6.066,668,4.612]],["title/classes/CreateUserCvDto.html",[30,0.176,647,2.608]],["body/classes/CreateUserCvDto.html",[3,0.117,4,0.117,5,0.079,7,0.218,8,0.013,27,1.647,29,0.162,30,0.268,34,0.008,35,0.008,78,1.559,111,2.224,133,0.422,136,0.852,139,1.04,153,1.521,160,0.789,254,1.414,283,2.031,301,1.731,330,2.097,331,4.773,454,1.712,455,1.78,495,1.02,538,3.152,544,3.573,550,2.495,557,1.712,559,3.566,560,3.96,562,2.125,583,3.264,584,4.655,586,2.233,590,3.683,595,2.027,631,2.355,632,5.32,633,2.853,634,5.72,635,5.72,636,3.457,637,5.928,638,4.538,639,4.748,647,3.457,669,3.924,670,3.924,671,3.924]],["title/classes/CreateUserDto.html",[30,0.176,585,2.335]],["body/classes/CreateUserDto.html",[3,0.092,4,0.092,5,0.062,7,0.218,8,0.013,27,2.529,29,0.136,30,0.276,34,0.007,35,0.007,78,1.308,111,2.271,133,0.33,136,0.978,139,1.171,153,1.747,159,0.871,160,0.942,179,1.749,188,4.657,254,1.186,283,1.671,293,0.91,301,2.068,302,2.753,330,2.067,366,2.446,425,2.285,454,2.629,455,2.397,495,0.799,497,3.972,538,2.285,544,3.621,549,1.954,553,3.091,554,3.091,556,3.091,557,1.341,559,3.48,560,3.999,562,3.261,580,2.082,583,3.615,584,1.954,585,2.597,586,3.098,587,3.972,588,4.437,589,4.437,590,2.082,591,3.603,592,3.603,595,3.483,604,2.684,641,2.235,672,3.074,673,3.074,674,3.074,675,3.074,676,3.074,677,3.074,678,3.074,679,3.074,680,3.074]],["title/controllers/DatabasesController.html",[0,1.138,681,2.983]],["body/controllers/DatabasesController.html",[0,1.702,2,1.702,3,0.183,4,0.183,5,0.123,7,0.29,8,0.013,13,0.901,29,0.183,30,0.263,33,2.786,34,0.011,35,0.011,144,2.903,390,2.677,681,5.27,682,5.356,683,6.134,684,4.904,685,5.356,686,6.134]],["title/modules/DatabasesModule.html",[36,0.937,50,2.778]],["body/modules/DatabasesModule.html",[2,1.754,3,0.147,4,0.147,5,0.098,7,0.322,8,0.013,13,0.722,29,0.147,30,0.211,34,0.009,35,0.009,36,1.596,38,1.988,39,2.064,40,2.233,41,2.233,42,2.064,43,3.174,44,2.233,50,5.452,60,2.872,61,2.233,62,2.233,64,2.233,67,2.54,68,1.364,155,1.409,159,0.85,263,4.036,282,3.575,302,1.848,415,2.662,417,2.826,656,2.233,681,5.082,684,4.967,685,4.293,687,4.293,688,4.293,689,4.917,690,4.917,691,4.282,692,4.293,693,4.282,694,3.882,695,4.02,696,3.33,697,4.293,698,3.882,699,3.575]],["title/injectables/DatabasesService.html",[130,0.795,684,2.608]],["body/injectables/DatabasesService.html",[3,0.1,4,0.1,5,0.067,7,0.3,8,0.013,13,0.494,16,4.086,17,1.736,29,0.1,30,0.144,31,1.899,32,3.209,33,2.603,34,0.007,35,0.007,68,0.932,75,1.661,76,1.178,77,1.661,78,0.963,108,2.318,122,1.595,130,0.944,131,1.22,133,0.361,134,1.309,136,0.782,138,0.903,155,1.802,158,0.996,159,0.894,160,0.425,161,0.963,215,2.198,217,3.404,254,1.267,263,3.248,275,2.137,276,2.017,282,2.444,291,2.444,297,3.595,301,1.59,302,2.509,328,1.595,355,1.643,420,4.121,433,1.82,497,3.262,500,2.773,579,3.098,587,3.262,588,3.644,589,3.644,656,1.527,684,3.098,692,2.935,694,2.654,696,2.276,700,2.935,701,4.963,702,6.96,703,2.935,704,5.005,705,4.526,706,5.732,707,4.873,708,4.255,709,3.361,710,4.873,711,2.444,712,2.276,713,2.444,714,4.168,715,2.654,716,4.168,717,4.873,718,2.444,719,3.361,720,3.361,721,2.935,722,3.361,723,3.361,724,3.361,725,5.732,726,3.361,727,5.732,728,3.361,729,5.732,730,3.361,731,5.06,732,3.361,733,3.361,734,3.361,735,3.361,736,3.361,737,3.847,738,3.361,739,2.654,740,2.935,741,5.732,742,4.873,743,5.732,744,5.732,745,4.873,746,3.361,747,3.361,748,3.361,749,3.361,750,3.361,751,2.935,752,3.361,753,2.935,754,3.361,755,2.444]],["title/classes/File.html",[5,0.082,30,0.176]],["body/classes/File.html",[3,0.193,4,0.193,5,0.158,8,0.012,29,0.193,30,0.278,34,0.011,35,0.011,495,1.686,756,5.662]],["title/controllers/FilesController.html",[0,1.138,757,2.983]],["body/controllers/FilesController.html",[0,1.077,2,1.077,3,0.116,4,0.116,5,0.134,7,0.3,8,0.013,10,1.918,13,0.57,29,0.116,30,0.166,33,1.763,34,0.008,35,0.008,76,1.36,118,1.774,133,0.417,134,1.449,136,0.962,138,1.893,139,1.139,144,1.837,153,1.718,158,1.986,159,0.815,160,0.848,161,1.922,183,2.788,186,1.837,187,1.694,191,1.837,196,2.005,197,1.918,320,2.029,328,1.27,356,2.712,357,2.182,358,2.182,369,1.569,372,2.557,373,1.569,374,3.072,376,1.837,378,3.431,380,2.102,381,2.209,385,1.569,387,1.569,390,1.694,402,3.072,403,2.209,405,2.468,407,2.209,601,2.468,757,3.924,758,3.389,759,3.065,760,5.398,761,3.882,762,3.882,763,3.882,764,5.169,765,3.882,766,3.882,767,6.205,768,3.882,769,4.713,770,3.882,771,3.882,772,4.713,773,3.882,774,3.882,775,5.398,776,3.882,777,3.945,778,3.389,779,4.261,780,3.882,781,2.822,782,3.882,783,3.882,784,3.882,785,3.882,786,3.882,787,3.882,788,3.882,789,5.398,790,3.882,791,3.882,792,3.882,793,3.882,794,3.882,795,5.398,796,3.882,797,3.882,798,3.882,799,3.882,800,3.882,801,3.882,802,3.882,803,3.882,804,3.882,805,3.882]],["title/modules/FilesModule.html",[36,0.937,51,2.778]],["body/modules/FilesModule.html",[2,1.872,3,0.163,4,0.163,5,0.109,7,0.315,8,0.013,13,0.801,29,0.163,30,0.234,34,0.01,35,0.01,36,1.674,38,2.204,39,2.289,40,2.476,41,2.476,42,2.289,43,3.329,44,2.476,51,5.432,60,3.065,61,2.476,62,2.476,64,2.476,191,2.58,757,5.33,777,5.099,778,4.76,781,3.964,806,4.76,807,4.76,808,5.452,809,5.452,810,5.452,811,4.907,812,5.452,813,5.452,814,5.452]],["title/injectables/FilesService.html",[130,0.795,777,2.608]],["body/injectables/FilesService.html",[3,0.135,4,0.135,5,0.149,7,0.269,8,0.013,13,0.666,29,0.135,30,0.194,34,0.009,35,0.009,118,1.872,130,1.162,131,1.645,133,0.487,134,1.611,136,1.015,138,2.093,139,1.093,158,2.118,159,0.869,160,0.904,161,2.05,320,2.255,328,1.484,355,1.719,356,2.892,357,2.425,358,2.425,369,2.425,372,2.678,373,2.425,376,2.839,385,1.833,387,1.833,425,3.362,601,4.729,759,3.58,764,5.279,777,3.813,779,4.736,815,3.959,816,5.998,817,4.535,818,4.535,819,4.535,820,4.535,821,4.535,822,7.438,823,4.535,824,4.535,825,4.535]],["title/controllers/HealthController.html",[0,1.138,826,2.983]],["body/controllers/HealthController.html",[0,1.544,2,1.544,3,0.166,4,0.166,5,0.111,7,0.296,8,0.013,13,0.817,27,2.869,29,0.166,30,0.239,31,2.168,32,2.983,34,0.01,35,0.01,118,1.4,133,0.598,134,1.835,136,0.759,138,1.494,144,2.633,153,1.356,187,2.428,826,4.969,827,4.858,828,6.834,829,6.736,830,5.564,831,5.564,832,6.834,833,6.834,834,6.834,835,4.393,836,5.564,837,5.564,838,5.564,839,5.564]],["title/modules/HealthModule.html",[36,0.937,52,2.778]],["body/modules/HealthModule.html",[2,1.994,3,0.18,4,0.18,5,0.121,7,0.307,8,0.013,13,0.889,29,0.18,30,0.259,34,0.011,35,0.011,36,1.641,38,2.445,52,4.867,64,2.747,826,5.576,835,4.775,840,6.048,841,6.048,842,7.187]],["title/interfaces/IUser.html",[152,1.437,843,2.608]],["body/interfaces/IUser.html",[3,0.157,4,0.157,5,0.105,8,0.013,29,0.157,34,0.01,35,0.01,36,1.202,133,0.566,139,1.244,152,2.314,159,0.966,160,1.041,161,1.893,254,1.717,283,1.461,293,2.355,297,3.908,301,2.099,302,2.844,444,2.601,508,4.306,534,3.347,625,3.347,656,2.391,843,3.347,844,4.157,845,4.597,846,3.828,847,4.157,848,5.265]],["title/classes/Job.html",[30,0.176,849,2.119]],["body/classes/Job.html",[3,0.1,4,0.1,5,0.067,7,0.229,8,0.013,29,0.17,30,0.208,34,0.007,35,0.007,68,0.927,78,1.39,122,1.093,133,0.359,136,1.107,139,1.172,153,1.977,159,0.762,160,1.055,215,1.023,254,1.261,293,1.856,301,1.585,366,2.001,417,1.961,425,2.632,440,2.493,492,2.398,493,2.493,495,0.868,500,3.251,501,3.251,502,2.262,504,5.062,506,3.755,508,3.567,509,3.762,510,4.178,515,3.097,521,2.005,522,2.761,537,2.124,538,2.632,544,1.517,557,1.458,561,3.251,569,4.153,570,4.153,571,4.51,572,4.51,575,4.153,577,4.153,579,3.631,849,2.506,850,2.429,851,3.251,852,3.428,853,3.251,854,3.341,855,3.341,856,3.341,857,3.341,858,3.341,859,3.341,860,3.341,861,3.341,862,3.341,863,3.341,864,3.341,865,3.341,866,3.341,867,3.341,868,3.341,869,3.341,870,3.341,871,3.341,872,2.429,873,2.262,874,2.917]],["title/controllers/JobsController.html",[0,1.138,875,2.983]],["body/controllers/JobsController.html",[0,0.97,2,0.97,3,0.104,4,0.104,5,0.07,7,0.297,8,0.013,10,2.477,12,3.308,13,0.514,27,2.461,29,0.104,30,0.15,33,1.589,34,0.007,35,0.007,76,1.226,104,2.688,111,0.97,118,1.706,133,0.376,134,1.347,136,0.925,138,1.82,139,1.199,144,1.655,152,2.691,153,1.652,155,2.339,158,2.008,159,0.824,160,0.857,161,1.943,168,4.234,183,2.591,186,1.655,187,1.526,190,1.468,191,1.655,196,1.807,197,1.728,283,0.97,320,1.885,328,1.641,330,0.88,355,1.437,356,2.37,357,2.027,358,2.027,362,2.099,363,3.843,365,3.396,368,2.715,369,1.414,372,2.546,373,1.414,374,1.99,376,1.655,378,2.224,380,1.894,381,1.99,382,2.105,385,1.414,387,1.414,390,1.526,391,2.099,393,3.188,394,2.099,395,2.099,396,1.414,397,2.099,398,1.99,399,1.99,400,1.99,402,1.99,403,1.99,405,2.224,407,1.99,558,4.234,849,3.308,875,3.646,876,3.054,877,2.761,878,3.054,879,2.224,880,3.498,881,3.498,882,3.959,883,3.498,884,3.498,885,3.498,886,3.498,887,2.761,888,3.498,889,3.498,890,5.034,891,2.543,892,3.498,893,3.498,894,3.727,895,3.054,896,3.959,897,3.498,898,3.498,899,2.761,900,3.498,901,3.498,902,3.498,903,2.543,904,3.498,905,2.369,906,3.498]],["title/modules/JobsModule.html",[36,0.937,53,2.778]],["body/modules/JobsModule.html",[2,1.744,3,0.145,4,0.145,5,0.097,7,0.325,8,0.013,13,0.716,17,2.517,29,0.145,30,0.209,34,0.009,35,0.009,36,1.589,38,1.97,39,2.046,40,2.213,41,2.213,42,2.046,43,3.161,44,2.213,48,4.678,53,5.544,59,4.678,60,2.855,61,2.213,62,2.213,64,2.855,67,2.517,68,1.352,69,4.963,122,1.595,159,0.592,238,4.254,241,4.254,242,3.3,415,2.638,417,1.97,849,2.517,873,4.257,875,5.06,894,4.955,895,4.254,907,4.254,908,4.873,909,4.254,910,4.873,911,4.873,912,4.254,913,4.254,914,3.847,915,4.873,916,4.873]],["title/injectables/JobsService.html",[130,0.795,894,2.608]],["body/injectables/JobsService.html",[3,0.076,4,0.076,5,0.051,7,0.304,8,0.013,12,2.817,13,0.372,16,1.441,17,1.308,23,3.372,29,0.076,30,0.109,31,1.535,32,2.109,33,1.15,34,0.006,35,0.006,68,0.703,75,1.251,76,1.693,77,1.251,78,1.385,104,2.834,108,3.069,114,2.667,118,1.699,122,0.829,130,0.763,131,0.919,133,0.272,134,1.058,136,0.891,138,1.679,139,1.077,152,2.483,155,1.987,158,1.933,159,0.793,160,0.825,161,1.871,162,2.918,168,2.901,190,1.063,191,1.199,215,2.066,217,2.964,242,1.715,263,3.372,264,2.211,281,1.61,282,1.841,283,1.093,285,1.105,293,1.852,301,1.341,320,1.48,324,1.441,327,2.241,328,1.289,330,1.216,331,2.504,335,1.371,337,2.75,355,1.129,356,1.592,357,1.592,358,1.592,369,1.592,372,2.191,373,1.592,376,1.864,382,1.063,385,1.024,387,1.024,396,1.024,420,2.952,424,2.364,425,2.625,426,2.901,428,2.901,433,1.371,435,1.52,436,1.441,437,1.441,440,1.105,441,2.901,443,1.52,444,1.251,447,2.901,448,1.52,449,1.52,450,2.364,451,1.52,452,2.364,453,2.364,454,1.105,455,0.829,456,1.52,457,1.52,458,2.364,460,1.52,461,1.52,462,2.133,463,2.133,464,1.52,465,2.364,466,1.52,467,1.52,468,1.52,469,1.52,470,1.251,471,1.52,472,2.364,474,1.52,475,1.52,476,1.52,477,1.52,478,1.52,479,1.52,480,1.52,481,1.52,482,1.52,483,1.52,484,1.52,485,1.52,486,1.52,487,1.52,488,1.61,489,1.52,492,1.063,493,1.105,506,3.089,515,1.251,558,3.918,575,3.514,577,4.746,849,2.035,872,1.841,878,3.439,890,4.695,894,2.504,896,3.11,912,2.211,917,2.211,918,3.939,919,2.533,920,2.533,921,3.439,922,2.533,923,2.533,924,2.533,925,3.939,926,2.533,927,2.533,928,2.533,929,4.22,930,2.211,931,2.211,932,3.939,933,2.533,934,3.939,935,3.939,936,4.22,937,2.211,938,2.533,939,2.533,940,2.533,941,2.533,942,3.939,943,2.533,944,2.533,945,2.533,946,2.533,947,2.533,948,2.533,949,2.533,950,2.533,951,1.841]],["title/injectables/JwtAuthGuard.html",[25,2.983,130,0.795]],["body/injectables/JwtAuthGuard.html",[3,0.208,4,0.112,5,0.075,7,0.279,8,0.013,12,3.597,13,0.551,18,3.833,19,2.136,25,4.431,29,0.112,30,0.261,31,2.375,34,0.008,35,0.008,91,2.386,111,1.463,118,1.663,122,1.725,123,2.729,130,1.022,131,1.362,133,0.403,134,1.416,136,0.832,138,1.416,139,0.551,155,1.996,158,1.805,159,0.741,160,0.77,161,1.747,187,1.638,191,1.776,215,2.21,221,2.963,283,1.463,297,2.724,327,3.468,328,1.725,330,1.534,331,2.386,342,3.277,390,1.638,399,2.136,530,2.542,532,3.352,829,3.277,952,5.771,953,2.963,954,2.884,955,5.272,956,5.272,957,5.272,958,3.277,959,5.7,960,3.753,961,5.272,962,5.392,963,3.753,964,4.806,965,5.272,966,3.753,967,6.61,968,3.753,969,3.277,970,2.963,971,2.963,972,3.753,973,3.753,974,3.753,975,5.272,976,3.753,977,2.963,978,3.753,979,3.277,980,3.277,981,3.753,982,4.603,983,3.753,984,4.162,985,5.272,986,3.753,987,3.753,988,5.272,989,3.753,990,3.753,991,3.753,992,3.753,993,3.753,994,3.753,995,3.753,996,5.272,997,3.753,998,5.272,999,3.753,1000,3.753,1001,4.811,1002,3.753,1003,3.753,1004,3.753,1005,3.753,1006,3.753,1007,3.753,1008,3.277,1009,3.753]],["title/injectables/JwtStrategy.html",[130,0.795,235,2.778]],["body/injectables/JwtStrategy.html",[3,0.136,4,0.136,5,0.091,7,0.306,8,0.013,13,0.67,16,4.357,17,2.357,19,2.597,29,0.136,30,0.196,31,2.347,32,2.629,34,0.009,35,0.009,108,2.726,118,1.149,130,1.167,131,1.656,133,0.49,134,1.617,136,0.822,138,1.225,139,0.885,152,2.512,158,1.784,159,0.906,160,0.761,161,1.726,162,2.975,190,1.916,192,4.227,193,3.603,215,2.064,216,3.603,217,2.073,235,4.079,286,3.318,291,3.318,293,1.997,297,3.111,298,3.984,301,1.671,302,2.534,303,5.259,951,3.318,954,2.851,977,3.603,1010,3.984,1011,5.259,1012,5.259,1013,4.563,1014,4.563,1015,6.023,1016,4.563,1017,4.563,1018,3.984,1019,3.984,1020,3.984,1021,4.563,1022,4.563,1023,4.563,1024,4.563,1025,4.563,1026,4.563,1027,4.563,1028,4.563,1029,4.563,1030,4.563]],["title/injectables/LocalAuthGuard.html",[20,2.778,130,0.795]],["body/injectables/LocalAuthGuard.html",[3,0.184,4,0.184,5,0.124,7,0.292,8,0.012,13,0.909,18,4.498,19,3.521,20,4.933,29,0.184,30,0.265,34,0.011,35,0.011,130,1.412,131,2.245,953,4.885,954,3.448,1031,5.402,1032,7.285]],["title/injectables/LocalStrategy.html",[130,0.795,236,2.778]],["body/injectables/LocalStrategy.html",[3,0.144,4,0.144,5,0.097,7,0.293,8,0.013,13,0.709,19,2.748,23,4.017,29,0.144,30,0.207,31,1.882,34,0.009,35,0.009,105,3.07,108,2.802,111,1.34,118,1.215,130,1.211,131,1.752,133,0.519,134,1.678,136,0.853,138,1.297,139,1.142,155,1.986,158,1.851,159,0.76,160,0.79,161,1.791,185,3.813,194,3.813,215,1.478,217,2.193,236,4.233,273,4.935,274,5.457,283,1.34,284,4.216,285,2.107,286,3.511,327,2.748,328,1.58,330,1.215,331,3.07,390,2.107,455,1.58,523,3.511,532,3.07,587,4.319,954,2.958,969,4.216,977,3.813,1011,5.457,1012,6.05,1018,4.216,1020,5.457,1033,4.216,1034,4.829,1035,4.829,1036,6.25,1037,4.829,1038,5.457,1039,6.25,1040,4.829,1041,4.829,1042,4.829]],["title/controllers/MailController.html",[0,1.138,1043,2.983]],["body/controllers/MailController.html",[0,1.45,2,1.45,3,0.156,4,0.156,5,0.105,7,0.318,8,0.013,13,0.768,27,2.76,29,0.156,30,0.224,33,2.374,34,0.01,35,0.01,94,3.801,118,1.316,133,0.562,134,1.765,136,0.713,138,1.404,144,2.474,153,1.274,186,2.474,187,2.281,196,2.7,197,2.582,301,1.824,390,2.281,701,4.127,731,5.229,1043,4.78,1044,4.564,1045,5.227,1046,7.546,1047,5.227,1048,5.227,1049,5.227,1050,4.572,1051,4.564,1052,4.564,1053,3.801,1054,3.801,1055,5.227,1056,5.227,1057,5.227,1058,5.227,1059,5.227,1060,5.227,1061,5.227,1062,5.227,1063,5.227,1064,5.227,1065,5.227]],["title/modules/MailModule.html",[36,0.937,54,2.778]],["body/modules/MailModule.html",[2,1.639,3,0.132,4,0.132,5,0.089,7,0.325,8,0.013,13,0.651,16,4.033,17,2.29,29,0.132,30,0.19,34,0.009,35,0.009,36,1.518,38,1.792,39,1.861,40,2.013,41,2.013,42,1.861,43,3.018,44,2.013,54,5.142,60,2.683,61,2.013,62,2.013,64,2.013,67,2.29,68,1.229,93,3.87,94,3.223,96,3.87,107,3.499,108,1.792,119,3.499,122,2.175,145,3.87,155,1.27,159,0.718,271,3.499,328,1.45,415,3.199,417,2.388,849,2.29,873,4.001,914,3.499,951,4.295,1043,4.831,1050,4.827,1051,3.87,1053,4.295,1054,3.223,1066,3.87,1067,3.87,1068,4.432,1069,4.432,1070,4.432,1071,3.87,1072,3.002,1073,5.908,1074,4.432,1075,2.66,1076,4.001,1077,3.87,1078,3.499,1079,3.87,1080,4.432,1081,4.432,1082,4.432,1083,4.432,1084,4.432,1085,4.432,1086,4.432,1087,3.87,1088,3.87,1089,4.432,1090,4.432,1091,4.432,1092,4.432,1093,4.432,1094,4.432,1095,4.432]],["title/injectables/MailService.html",[130,0.795,1050,2.608]],["body/injectables/MailService.html",[3,0.125,4,0.125,5,0.084,7,0.299,8,0.013,13,0.617,29,0.125,30,0.18,31,2.22,32,3.336,34,0.008,35,0.008,68,1.165,75,2.074,76,1.471,77,2.074,78,1.203,108,2.614,118,1.057,130,1.104,131,1.523,133,0.451,134,1.53,136,0.946,138,1.128,153,1.388,158,1.244,159,0.692,160,0.817,161,1.203,215,2.219,217,2.936,254,1.481,275,2.67,301,1.165,366,1.471,420,3.925,433,2.274,561,3.242,570,3.053,701,3.315,846,3.053,849,2.169,872,3.053,877,5.105,921,5.645,931,4.974,964,3.053,1050,3.622,1052,6.526,1053,3.053,1054,3.053,1075,2.52,1077,3.666,1078,3.315,1087,3.666,1096,3.666,1097,6.466,1098,6.934,1099,4.199,1100,4.199,1101,4.199,1102,4.199,1103,4.974,1104,4.199,1105,3.053,1106,4.974,1107,4.199,1108,4.199,1109,5.697,1110,4.199,1111,4.199,1112,4.199,1113,4.199,1114,4.199,1115,4.199,1116,4.199,1117,4.199,1118,4.199,1119,4.199,1120,4.199,1121,4.199,1122,4.199,1123,4.199,1124,4.199,1125,4.199,1126,4.199,1127,4.199,1128,4.199,1129,4.199]],["title/injectables/MulterConfigService.html",[130,0.795,811,2.983]],["body/injectables/MulterConfigService.html",[3,0.123,4,0.123,5,0.138,7,0.288,8,0.013,13,0.604,29,0.123,30,0.176,34,0.008,35,0.008,118,1.61,122,1.345,130,1.088,131,1.492,133,0.442,134,1.508,136,0.873,138,1.508,139,0.94,158,1.218,159,0.777,160,0.52,161,1.178,166,3.589,168,3.37,191,1.946,215,1.258,254,1.46,275,4.066,276,2.467,335,3.896,355,1.178,569,2.989,656,1.867,718,2.989,753,4.903,772,3.589,781,2.989,811,4.083,1071,3.589,1072,3.803,1088,3.589,1130,3.589,1131,6.395,1132,6.873,1133,5.615,1134,4.111,1135,6.395,1136,5.615,1137,4.111,1138,4.111,1139,4.111,1140,4.111,1141,5.615,1142,5.615,1143,5.615,1144,4.111,1145,4.111,1146,4.111,1147,4.111,1148,4.111,1149,4.111,1150,5.615,1151,4.111,1152,4.111,1153,5.615,1154,4.111,1155,4.111,1156,4.111,1157,4.111,1158,6.395,1159,4.111,1160,4.111,1161,4.111,1162,4.111,1163,4.111,1164,4.111,1165,4.111,1166,4.111,1167,4.111,1168,4.111,1169,4.111,1170,5.615,1171,4.111,1172,4.111,1173,4.111,1174,5.615,1175,4.111,1176,4.111,1177,4.111,1178,5.615,1179,5.615,1180,4.111,1181,4.111,1182,4.111,1183,5.615,1184,4.111,1185,5.615,1186,4.111]],["title/classes/Permission.html",[30,0.176,656,1.863]],["body/classes/Permission.html",[3,0.12,4,0.12,5,0.081,7,0.222,8,0.013,29,0.189,30,0.173,34,0.008,35,0.008,36,1.446,68,1.119,78,1.589,122,1.32,133,0.434,136,1.09,139,1.174,153,1.946,159,0.77,160,1.05,215,1.235,254,1.441,293,1.876,301,1.757,417,1.631,440,2.764,492,2.659,493,2.764,495,1.049,501,3.604,504,5.015,506,3.648,508,3.604,509,3.801,510,4.203,515,2.738,521,2.421,522,3.155,538,2.659,625,4.026,626,4.289,656,2.517,693,2.732,711,2.933,851,3.604,852,3.801,853,3.604,1187,2.933,1188,4.034,1189,4.034,1190,4.034,1191,4.034,1192,4.034,1193,4.034,1194,4.034,1195,4.034,1196,4.034,1197,4.034,1198,4.034,1199,4.034,1200,3.522]],["title/controllers/PermissionsController.html",[0,1.138,1201,2.983]],["body/controllers/PermissionsController.html",[0,0.996,2,0.996,3,0.107,4,0.107,5,0.072,7,0.293,8,0.013,10,2.524,13,0.528,29,0.107,30,0.154,33,1.631,34,0.008,35,0.008,76,1.258,104,2.721,111,0.996,118,1.723,133,0.386,134,1.372,136,0.934,138,1.839,139,1.203,144,1.699,152,2.706,153,1.669,155,2.325,158,2.028,159,0.832,160,0.866,161,1.963,183,2.64,184,3.135,186,1.699,187,1.567,190,1.508,196,1.855,197,1.774,283,0.996,297,3.073,320,1.921,328,1.672,330,0.904,355,1.464,356,2.405,357,2.066,358,2.066,362,2.155,363,3.889,368,2.767,369,1.452,372,2.622,373,1.452,374,2.044,376,1.699,378,2.283,380,1.944,381,2.044,382,2.145,385,1.452,387,1.452,390,1.567,391,2.155,394,2.155,395,2.155,396,1.452,397,2.155,398,2.044,399,2.044,400,2.044,402,2.044,403,2.044,405,2.283,407,2.044,622,4.524,656,3.399,879,2.283,882,4.034,887,2.835,891,2.611,1201,3.715,1202,3.135,1203,3.135,1204,2.835,1205,3.591,1206,2.432,1207,4.034,1208,3.591,1209,2.611,1210,3.591,1211,2.611,1212,3.591,1213,5.068,1214,2.835,1215,3.591,1216,3.782,1217,3.135,1218,4.034,1219,3.591,1220,3.591,1221,3.591,1222,3.591,1223,3.591,1224,3.591,1225,3.591]],["title/modules/PermissionsModule.html",[36,0.937,55,2.778]],["body/modules/PermissionsModule.html",[2,1.869,3,0.162,4,0.162,5,0.109,7,0.315,8,0.013,13,0.799,29,0.162,30,0.233,34,0.01,35,0.01,36,1.672,38,2.199,39,2.283,40,2.47,41,2.47,42,2.283,43,3.325,44,2.47,55,5.429,60,3.06,61,2.47,62,2.47,64,2.47,67,2.809,68,1.509,159,0.661,415,2.944,417,2.199,656,2.47,693,4.563,698,4.293,1201,5.324,1216,5.096,1217,4.748,1226,4.748,1227,4.748,1228,5.438,1229,5.438,1230,4.748]],["title/injectables/PermissionsService.html",[130,0.795,1216,2.608]],["body/injectables/PermissionsService.html",[3,0.086,4,0.086,5,0.058,7,0.288,8,0.013,13,0.423,29,0.086,30,0.124,31,1.123,32,1.257,34,0.006,35,0.006,68,0.799,75,1.423,76,1.835,77,1.423,78,1.501,101,1.951,104,2.953,108,3.146,118,1.575,130,0.843,131,1.045,133,0.31,134,1.167,136,0.898,138,1.681,139,1.109,152,2.57,155,2.063,158,1.949,159,0.8,160,0.832,161,1.886,162,3.092,190,1.21,215,1.916,217,3.103,281,1.832,285,1.257,293,1.949,301,1.452,320,1.634,324,1.64,327,2.98,328,1.714,330,0.725,335,1.56,337,2.98,355,1.246,356,1.758,357,1.758,358,1.758,369,1.758,372,2.394,373,1.758,376,2.058,382,1.21,385,1.165,387,1.165,396,1.165,420,3.158,424,2.609,425,2.763,426,3.143,428,3.143,433,1.56,435,1.729,436,1.64,437,1.64,440,1.257,441,3.143,443,1.729,444,1.423,447,1.729,448,1.729,449,1.729,450,2.609,451,1.729,452,2.609,453,2.609,454,1.257,455,0.943,456,1.729,457,1.729,458,2.609,460,1.729,461,1.729,462,2.354,463,2.354,464,1.729,465,2.609,466,1.729,467,1.729,468,1.729,469,1.729,470,1.423,471,1.729,472,2.609,474,1.729,475,1.729,476,1.729,477,1.729,478,1.729,479,1.729,480,1.729,481,1.729,482,1.729,483,1.729,484,1.729,485,1.729,486,1.729,487,1.729,489,2.609,492,1.21,493,1.257,498,2.095,622,4.343,625,2.764,626,3.546,656,2.649,704,3.796,711,2.095,1203,3.796,1213,4.763,1216,2.764,1218,3.432,1230,2.515,1231,2.515,1232,2.881,1233,2.881,1234,2.881,1235,2.881,1236,2.881,1237,2.881,1238,2.881,1239,2.881,1240,4.348,1241,4.348,1242,2.881,1243,2.095,1244,2.095,1245,2.881,1246,2.881,1247,2.881,1248,2.881,1249,2.881,1250,4.348,1251,3.432,1252,2.881,1253,2.881,1254,2.881]],["title/classes/RegisterUserDto.html",[30,0.176,179,2.335]],["body/classes/RegisterUserDto.html",[3,0.095,4,0.095,5,0.064,7,0.223,8,0.013,27,2.574,29,0.14,30,0.28,34,0.007,35,0.007,78,1.344,111,2.265,133,0.343,136,0.964,139,1.184,153,1.665,159,0.881,160,0.935,179,2.668,188,4.606,254,1.219,283,1.701,293,0.944,301,2.086,302,2.654,330,2.069,366,2.148,425,2.334,454,2.675,455,2.371,495,0.829,497,4.019,538,1.968,544,3.641,549,2.026,553,3.175,554,3.175,556,3.175,557,1.391,559,3.499,560,4.017,562,3.01,580,2.159,583,3.679,584,2.026,585,1.814,586,3.164,587,4.019,588,4.489,589,4.489,590,2.159,591,2.517,592,2.517,595,3.375,641,2.318,1255,3.188,1256,3.188,1257,3.188,1258,3.188,1259,3.188,1260,3.188,1261,3.188]],["title/interfaces/Response.html",[164,2.608,843,2.608]],["body/interfaces/Response.html",[3,0.149,4,0.149,5,0.1,7,0.307,8,0.013,13,0.736,29,0.191,30,0.215,34,0.009,35,0.009,91,3.184,118,1.261,130,1.24,133,0.538,139,1.036,160,0.891,164,4.068,187,2.186,254,1.663,390,2.186,425,2.96,559,3.35,718,3.642,755,5.708,843,3.184,844,3.954,959,5.566,962,4.652,964,3.642,984,3.954,1262,3.954,1263,6.702,1264,5.586,1265,5.586,1266,5.586,1267,3.954,1268,4.373,1269,4.373,1270,3.642,1271,3.642,1272,4.373,1273,5.586,1274,4.373,1275,4.373,1276,4.373,1277,4.373,1278,4.373]],["title/classes/Resume.html",[30,0.176,1279,2.462]],["body/classes/Resume.html",[3,0.105,4,0.105,5,0.07,7,0.257,8,0.013,29,0.175,30,0.15,34,0.007,35,0.007,68,0.973,78,1.441,122,1.148,133,0.377,136,1.09,139,1.143,153,1.946,160,1.05,215,1.074,254,1.307,293,1.899,301,2.017,366,1.23,416,3.064,417,2.032,440,2.563,492,2.692,493,2.563,495,0.912,501,3.342,504,4.955,506,3.593,508,3.65,509,4.465,510,4.019,515,2.483,521,2.106,522,2.86,537,2.231,538,3.299,563,3.404,634,4.27,635,4.27,636,4.077,637,4.637,638,4.27,849,1.813,851,3.342,852,3.525,853,3.65,914,2.77,1078,2.77,1279,3.017,1280,2.551,1281,5.128,1282,5.063,1283,5.063,1284,3.509,1285,3.509,1286,3.509,1287,3.509,1288,3.509,1289,3.509,1290,3.509,1291,3.509,1292,3.509,1293,3.509,1294,3.509,1295,3.509,1296,3.509,1297,3.509,1298,3.509,1299,2.77,1300,2.551,1301,3.064]],["title/controllers/ResumesController.html",[0,1.138,1302,2.983]],["body/controllers/ResumesController.html",[0,0.917,2,0.917,3,0.099,4,0.099,5,0.066,7,0.293,8,0.013,10,2.378,12,3.424,13,0.486,29,0.099,30,0.142,33,1.501,34,0.007,35,0.007,76,1.158,104,2.618,111,0.917,118,1.741,133,0.355,134,1.293,136,0.944,138,1.858,139,1.19,144,1.564,152,2.748,153,1.686,155,2.35,158,2.049,159,0.841,160,0.875,161,1.983,168,4.153,183,2.487,186,1.564,187,1.442,190,1.387,191,1.564,196,1.707,197,1.633,211,2.609,283,0.917,320,1.809,328,1.575,330,0.832,355,1.38,356,2.295,357,1.946,358,1.946,362,1.983,363,3.743,368,2.606,369,1.336,372,2.657,373,1.336,374,1.881,376,1.564,378,2.101,380,1.789,381,1.881,382,2.021,385,1.336,387,1.336,390,1.442,391,1.983,393,3.06,394,1.983,395,1.983,396,1.336,397,1.983,398,1.881,399,1.881,400,1.881,402,1.881,403,1.881,405,2.101,407,1.881,631,3.407,636,3.06,647,3.965,879,2.101,903,2.403,905,2.238,1204,2.609,1206,2.238,1207,3.8,1209,2.403,1211,2.403,1214,2.609,1279,4.551,1302,3.5,1303,2.885,1304,4.957,1305,4.813,1306,2.885,1307,3.305,1308,3.305,1309,3.305,1310,3.305,1311,4.813,1312,3.305,1313,3.305,1314,3.305,1315,4.957,1316,3.305,1317,3.609,1318,2.885,1319,3.8,1320,3.305,1321,3.305,1322,3.305,1323,3.305,1324,3.305,1325,3.305,1326,3.305,1327,3.305,1328,3.305]],["title/modules/ResumesModule.html",[36,0.937,56,2.778]],["body/modules/ResumesModule.html",[2,1.824,3,0.156,4,0.156,5,0.105,7,0.318,8,0.013,13,0.768,29,0.156,30,0.224,34,0.01,35,0.01,36,1.642,38,2.113,39,2.195,40,2.374,41,2.374,42,2.195,43,3.266,44,2.374,48,4.764,56,5.518,60,2.986,61,2.374,62,2.374,64,2.986,67,2.7,68,1.45,159,0.635,415,2.83,417,2.113,913,4.564,1279,3.137,1300,4.78,1302,5.229,1317,5.046,1318,4.564,1329,4.564,1330,4.564,1331,5.227,1332,5.227,1333,5.227,1334,4.564,1335,5.227]],["title/injectables/ResumesService.html",[130,0.795,1317,2.608]],["body/injectables/ResumesService.html",[3,0.075,4,0.075,5,0.05,7,0.288,8,0.013,12,2.801,13,0.368,23,3.359,29,0.075,30,0.107,31,1.522,32,1.705,34,0.006,35,0.006,68,0.695,75,1.238,76,1.682,77,1.238,78,1.376,104,2.824,108,3.139,118,1.636,130,0.757,131,0.909,133,0.269,134,1.049,136,0.887,138,1.672,139,1.074,152,2.597,155,2.025,158,1.926,159,0.84,160,0.822,161,1.864,162,3.076,168,2.881,190,1.052,191,1.186,215,1.799,217,2.953,285,1.094,293,2.093,301,1.727,320,1.468,324,1.426,328,1.278,330,0.631,335,1.357,337,3.7,355,1.12,356,1.579,357,1.579,358,1.579,369,1.579,372,2.278,373,1.579,376,1.849,382,1.052,385,1.013,387,1.013,396,1.013,420,2.935,424,2.345,425,2.614,426,2.881,428,2.881,433,1.357,434,1.504,435,1.504,436,1.426,437,1.426,440,1.094,441,3.737,443,1.504,444,2.372,447,2.881,448,1.504,449,1.504,450,2.345,451,1.504,452,2.345,453,2.345,454,1.094,455,0.82,456,1.504,457,1.504,458,2.345,460,1.504,461,1.504,462,2.115,463,2.115,464,1.504,465,2.345,466,1.504,467,1.504,468,1.504,469,1.504,470,1.238,471,1.504,472,3.254,474,1.504,475,1.504,476,1.504,477,1.504,478,1.504,479,1.504,480,1.504,481,1.504,482,1.504,483,1.504,484,1.504,485,1.504,486,1.504,487,1.504,488,1.593,489,1.504,492,2.016,493,1.094,498,1.822,506,1.93,631,2.881,634,2.84,635,1.822,636,3.736,638,2.84,647,3.447,853,2.223,930,2.188,936,4.192,937,2.188,1072,2.646,1279,3.902,1281,3.411,1299,1.979,1306,3.411,1315,4.555,1317,2.484,1319,3.084,1334,2.188,1336,2.188,1337,3.907,1338,2.506,1339,2.506,1340,3.907,1341,2.506,1342,2.506,1343,3.907,1344,2.506,1345,2.506,1346,2.506,1347,2.506,1348,2.506,1349,2.506,1350,3.907,1351,2.506,1352,2.506,1353,2.506,1354,2.506,1355,2.506,1356,2.506,1357,3.907,1358,2.506,1359,2.506,1360,2.506,1361,2.506,1362,3.084]],["title/classes/Role.html",[30,0.176,302,1.542]],["body/classes/Role.html",[3,0.115,4,0.115,5,0.077,7,0.248,8,0.013,29,0.185,30,0.166,34,0.008,35,0.008,68,1.073,78,1.775,122,1.266,133,0.416,136,1.082,139,1.099,153,1.931,159,0.814,160,1.052,215,1.184,254,1.4,293,1.834,297,3.199,301,1.718,302,2.328,417,2.177,434,2.321,440,2.703,492,2.6,493,2.703,495,1.005,500,3.525,501,3.525,504,4.977,506,3.601,508,3.525,509,4.019,510,4.148,515,3.308,521,2.321,522,3.064,537,2.459,538,2.812,579,3.937,656,2.813,694,3.054,695,2.459,698,3.054,712,2.619,851,3.525,852,3.717,853,3.525,1282,3.054,1283,3.054,1363,2.812,1364,3.868,1365,3.868,1366,3.868,1367,3.868,1368,3.868,1369,3.868,1370,3.868,1371,3.868,1372,3.868,1373,3.868,1374,3.868,1375,3.868,1376,3.868,1377,3.377]],["title/controllers/RolesController.html",[0,1.138,1378,2.983]],["body/controllers/RolesController.html",[0,0.999,2,0.999,3,0.107,4,0.107,5,0.072,7,0.293,8,0.013,10,2.53,13,0.529,29,0.107,30,0.154,33,1.636,34,0.008,35,0.008,76,1.262,104,2.725,111,0.999,118,1.726,133,0.387,134,1.375,136,0.936,138,1.841,139,1.204,144,1.705,152,2.67,153,1.671,155,2.313,158,2.031,159,0.833,160,0.867,161,1.965,183,2.646,186,1.705,187,1.572,190,1.513,192,3.227,196,1.861,197,1.78,283,0.999,302,2.816,320,1.925,328,1.676,330,0.907,355,1.468,356,2.409,357,2.071,358,2.071,362,2.162,363,3.895,365,3.469,368,2.773,369,1.457,372,2.625,373,1.457,374,2.05,376,1.705,378,2.29,380,1.951,381,2.05,382,2.15,385,1.457,387,1.457,390,1.572,391,2.162,393,3.256,394,2.162,395,2.162,396,1.457,397,2.162,398,2.05,399,2.05,400,2.05,402,2.05,403,2.05,405,2.29,407,2.05,648,4.529,879,2.29,891,2.62,905,2.44,1204,2.845,1206,2.44,1209,2.62,1211,2.62,1214,2.845,1378,3.724,1379,3.146,1380,5.203,1381,3.146,1382,3.603,1383,3.603,1384,3.603,1385,3.603,1386,5.073,1387,3.603,1388,3.146,1389,4.044,1390,3.603,1391,3.603,1392,3.603,1393,3.603,1394,3.603,1395,3.603,1396,3.603,1397,3.603]],["title/modules/RolesModule.html",[36,0.937,57,2.462]],["body/modules/RolesModule.html",[2,1.835,3,0.157,4,0.157,5,0.106,7,0.312,8,0.013,13,0.775,29,0.157,30,0.226,34,0.01,35,0.01,36,1.65,38,2.134,39,2.216,40,2.397,41,2.397,42,2.216,43,3.281,44,3.281,57,4.846,60,3.004,61,2.397,62,2.397,64,2.397,67,2.727,68,1.464,159,0.642,192,4.539,302,1.984,415,2.858,417,2.134,695,4.205,699,3.838,1378,5.252,1388,4.608,1398,4.608,1399,4.608,1400,4.608,1401,5.278,1402,5.278,1403,4.608]],["title/injectables/RolesService.html",[130,0.795,192,2.221]],["body/injectables/RolesService.html",[3,0.082,4,0.082,5,0.055,7,0.29,8,0.013,13,0.406,29,0.082,30,0.118,31,1.077,32,1.206,34,0.006,35,0.006,36,0.631,68,0.766,75,1.365,76,1.788,77,1.365,78,1.463,104,2.915,108,3.121,118,1.63,130,0.816,131,1.002,133,0.297,134,1.131,136,0.884,138,1.65,139,1.099,152,2.542,155,2.079,158,1.918,159,0.864,160,0.819,161,1.856,162,3.036,190,1.16,192,2.28,215,1.881,217,3.153,281,1.756,285,1.206,293,2.056,297,1.427,301,1.416,302,2.146,320,1.583,324,1.572,327,2.905,328,1.67,330,0.695,335,1.496,337,2.905,355,1.207,356,1.703,357,1.703,358,1.703,369,1.703,372,2.269,373,1.703,376,1.993,382,1.16,385,1.117,387,1.117,396,1.117,420,3.091,424,2.528,425,2.719,426,3.063,428,3.063,433,1.496,435,1.658,436,1.572,437,1.572,440,1.206,441,3.063,443,1.658,444,3.199,447,1.658,448,1.658,449,1.658,450,2.528,451,1.658,452,2.528,453,2.528,454,1.206,455,0.904,456,1.658,457,1.658,458,2.528,460,1.658,461,1.658,462,2.28,463,2.28,464,1.658,465,2.528,466,1.658,467,1.658,468,1.658,469,1.658,470,2.081,471,1.658,472,2.528,474,1.658,475,1.658,476,1.658,477,1.658,478,1.658,479,1.658,480,1.658,481,1.658,482,1.658,483,1.658,484,1.658,485,1.658,486,1.658,487,1.658,488,2.678,489,2.528,492,1.16,493,1.206,498,2.009,625,1.756,626,1.871,648,4.281,705,3.325,712,1.871,714,3.062,737,2.181,739,2.181,1072,1.871,1243,2.009,1244,2.009,1362,2.181,1381,3.677,1386,4.701,1389,3.325,1403,2.412,1404,2.412,1405,2.763,1406,2.763,1407,2.763,1408,2.763,1409,2.763,1410,2.763,1411,2.763,1412,2.412,1413,2.763,1414,4.212,1415,2.763,1416,2.763,1417,2.763,1418,2.763,1419,2.763,1420,2.763,1421,2.763,1422,2.763,1423,4.212,1424,2.763,1425,2.763,1426,2.763,1427,2.412,1428,2.412,1429,2.763]],["title/classes/Subscriber.html",[30,0.176,1075,2.462]],["body/classes/Subscriber.html",[3,0.123,4,0.123,5,0.082,7,0.225,8,0.013,29,0.191,30,0.177,34,0.008,35,0.008,68,1.143,78,1.611,122,1.348,133,0.443,136,1.084,139,1.154,153,1.935,159,0.778,160,1.049,215,1.261,254,1.462,293,1.896,301,2.061,417,2.273,440,2.794,492,2.688,493,2.794,495,1.071,501,3.643,504,4.996,506,3.671,508,3.643,509,3.842,510,4.229,515,2.778,521,2.472,522,3.2,537,2.619,538,2.688,561,3.643,851,3.643,852,3.842,853,3.643,1075,3.375,1076,2.789,1105,2.995,1430,2.995,1431,4.119,1432,4.119,1433,4.119,1434,4.119,1435,4.119,1436,4.119,1437,4.119,1438,4.119,1439,4.119,1440,4.119,1441,3.596]],["title/controllers/SubscribersController.html",[0,1.138,1442,2.983]],["body/controllers/SubscribersController.html",[0,0.955,2,0.955,3,0.103,4,0.103,5,0.069,7,0.289,8,0.013,10,2.449,13,0.506,29,0.103,30,0.148,33,1.563,34,0.007,35,0.007,76,1.206,104,2.669,111,0.955,118,1.766,133,0.37,134,1.331,136,0.957,138,1.884,139,1.178,144,1.629,152,2.768,153,1.71,155,2.334,158,2.078,159,0.853,160,0.887,161,2.011,183,1.778,186,1.629,187,1.502,190,1.445,196,1.778,197,1.7,211,2.717,283,0.955,320,1.863,328,1.622,330,0.866,355,1.421,356,2.349,357,2.004,358,2.004,362,2.066,363,3.815,365,3.357,368,2.684,369,1.392,372,2.458,373,1.392,374,1.959,380,2.684,381,1.959,382,2.081,385,1.392,387,1.392,390,1.502,391,2.066,393,3.151,394,2.066,395,2.066,396,1.392,397,2.066,398,1.959,399,1.959,400,1.959,402,1.959,403,1.959,407,1.959,561,2.821,660,4.46,879,2.188,899,2.717,903,2.503,905,2.331,1106,3.005,1206,2.331,1209,2.503,1211,2.503,1442,3.604,1443,3.005,1444,4.957,1445,3.005,1446,3.442,1447,3.442,1448,7.538,1449,3.442,1450,3.442,1451,3.442,1452,3.442,1453,4.957,1454,3.442,1455,3.442,1456,3.005,1457,4.752,1458,3.442,1459,3.442,1460,3.693,1461,3.005,1462,3.914,1463,4.587,1464,3.442,1465,3.442,1466,3.442,1467,3.442,1468,3.442,1469,3.442,1470,3.442,1471,3.442,1472,3.005,1473,3.442,1474,3.442]],["title/modules/SubscribersModule.html",[36,0.937,58,2.778]],["body/modules/SubscribersModule.html",[2,1.86,3,0.161,4,0.161,5,0.108,7,0.314,8,0.013,13,0.793,29,0.161,30,0.231,34,0.01,35,0.01,36,1.666,38,2.182,39,2.266,40,2.451,41,2.451,42,2.266,43,3.314,44,2.451,58,5.419,60,3.046,61,2.451,62,2.451,64,2.451,67,2.788,68,1.497,159,0.656,415,2.922,417,2.182,1075,3.239,1076,4.542,1079,4.712,1442,5.306,1460,5.087,1461,4.712,1475,4.712,1476,4.712,1477,5.397,1478,5.397,1479,4.712]],["title/injectables/SubscribersService.html",[130,0.795,1460,2.608]],["body/injectables/SubscribersService.html",[3,0.082,4,0.082,5,0.055,7,0.284,8,0.013,13,0.402,29,0.082,30,0.117,31,1.629,32,1.193,34,0.006,35,0.006,68,0.759,75,1.351,76,1.777,77,1.351,78,1.454,104,2.905,108,3.184,118,1.623,122,0.895,130,0.81,131,0.992,133,0.294,134,1.122,136,0.916,138,1.732,139,1.042,152,2.647,155,2.139,158,1.987,159,0.816,160,0.848,161,1.923,162,3.186,190,1.148,215,2.171,217,3.143,281,1.739,285,1.193,293,1.91,301,2.041,320,1.571,324,1.556,327,2.378,328,1.368,330,0.688,335,1.481,337,2.886,355,1.198,356,1.69,357,1.69,358,1.69,366,0.958,369,1.69,372,2.143,373,1.69,382,1.148,385,1.106,387,1.106,396,1.106,420,3.075,424,2.508,425,2.708,426,3.044,428,3.044,433,1.481,435,1.641,436,1.556,437,1.556,440,1.193,441,3.044,443,1.641,444,2.064,447,1.641,448,1.641,449,1.641,450,2.508,451,1.641,452,2.508,453,2.508,454,1.193,455,0.895,456,1.641,457,1.641,458,2.508,460,1.641,461,1.641,462,2.263,463,2.263,464,1.641,465,2.508,466,1.641,467,1.641,468,1.641,469,1.641,470,1.351,471,1.641,472,3.408,474,1.641,475,1.641,476,1.641,477,1.641,478,1.641,479,1.641,480,1.641,481,1.641,482,1.641,483,1.641,484,1.641,485,1.641,486,1.641,487,1.641,488,1.739,489,1.641,492,1.148,493,1.193,561,1.556,660,4.266,1001,3.299,1075,1.641,1103,2.388,1105,1.988,1243,1.988,1244,1.988,1251,2.159,1445,3.649,1456,3.649,1457,4.368,1460,2.657,1462,3.299,1479,2.388,1480,2.388,1481,4.179,1482,2.735,1483,2.735,1484,4.179,1485,2.735,1486,2.735,1487,2.735,1488,4.179,1489,2.735,1490,2.735,1491,2.735,1492,5.072,1493,2.388,1494,2.388,1495,2.388,1496,2.388,1497,2.735,1498,2.735,1499,2.735,1500,4.179,1501,2.735,1502,2.735]],["title/injectables/TransformInterceptor.html",[130,0.795,1271,2.983]],["body/injectables/TransformInterceptor.html",[3,0.145,4,0.145,5,0.097,7,0.304,8,0.013,13,0.714,29,0.187,30,0.208,31,1.895,34,0.009,35,0.009,91,3.091,118,1.224,130,1.217,131,1.764,133,0.523,134,1.686,136,0.857,138,1.306,139,0.714,158,1.859,159,0.763,160,0.794,161,1.799,164,3.091,187,2.122,390,2.122,425,2.041,559,2.739,718,3.535,755,5.055,843,3.091,958,4.245,959,6.15,962,5.342,964,4.564,984,3.838,1262,3.838,1263,5.481,1264,5.481,1265,6.415,1266,6.07,1267,3.838,1268,4.245,1269,4.245,1270,3.535,1271,4.564,1272,6.07,1273,6.415,1274,4.245,1275,4.245,1276,4.245,1277,4.245,1278,4.245,1503,4.862,1504,4.862,1505,4.862]],["title/classes/UpdateCompanyDto.html",[30,0.176,377,2.778]],["body/classes/UpdateCompanyDto.html",[3,0.169,4,0.169,5,0.113,7,0.276,8,0.012,29,0.169,30,0.242,34,0.01,35,0.01,111,1.568,133,0.607,136,0.771,139,1.014,160,0.714,254,1.794,283,1.568,285,3.011,293,2.206,330,1.422,355,1.62,360,3.593,377,4.673,386,4.462,396,2.285,470,2.792,495,1.469,523,4.109,594,4.462,954,3.525,1506,6.024,1507,6.9,1508,5.652,1509,3.927,1510,3.06,1511,3.06,1512,4.935,1513,4.935,1514,4.935,1515,5.652,1516,4.935,1517,5.652,1518,5.652]],["title/classes/UpdateFileDto.html",[30,0.176,764,2.778]],["body/classes/UpdateFileDto.html",[3,0.184,4,0.184,5,0.123,7,0.291,8,0.012,29,0.184,30,0.265,34,0.011,35,0.011,355,1.768,495,1.604,601,3.922,603,4.871,764,4.925,779,4.871,954,3.442,1509,3.511,1510,3.34,1511,3.34,1519,5.386,1520,7.272]],["title/classes/UpdateJobDto.html",[30,0.176,890,2.778]],["body/classes/UpdateJobDto.html",[3,0.184,4,0.184,5,0.123,7,0.291,8,0.012,29,0.184,30,0.265,34,0.011,35,0.011,355,1.768,495,1.604,543,4.485,558,3.703,890,4.925,896,4.871,954,3.442,1509,3.511,1510,3.34,1511,3.34,1521,5.386,1522,7.272]],["title/classes/UpdatePermissionDto.html",[30,0.176,1213,2.778]],["body/classes/UpdatePermissionDto.html",[3,0.184,4,0.184,5,0.123,7,0.291,8,0.012,29,0.184,30,0.265,34,0.011,35,0.011,355,1.768,495,1.604,622,3.922,624,4.871,954,3.442,1213,4.925,1218,4.871,1509,3.511,1510,3.34,1511,3.34,1523,5.386,1524,7.272]],["title/classes/UpdateResumeDto.html",[30,0.176,1315,2.778]],["body/classes/UpdateResumeDto.html",[3,0.184,4,0.184,5,0.123,7,0.291,8,0.012,29,0.184,30,0.265,34,0.011,35,0.011,355,1.768,495,1.604,631,3.703,633,4.485,954,3.442,1315,4.925,1319,4.871,1509,3.511,1510,3.34,1511,3.34,1525,5.386,1526,7.272]],["title/classes/UpdateRoleDto.html",[30,0.176,1386,2.778]],["body/classes/UpdateRoleDto.html",[3,0.184,4,0.184,5,0.123,7,0.291,8,0.012,29,0.184,30,0.265,34,0.011,35,0.011,355,1.768,495,1.604,648,3.922,650,4.871,954,3.442,1386,4.925,1389,4.871,1509,3.511,1510,3.34,1511,3.34,1527,5.386,1528,7.272]],["title/classes/UpdateSubscriberDto.html",[30,0.176,1457,2.778]],["body/classes/UpdateSubscriberDto.html",[3,0.184,4,0.184,5,0.123,7,0.291,8,0.012,29,0.184,30,0.265,34,0.011,35,0.011,355,1.768,495,1.604,660,3.922,662,4.871,954,3.442,1457,4.925,1462,4.871,1509,3.511,1510,3.34,1511,3.34,1529,5.386,1530,7.272]],["title/classes/UpdateUserDto.html",[30,0.176,1531,2.778]],["body/classes/UpdateUserDto.html",[3,0.15,4,0.15,5,0.1,7,0.283,8,0.013,12,2.593,29,0.191,30,0.303,34,0.01,35,0.01,111,1.778,133,0.54,136,0.685,139,0.941,153,1.223,160,0.635,183,3.646,189,3.4,215,1.961,254,1.666,271,3.964,285,2.191,293,2.202,330,1.776,355,1.439,372,2.245,396,2.591,400,2.857,470,2.48,495,1.305,532,3.192,534,4.074,535,5.132,544,2.91,557,2.191,559,2.191,580,3.4,585,3.647,587,4.017,595,2.593,847,3.964,954,3.34,980,4.383,1008,4.383,1509,2.857,1510,2.718,1511,2.718,1512,4.383,1531,4.78,1532,5.595,1533,6.408,1534,5.02,1535,5.02,1536,5.02,1537,5.02,1538,5.02,1539,5.02,1540,6.408,1541,5.02,1542,5.02,1543,5.02,1544,5.02]],["title/classes/User.html",[30,0.176,155,1.176]],["body/classes/User.html",[3,0.096,4,0.096,5,0.065,7,0.224,8,0.013,29,0.167,30,0.203,34,0.007,35,0.007,68,0.895,78,1.605,111,0.895,114,3.791,122,1.056,133,0.347,136,1.09,139,1.186,153,1.946,155,1.767,159,0.68,160,1.051,215,0.987,224,4.071,254,1.229,283,0.895,285,1.408,293,1.826,301,1.966,302,2.317,366,1.962,417,2.264,434,1.936,440,2.443,455,1.056,462,1.747,463,1.747,492,2.35,493,2.443,495,0.839,497,3.186,501,3.186,504,5.003,506,3.389,508,3.509,509,3.94,510,4.137,515,2.336,521,1.936,522,2.691,523,2.345,524,5.383,525,3.734,526,2.816,527,3.203,528,3.438,529,2.547,530,2.185,531,4.129,532,3.006,533,2.816,534,2.051,535,2.345,536,2.816,537,2.051,538,2.976,540,2.816,541,2.547,587,3.186,588,3.559,589,3.559,691,2.185,696,2.185,699,2.345,713,3.438,851,3.186,852,3.36,853,3.186,1282,3.734,1283,3.734,1545,2.345,1546,3.226,1547,3.226,1548,3.226,1549,3.226,1550,3.226,1551,3.226,1552,3.226,1553,3.226,1554,3.226,1555,3.226,1556,3.226,1557,3.226,1558,3.226,1559,3.226,1560,3.226,1561,3.226,1562,2.816]],["title/controllers/UsersController.html",[0,1.138,70,2.778]],["body/controllers/UsersController.html",[0,0.99,2,0.99,3,0.106,4,0.106,5,0.071,7,0.293,8,0.013,10,2.512,11,2.816,13,0.524,27,1.498,29,0.106,30,0.153,33,1.62,34,0.008,35,0.008,70,3.444,76,1.25,104,2.713,111,0.99,118,1.719,133,0.383,134,1.366,136,0.932,138,1.834,139,1.191,144,1.688,152,2.702,153,1.664,155,2.371,158,2.023,159,0.83,160,0.863,161,1.958,183,1.843,186,1.688,187,1.557,189,3.444,196,1.843,197,1.762,263,3.062,283,0.99,320,1.912,328,2.114,330,0.898,355,1.458,356,2.396,357,2.056,358,2.056,362,2.141,363,3.878,365,3.444,368,2.754,369,1.442,372,2.488,373,1.442,374,2.03,380,2.754,381,2.03,382,2.135,385,1.442,387,1.442,390,1.557,391,2.141,393,3.233,394,2.141,395,2.141,396,1.442,397,2.141,398,2.03,399,2.03,400,2.03,402,2.03,403,2.03,407,2.03,425,1.498,454,1.557,455,1.167,585,4.041,879,2.268,882,2.816,887,2.816,891,2.594,899,2.816,903,2.594,905,2.416,1206,2.416,1472,3.114,1531,4.809,1563,3.114,1564,5.175,1565,3.567,1566,3.567,1567,3.567,1568,3.567,1569,3.567,1570,3.567,1571,3.567,1572,3.567,1573,3.114,1574,3.567,1575,3.567,1576,3.114,1577,3.114,1578,3.567,1579,3.567,1580,3.567,1581,3.567,1582,3.567,1583,3.567,1584,3.567,1585,3.567,1586,3.567]],["title/modules/UsersModule.html",[36,0.937,59,2.462]],["body/modules/UsersModule.html",[2,1.63,3,0.131,4,0.131,5,0.088,7,0.319,8,0.013,13,0.646,29,0.131,30,0.189,34,0.009,35,0.009,36,1.613,38,1.777,39,1.846,40,1.996,41,1.996,42,1.846,43,3.006,44,3.006,57,2.638,59,4.642,60,2.668,61,1.996,62,1.996,64,1.996,67,2.271,68,1.219,70,4.482,100,3.471,101,2.977,111,1.219,123,3.196,155,1.684,159,0.859,245,3.838,263,4.218,283,1.219,285,2.888,302,1.652,372,2.059,398,2.502,415,3.181,417,2.375,434,2.638,444,2.172,455,1.923,470,2.172,527,2.977,528,3.196,529,3.471,530,2.977,534,2.795,535,3.196,586,2.502,691,4.482,695,3.735,696,2.977,697,3.838,699,3.196,846,3.196,1513,3.838,1514,3.838,1516,3.838,1576,3.838,1587,3.838,1588,3.838,1589,4.396,1590,4.396,1591,4.396,1592,3.838,1593,3.838,1594,4.396,1595,4.396,1596,4.396,1597,4.396,1598,4.396,1599,3.838,1600,5.875,1601,5.13,1602,4.396,1603,4.396,1604,5.13,1605,3.838,1606,4.396,1607,4.396,1608,4.396,1609,4.396,1610,4.396,1611,4.396,1612,4.396]],["title/injectables/UsersService.html",[130,0.795,263,2.119]],["body/injectables/UsersService.html",[3,0.056,4,0.056,5,0.038,7,0.276,8,0.013,13,0.276,29,0.056,30,0.081,31,1.208,32,1.353,34,0.005,35,0.005,36,0.429,68,0.521,75,0.928,76,1.609,77,0.928,78,1.134,101,2.68,104,2.632,108,3.02,111,0.86,118,1.734,123,1.366,124,2.707,127,1.641,130,0.601,131,0.682,133,0.202,134,0.833,136,0.923,138,1.624,139,1.113,152,2.263,155,2.006,158,1.857,159,0.883,160,0.793,161,1.797,162,2.703,179,2.614,189,2.1,215,2.286,217,3.179,224,3.34,254,0.806,260,2.707,263,1.602,273,2.448,275,2.516,276,2.376,281,1.195,283,0.86,285,0.82,291,2.254,293,1.961,301,1.837,302,2.175,320,1.165,322,1.484,324,1.069,327,2.614,328,1.503,330,0.473,335,1.018,337,2.252,355,0.889,356,1.254,357,1.254,358,1.254,366,1.086,368,1.018,369,1.254,372,1.781,373,1.254,382,1.302,385,0.76,387,0.76,396,0.76,420,3.133,424,1.861,425,2.297,426,2.376,428,2.376,433,1.018,434,2.376,435,1.128,436,1.069,437,1.069,441,1.861,442,1.641,443,1.861,444,2.859,445,1.641,446,1.641,447,1.128,448,1.128,449,1.128,450,1.861,451,1.128,452,1.861,453,2.376,454,0.82,455,1.015,456,1.128,457,1.128,458,1.861,460,1.128,461,1.128,462,1.679,463,1.679,464,1.128,465,1.861,466,1.128,467,1.128,468,1.128,469,1.128,470,2.269,471,1.128,472,3.876,474,1.128,475,1.128,476,1.128,477,1.128,478,1.128,479,1.128,480,1.128,481,1.128,482,1.128,483,1.128,484,1.128,485,1.128,486,1.128,487,1.128,488,1.971,489,1.861,492,0.789,493,0.82,497,2.614,525,2.448,527,1.273,528,1.366,532,1.195,534,1.195,541,1.484,585,2.614,586,1.069,587,3.113,588,2.92,589,2.92,696,1.273,703,1.641,705,3.125,708,3.456,712,1.273,713,1.366,716,2.254,721,1.641,737,1.484,739,1.484,740,1.641,751,1.641,846,1.366,847,1.484,851,1.765,1001,3.626,1038,1.641,1072,2.68,1243,2.254,1244,2.254,1251,1.484,1362,3.626,1412,1.641,1427,1.641,1428,1.641,1493,2.707,1494,2.707,1495,2.707,1496,2.707,1531,3.705,1573,2.707,1577,1.641,1592,1.641,1593,1.641,1599,1.641,1601,1.641,1604,1.641,1605,1.641,1613,1.641,1614,3.958,1615,3.958,1616,3.958,1617,3.101,1618,3.101,1619,3.101,1620,1.879,1621,3.101,1622,1.879,1623,3.101,1624,1.879,1625,1.879,1626,3.101,1627,1.879,1628,3.101,1629,5.471,1630,1.879,1631,3.101,1632,1.879,1633,1.879,1634,1.879,1635,1.879,1636,1.879,1637,1.879,1638,1.879,1639,1.879,1640,1.879,1641,1.879,1642,2.707,1643,3.101,1644,3.101,1645,3.101,1646,1.641,1647,1.879,1648,1.879,1649,1.879,1650,1.879,1651,3.101,1652,1.879,1653,1.879,1654,5.082,1655,4.593,1656,3.101,1657,1.879,1658,3.101,1659,1.879,1660,1.879,1661,1.879,1662,1.879,1663,1.879,1664,1.879,1665,3.101,1666,1.879,1667,3.958,1668,1.879,1669,3.101,1670,1.879,1671,1.879,1672,1.879,1673,1.879,1674,1.879]],["title/coverage.html",[1675,4.896]],["body/coverage.html",[0,2.074,1,1.895,5,0.081,6,2.275,8,0.013,14,1.657,20,1.765,23,1.346,25,1.895,27,1.094,30,0.35,34,0.006,35,0.006,42,1.094,70,1.765,130,1.515,132,2.275,142,1.895,143,2.275,152,0.913,155,1.154,160,0.329,164,1.657,179,1.483,186,1.233,188,3.129,192,1.411,235,1.765,236,1.765,253,2.275,263,1.346,302,0.98,328,0.853,352,1.895,353,2.275,360,1.657,366,1.724,377,1.765,383,1.657,413,1.895,418,2.275,496,2.928,542,3.179,543,3.578,558,1.564,580,3.749,585,1.483,593,2.275,594,3.179,601,1.657,602,2.275,603,3.179,622,1.657,623,2.275,624,3.179,631,1.564,632,3.179,633,3.578,647,1.657,648,1.657,649,2.275,650,3.179,656,1.184,660,1.657,661,2.275,662,3.179,681,1.895,682,2.275,684,1.657,691,1.765,693,1.765,695,1.657,700,2.275,714,1.895,715,2.057,716,1.895,731,6.249,756,2.275,757,1.895,758,2.275,764,1.765,777,1.657,811,1.895,815,2.275,826,1.895,827,2.275,843,2.56,845,2.275,849,1.346,850,2.928,873,1.765,875,1.895,876,2.275,890,1.765,894,1.657,917,2.275,952,2.275,953,3.179,970,2.057,971,2.057,1010,2.275,1031,2.275,1033,2.275,1043,1.895,1044,2.275,1050,1.657,1075,1.564,1076,1.765,1096,2.275,1130,2.275,1187,2.928,1201,1.895,1202,2.275,1213,1.765,1216,1.657,1231,2.275,1262,3.179,1270,1.895,1271,1.895,1279,1.564,1280,2.928,1300,1.895,1302,1.895,1303,2.275,1315,1.765,1317,1.657,1336,2.275,1363,2.928,1378,1.895,1379,2.275,1386,1.765,1404,2.275,1430,2.928,1442,1.895,1443,2.275,1457,1.765,1460,1.657,1463,2.057,1480,2.275,1506,2.275,1519,2.275,1521,2.275,1523,2.275,1525,2.275,1527,2.275,1529,2.275,1531,1.765,1532,2.275,1545,2.928,1563,2.275,1613,2.275,1675,2.275,1676,2.606,1677,2.606,1678,2.606,1679,8.179,1680,5.985,1681,6.992,1682,4.027,1683,6.596,1684,5.536,1685,6.327,1686,5.536,1687,5.536,1688,7.761,1689,4.297,1690,5.759,1691,5.536,1692,2.606,1693,2.275,1694,2.606,1695,2.606,1696,2.606,1697,2.606,1698,2.606,1699,2.606,1700,2.606]],["title/dependencies.html",[39,2.072,1701,2.988]],["body/dependencies.html",[8,0.013,13,0.736,17,2.587,19,2.85,30,0.274,34,0.009,35,0.009,39,2.103,68,1.389,75,2.474,76,1.755,77,2.474,78,1.834,89,3.954,91,3.184,94,3.642,102,3.642,191,2.37,194,3.954,197,2.474,242,3.392,286,5.126,382,2.103,436,2.85,437,2.85,549,3.184,557,2.186,781,3.642,835,3.954,929,4.373,979,4.373,1019,4.373,1053,3.642,1054,3.642,1267,3.954,1510,2.712,1511,2.712,1642,4.373,1702,5.009,1703,7.051,1704,5.009,1705,5.009,1706,6.398,1707,5.009,1708,5.009,1709,5.009,1710,5.009,1711,5.009,1712,5.009,1713,5.009,1714,5.009,1715,5.009,1716,5.009,1717,5.009,1718,5.009,1719,5.009,1720,5.009,1721,5.009,1722,5.009,1723,5.009,1724,5.009,1725,5.009,1726,5.009,1727,5.009,1728,5.009,1729,5.009,1730,5.009,1731,5.009,1732,5.009,1733,5.009,1734,5.009,1735,5.009]],["title/miscellaneous/functions.html",[1736,2.175,1737,4.31]],["body/miscellaneous/functions.html",[8,0.011,34,0.011,35,0.011,42,3.322,133,0.701,1693,5.696,1736,4.147,1737,5.696,1738,6.524]],["title/index.html",[133,0.368,1739,3.422,1740,3.422]],["body/index.html",[8,0.011,34,0.011,35,0.011,100,4.985,105,4.014,114,4.276,444,3.119,470,3.119,527,4.276,530,4.992,566,4.985,1646,5.512,1741,6.314,1742,7.372,1743,7.372,1744,7.372,1745,6.314,1746,6.314]],["title/modules.html",[38,2.267]],["body/modules.html",[8,0.01,34,0.01,35,0.01,37,4.046,38,2.25,48,3.34,49,3.768,50,3.768,51,3.768,52,3.768,53,3.768,54,3.768,55,3.768,56,3.768,57,3.34,58,3.768,59,3.34,1747,8.44,1748,8.44,1749,8.44,1750,8.47,1751,5.564,1752,5.564]],["title/overview.html",[1753,4.896]],["body/overview.html",[2,1.047,8,0.013,14,3.885,23,3.836,34,0.008,35,0.008,36,0.862,37,6.143,38,1.525,39,1.584,40,1.714,41,1.714,42,1.584,43,1.714,44,1.714,45,3.294,46,3.294,47,3.294,48,4.902,49,4.724,50,5.029,51,4.724,52,4.139,53,5.217,54,4.724,55,4.724,56,5.029,57,4.457,58,4.724,59,4.549,60,2.403,61,1.714,62,1.714,105,2.399,131,1.369,192,4.021,231,3.294,233,3.294,234,3.294,235,4.139,236,4.139,263,3.915,383,3.885,409,3.294,410,3.294,495,0.981,684,3.885,687,3.294,688,3.294,777,3.885,806,3.294,807,3.294,844,2.979,894,3.885,907,3.294,909,3.294,1050,3.885,1066,3.294,1067,3.294,1216,3.885,1226,3.294,1227,3.294,1317,3.885,1329,3.294,1330,3.294,1398,3.294,1399,3.294,1400,3.294,1460,3.885,1475,3.294,1476,3.294,1587,3.294,1588,3.294,1753,3.294,1754,5.292,1755,3.773,1756,3.773]],["title/properties.html",[254,1.283,1701,2.988]],["body/properties.html",[8,0.012,34,0.011,35,0.011,254,1.681,1757,6.465,1758,6.465,1759,6.465,1760,6.465,1761,6.465,1762,6.465,1763,6.465]],["title/miscellaneous/typealiases.html",[1736,2.175,1764,4.936]],["body/miscellaneous/typealiases.html",[8,0.011,34,0.011,35,0.011,133,0.641,160,0.754,432,5.628,496,4.337,522,4.713,711,5.183,712,4.827,713,5.183,850,4.337,872,5.183,1105,5.183,1187,4.337,1280,4.337,1299,5.628,1363,4.337,1430,4.337,1545,4.337,1736,3.792,1765,5.964,1766,5.207,1767,5.207,1768,5.207,1769,5.207,1770,5.207,1771,5.207,1772,5.207]],["title/miscellaneous/variables.html",[1736,2.175,1773,4.31]],["body/miscellaneous/variables.html",[5,0.027,8,0.013,10,2.588,12,0.701,27,0.988,34,0.003,35,0.003,36,1.725,76,2.125,118,0.342,122,0.77,133,0.146,139,0.677,155,1.573,159,0.918,160,0.583,162,0.671,186,1.114,215,0.416,275,4.249,276,4.012,293,2.417,297,2.174,299,6.594,301,2.104,302,1.398,320,1.733,322,3.641,354,3.674,355,1.322,366,1.474,372,1.616,380,2.497,413,1.712,440,3.296,492,0.57,496,0.987,501,4.298,539,1.185,559,1.027,625,4.801,626,5.115,636,0.863,656,1.911,691,1.594,693,1.594,695,1.497,714,1.712,715,1.859,716,1.712,731,5.491,755,0.987,759,1.072,769,1.185,849,2.174,850,0.987,851,4.298,852,4.533,853,4.298,873,1.594,874,1.185,877,3.322,951,5.491,962,0.987,970,1.859,971,1.859,982,1.185,1076,1.594,1187,0.987,1200,1.185,1207,3.641,1270,2.266,1279,2.525,1280,0.987,1300,1.712,1301,1.185,1304,4.322,1363,0.987,1377,1.185,1380,4.026,1430,0.987,1441,1.185,1463,1.859,1545,0.987,1562,1.185,1564,3.674,1689,1.185,1690,1.185,1736,0.863,1766,1.185,1767,1.185,1768,1.185,1769,1.185,1770,1.185,1771,1.185,1772,1.185,1773,1.185,1774,3.117,1775,4.95,1776,1.358,1777,1.358,1778,2.354,1779,7.586,1780,7.586,1781,8.152,1782,8.152,1783,1.358,1784,1.358,1785,7.552,1786,1.358,1787,2.354,1788,1.358,1789,3.117,1790,2.354,1791,1.358,1792,2.354,1793,1.358,1794,2.354,1795,1.358,1796,2.354,1797,2.354,1798,1.358,1799,3.117,1800,2.354,1801,1.358,1802,2.354,1803,1.358,1804,2.354,1805,1.358,1806,2.354,1807,1.358,1808,1.358,1809,1.358,1810,2.354,1811,1.358,1812,2.354,1813,2.354,1814,1.358,1815,3.117,1816,2.354,1817,1.358,1818,2.354,1819,1.358,1820,2.354,1821,1.358,1822,2.354,1823,1.358,1824,2.354,1825,2.354,1826,1.358,1827,2.354,1828,1.358,1829,3.117,1830,2.354,1831,1.358,1832,2.354,1833,1.358,1834,2.354,1835,1.358,1836,1.358,1837,2.354,1838,1.358,1839,2.354,1840,2.354,1841,1.358,1842,2.354,1843,1.358,1844,3.117,1845,2.354,1846,1.358,1847,2.354,1848,1.358,1849,2.354,1850,1.358,1851,2.354,1852,2.354,1853,1.358,1854,2.354,1855,1.358,1856,3.117,1857,2.354,1858,1.358,1859,2.354,1860,1.358,1861,2.354,1862,1.358,1863,1.358,1864,1.358,1865,1.358,1866,1.358,1867,1.358,1868,1.358,1869,1.358,1870,1.358]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":731,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1758,"title":{},"body":{"properties.html":{}}}],["0.00",{"_index":1062,"title":{},"body":{"controllers/MailController.html":{}}}],["0.1.13",{"_index":1733,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1714,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1713,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1729,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1696,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1687,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1698,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1695,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1697,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1692,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1683,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1686,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1685,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1691,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":444,"title":{"classes/Company-1.html":{}},"body":{"injectables/CompaniesService.html":{},"interfaces/IUser.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["1.0.0",{"_index":1731,"title":{},"body":{"dependencies.html":{}}}],["1.0.15",{"_index":1735,"title":{},"body":{"dependencies.html":{}}}],["1.11.10",{"_index":1718,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1717,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":1702,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":453,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["10.0.1",{"_index":1706,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1707,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":1705,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["1024",{"_index":795,"title":{},"body":{"controllers/FilesController.html":{}}}],["13",{"_index":1754,"title":{},"body":{"overview.html":{}}}],["15t06:47:49.369z",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:48:22.224z",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:01.241z",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:23.973z",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:05.131z",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:32.799z",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:31.898z",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:51.041z",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:13.364z",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:41.934z",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:56.274z",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:01:36.923z",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:16.508z",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:33.697z",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:46.085z",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:24.175z",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:37.896z",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:14.659z",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:33.395z",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:50.801z",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:15.785z",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:41.694z",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:05.961z",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:50.946z",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:10.914z",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:33.234z",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:48.081z",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:11.323z",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:51.974z",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:06.618z",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:20.853z",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:36.836z",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:52.798z",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.3.1",{"_index":1720,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1755,"title":{},"body":{"overview.html":{}}}],["1mb",{"_index":797,"title":{},"body":{"controllers/FilesController.html":{}}}],["2",{"_index":105,"title":{"classes/Company-2.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"index.html":{},"overview.html":{}}}],["2.1.3",{"_index":1726,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22",{"_index":742,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["28",{"_index":1756,"title":{},"body":{"overview.html":{}}}],["3.0.4",{"_index":1708,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":1704,"title":{},"body":{"dependencies.html":{}}}],["3.1.9",{"_index":1722,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1730,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":1724,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":1710,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":1712,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":1711,"title":{},"body":{"dependencies.html":{}}}],["6.9.3",{"_index":1728,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["60s",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["647b5108a8a243e8191855b5",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab415f4328bd3153ee211",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab436f4328bd3153ee216",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4d5f4328bd3153ee21b",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4ebf4328bd3153ee220",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab5a8072f2a2ef910638d",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6d3fa16b294212e4033",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6e7fa16b294212e4038",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6fdfa16b294212e403d",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab719fa16b294212e4042",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab728fa16b294212e4047",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab750fa16b294212e404c",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad488dafdb9754f40b846",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad499dafdb9754f40b84b",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4a6dafdb9754f40b850",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4ccdafdb9754f40b859",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4d9dafdb9754f40b85e",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4fedafdb9754f40b863",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad511dafdb9754f40b868",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad522dafdb9754f40b86d",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad53bdafdb9754f40b872",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad555dafdb9754f40b877",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad56ddafdb9754f40b87c",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad59adafdb9754f40b881",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5aedafdb9754f40b886",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5c5dafdb9754f40b88b",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5d4dafdb9754f40b890",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5ebdafdb9754f40b895",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad613dafdb9754f40b89a",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad622dafdb9754f40b89f",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad630dafdb9754f40b8a6",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad640dafdb9754f40b8ab",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad650dafdb9754f40b8b0",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69",{"_index":750,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["7.1.14",{"_index":1709,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1734,"title":{},"body":{"dependencies.html":{}}}],["7.5.2",{"_index":1725,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":1703,"title":{},"body":{"dependencies.html":{}}}],["__v",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["_id.tostring",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":822,"title":{},"body":{"injectables/FilesService.html":{}}}],["active",{"_index":578,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["adapter",{"_index":1091,"title":{},"body":{"modules/MailModule.html":{}}}],["addfiletypevalidator",{"_index":788,"title":{},"body":{"controllers/FilesController.html":{}}}],["addfilter",{"_index":936,"title":{},"body":{"injectables/JobsService.html":{},"injectables/ResumesService.html":{}}}],["addmaxsizevalidator",{"_index":793,"title":{},"body":{"controllers/FilesController.html":{}}}],["address",{"_index":497,"title":{},"body":{"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["adds",{"_index":823,"title":{},"body":{"injectables/FilesService.html":{}}}],["admin",{"_index":739,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["admin@gmail.com",{"_index":740,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["admin_role",{"_index":714,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":736,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["adminrole?._id",{"_index":745,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["age",{"_index":588,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["aliases",{"_index":1765,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":753,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{}}}],["ang",{"_index":1605,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["api",{"_index":436,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/companies",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/:id",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/by",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apipath",{"_index":625,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["apitags(\"auth",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(\"companies",{"_index":388,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["apitags(\"files",{"_index":782,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags(\"jobs",{"_index":897,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags(\"mail",{"_index":1057,"title":{},"body":{"controllers/MailController.html":{}}}],["apitags(\"permissions",{"_index":1219,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["apitags(\"resumes",{"_index":1320,"title":{},"body":{"controllers/ResumesController.html":{}}}],["apitags(\"roles",{"_index":1390,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags(\"subscribers",{"_index":1464,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["apitags(\"users",{"_index":1578,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":846,"title":{},"body":{"interfaces/IUser.html":{},"injectables/MailService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["app.controller",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":37,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodule.ts",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["appservice",{"_index":14,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":435,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aqp(querystring",{"_index":442,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["aqp(rq",{"_index":450,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["arguments",{"_index":992,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["arr",{"_index":848,"title":{},"body":{"interfaces/IUser.html":{}}}],["array",{"_index":563,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/Resume.html":{}}}],["array!'})@isstring({each",{"_index":619,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["array'})@isstring({each",{"_index":666,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["assume",{"_index":1375,"title":{},"body":{"classes/Role.html":{}}}],["async",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":953,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:16",{"_index":963,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:28",{"_index":966,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:8",{"_index":960,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/jwt",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/local",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":142,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":955,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1032,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":48,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JobsModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1761,"title":{},"body":{"properties.html":{}}}],["authorizationheader",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorizationheader.split",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":23,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JobsService.html":{},"injectables/LocalStrategy.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["autosendemail",{"_index":1098,"title":{},"body":{"injectables/MailService.html":{}}}],["available",{"_index":1752,"title":{},"body":{"modules.html":{}}}],["await",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["b",{"_index":1542,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["badrequestexception",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(\"not",{"_index":1421,"title":{},"body":{"injectables/RolesService.html":{}}}],["badrequestexception('apipath",{"_index":1242,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["badrequestexception('không",{"_index":1427,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('not",{"_index":1251,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('refresh",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('role",{"_index":1415,"title":{},"body":{"injectables/RolesService.html":{}}}],["badrequestexception('thời",{"_index":934,"title":{},"body":{"injectables/JobsService.html":{}}}],["badrequestexception(`email",{"_index":1493,"title":{},"body":{"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["based",{"_index":991,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["basename",{"_index":1183,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcrypt",{"_index":1642,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["bearer",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["biến",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["biết",{"_index":847,"title":{},"body":{"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["body",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":515,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["boolean(isinit",{"_index":724,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bootstrap",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1158,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":1750,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1747,"title":{},"body":{"modules.html":{}}}],["build",{"_index":798,"title":{},"body":{"controllers/FilesController.html":{}}}],["buộc",{"_index":1518,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["báo",{"_index":1644,"title":{},"body":{"injectables/UsersService.html":{}}}],["bản",{"_index":462,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["bắt",{"_index":1517,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["c",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["callhandler",{"_index":1265,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":956,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":961,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["case",{"_index":1153,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["catch",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["cb",{"_index":1170,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":1174,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ch",{"_index":596,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["cha",{"_index":973,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["check",{"_index":829,"title":{},"body":{"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["cho",{"_index":534,"title":{},"body":{"classes/Company.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["chuyển",{"_index":1583,"title":{},"body":{"controllers/UsersController.html":{}}}],["chúng",{"_index":1608,"title":{},"body":{"modules/UsersModule.html":{}}}],["chạy",{"_index":1745,"title":{},"body":{"index.html":{}}}],["chất",{"_index":1648,"title":{},"body":{"injectables/UsersService.html":{}}}],["class",{"_index":30,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":495,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companiesmodule",{"_index":409,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_providers",{"_index":410,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule",{"_index":687,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule_providers",{"_index":688,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":806,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":807,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":907,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_imports",{"_index":908,"title":{},"body":{"modules/JobsModule.html":{}}}],["cluster_jobsmodule_providers",{"_index":909,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1066,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1067,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule",{"_index":1226,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":1227,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1329,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_imports",{"_index":1331,"title":{},"body":{"modules/ResumesModule.html":{}}}],["cluster_resumesmodule_providers",{"_index":1330,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":1398,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":1399,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":1400,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1475,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1476,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1587,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1588,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1589,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":479,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["companies",{"_index":354,"title":{},"body":{"controllers/CompaniesController.html":{},"miscellaneous/variables.html":{}}}],["companies.controller",{"_index":412,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.service",{"_index":384,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["companies/companies.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["companiescontroller",{"_index":352,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":49,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules.html":{},"overview.html":{}}}],["companiesservice",{"_index":383,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"overview.html":{}}}],["company",{"_index":366,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"injectables/MailService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company._id",{"_index":938,"title":{},"body":{"injectables/JobsService.html":{}}}],["company.dto",{"_index":386,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":594,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:13",{"_index":597,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:18",{"_index":598,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:23",{"_index":599,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:5",{"_index":1508,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts:8",{"_index":600,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.name",{"_index":416,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Resume.html":{}}}],["companybyuser",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["companybyuser._id",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["companydocument",{"_index":432,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":634,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["companymodel",{"_index":422,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companyschema",{"_index":413,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparesync",{"_index":1641,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparesync(password",{"_index":1666,"title":{},"body":{"injectables/UsersService.html":{}}}],["configmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JobsModule.html":{}}}],["configmodule.forroot",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{}}}],["configservice.get(\"email_auth_pass",{"_index":1086,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get(\"email_auth_user",{"_index":1085,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get(\"email_host",{"_index":1083,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get(\"email_preview",{"_index":1095,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get(\"jwt_access_token_secret",{"_index":1025,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('mongodb_uri",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1126,"title":{},"body":{"injectables/MailService.html":{}}}],["connection",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(error",{"_index":1167,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('directory",{"_index":1148,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log(error",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(company.name",{"_index":438,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(@injectmodel(permission.name",{"_index":1239,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(@injectmodel(role.name",{"_index":1413,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(authservice",{"_index":1034,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":419,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":1013,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":919,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(mailerservice",{"_index":1099,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(permissionmodel",{"_index":1232,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":390,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":958,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1338,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1405,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(subcribermodel",{"_index":1482,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(usermodel",{"_index":703,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["contains",{"_index":1162,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["context",{"_index":964,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/MailService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":985,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":984,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":987,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1277,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(\"auth",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":389,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('databases",{"_index":686,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":783,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('health",{"_index":836,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('jobs",{"_index":898,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('mail",{"_index":1058,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('permissions",{"_index":1220,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1321,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1391,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('subscribers",{"_index":1465,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1579,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1715,"title":{},"body":{"dependencies.html":{}}}],["cookies",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["countpermission",{"_index":727,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countrole",{"_index":729,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countuser",{"_index":725,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["coverage",{"_index":1675,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":355,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":391,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["create(createcompanydto",{"_index":359,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["create(createfiledto",{"_index":816,"title":{},"body":{"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":878,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createpermissiondto",{"_index":1203,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["create(createresumedto",{"_index":1306,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["create(createroledto",{"_index":1381,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createsubscriberdto",{"_index":1445,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["create(createuser",{"_index":1621,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(createuserdto",{"_index":1565,"title":{},"body":{"controllers/UsersController.html":{}}}],["createat",{"_index":498,"title":{},"body":{"classes/Company.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["createcompanydto",{"_index":360,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["created",{"_index":1149,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createdat",{"_index":851,"title":{},"body":{"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":440,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["createfiledto",{"_index":601,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":558,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createmulteroptions",{"_index":1132,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":622,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createrefreshtoken",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["createresumedto",{"_index":631,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["createroledto",{"_index":648,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createsubscriberdto",{"_index":660,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["createuser",{"_index":1623,"title":{},"body":{"injectables/UsersService.html":{}}}],["createusercvdto",{"_index":647,"title":{"classes/CreateUserCvDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":585,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["cron",{"_index":1055,"title":{},"body":{"controllers/MailController.html":{}}}],["cron(\"0",{"_index":1061,"title":{},"body":{"controllers/MailController.html":{}}}],["cron(cronexpression.every_5_minutes",{"_index":1064,"title":{},"body":{"controllers/MailController.html":{}}}],["cronexpression",{"_index":1056,"title":{},"body":{"controllers/MailController.html":{}}}],["ctx",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":484,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["currentpage",{"_index":368,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["cài",{"_index":1741,"title":{},"body":{"index.html":{}}}],["các",{"_index":1514,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"modules/UsersModule.html":{}}}],["cái",{"_index":1599,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["câu",{"_index":1742,"title":{},"body":{"index.html":{}}}],["cấu",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["cần",{"_index":468,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["cập",{"_index":1008,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"classes/UpdateUserDto.html":{}}}],["của",{"_index":532,"title":{},"body":{"classes/Company.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["d",{"_index":527,"title":{},"body":{"classes/Company.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["danh",{"_index":1598,"title":{},"body":{"modules/UsersModule.html":{}}}],["data",{"_index":755,"title":{},"body":{"injectables/DatabasesService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":683,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":690,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":685,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases/databases.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["databasescontroller",{"_index":681,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":50,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"modules.html":{},"overview.html":{}}}],["databasesservice",{"_index":684,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":506,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["date'})@isnotempty({message",{"_index":609,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["date(value",{"_index":574,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["date.now()}${extname",{"_index":1186,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dayjs",{"_index":929,"title":{},"body":{"injectables/JobsService.html":{},"dependencies.html":{}}}],["dayjs(enddate",{"_index":948,"title":{},"body":{"injectables/JobsService.html":{}}}],["dayjs(startdate",{"_index":946,"title":{},"body":{"injectables/JobsService.html":{}}}],["db",{"_index":837,"title":{},"body":{"controllers/HealthController.html":{}}}],["declarations",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator/customize",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["decorators",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":452,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["defined",{"_index":136,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":374,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('delete",{"_index":1211,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["deleteat",{"_index":499,"title":{},"body":{"classes/Company.html":{}}}],["deletedat",{"_index":852,"title":{},"body":{"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["deletedby",{"_index":493,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["denied",{"_index":1166,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dependencies",{"_index":39,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":500,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"classes/Role.html":{}}}],["destination",{"_index":1169,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dev",{"_index":1746,"title":{},"body":{"index.html":{}}}],["dir",{"_index":1088,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["directory",{"_index":1157,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["diskstorage",{"_index":1143,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["diện",{"_index":533,"title":{},"body":{"classes/Company.html":{},"classes/User.html":{}}}],["document",{"_index":531,"title":{},"body":{"classes/Company.html":{},"classes/User.html":{}}}],["documentation",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":1719,"title":{},"body":{"dependencies.html":{}}}],["dto/create",{"_index":385,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":387,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dân",{"_index":1763,"title":{},"body":{"properties.html":{}}}],["dùng",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["dạng",{"_index":562,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["dạng'})@isnotempty({message",{"_index":641,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["dịnh",{"_index":667,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["dụng",{"_index":1513,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"modules/UsersModule.html":{}}}],["each",{"_index":564,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["eexist",{"_index":1154,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ejs",{"_index":1721,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":576,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["enddate",{"_index":577,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["enddatejs",{"_index":947,"title":{},"body":{"injectables/JobsService.html":{}}}],["enddatejs.isafter(today",{"_index":949,"title":{},"body":{"injectables/JobsService.html":{}}}],["endpoint",{"_index":1009,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["enotdir",{"_index":1159,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists",{"_index":1133,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":1136,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["err",{"_index":967,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["error.code",{"_index":1152,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["errorhttpstatuscode",{"_index":799,"title":{},"body":{"controllers/FilesController.html":{}}}],["exception",{"_index":990,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exec",{"_index":482,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":962,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":1150,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["expiresin",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":767,"title":{},"body":{"controllers/FilesController.html":{}}}],["extends",{"_index":954,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["extension",{"_index":1178,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extname",{"_index":1179,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":1017,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1022,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":951,"title":{},"body":{"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file')@useinterceptors(undefined",{"_index":770,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto",{"_index":779,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":603,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":801,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileinterceptor",{"_index":780,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":772,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":759,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["files.controller",{"_index":809,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":778,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":757,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesmodule",{"_index":51,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":777,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["filetype",{"_index":789,"title":{},"body":{"controllers/FilesController.html":{}}}],["filter",{"_index":447,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.current",{"_index":456,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":457,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["finalname",{"_index":1185,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["findall",{"_index":356,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(currentpage",{"_index":362,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["findall(page",{"_index":424,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["findbyusers",{"_index":1337,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findbyusers(user",{"_index":1343,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findone",{"_index":357,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":403,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":369,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyusername",{"_index":1617,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyusername(username",{"_index":1626,"title":{},"body":{"injectables/UsersService.html":{}}}],["findpermission",{"_index":1240,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["findrole",{"_index":1414,"title":{},"body":{"injectables/RolesService.html":{}}}],["finduserbytoken",{"_index":1614,"title":{},"body":{"injectables/UsersService.html":{}}}],["folder",{"_index":1171,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["forbiddenexception",{"_index":968,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["forbiddenexception(\"bạn",{"_index":1006,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["found",{"_index":489,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["foundrole",{"_index":1424,"title":{},"body":{"injectables/RolesService.html":{}}}],["foundrole.name",{"_index":1426,"title":{},"body":{"injectables/RolesService.html":{}}}],["founduser",{"_index":1669,"title":{},"body":{"injectables/UsersService.html":{}}}],["founduser.email",{"_index":1671,"title":{},"body":{"injectables/UsersService.html":{}}}],["fs",{"_index":1142,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":1146,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":735,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["function",{"_index":1694,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1737,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":397,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["gender",{"_index":589,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["generic(ép",{"_index":1649,"title":{},"body":{"injectables/UsersService.html":{}}}],["gensaltsync",{"_index":1639,"title":{},"body":{"injectables/UsersService.html":{}}}],["gensaltsync(saltrounds",{"_index":1652,"title":{},"body":{"injectables/UsersService.html":{}}}],["get('/account",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/refresh",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":402,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@public",{"_index":370,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["get(':id')@responsemessage('fetch",{"_index":1209,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["get()@public()@healthcheck",{"_index":830,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@public()@responsemessage('fetch",{"_index":364,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["get()@public()@responsemessage('send",{"_index":1047,"title":{},"body":{"controllers/MailController.html":{}}}],["get()@responsemessage('fetch",{"_index":1206,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["gethashpassword",{"_index":1615,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethello",{"_index":135,"title":{},"body":{"injectables/AppService.html":{}}}],["getresumebyuser",{"_index":1305,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getresumebyuser(@user",{"_index":1327,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getresumebyuser(user",{"_index":1310,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getrootpath",{"_index":1131,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getskills",{"_index":1481,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getskills(user",{"_index":1488,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getting",{"_index":1739,"title":{"index.html":{}},"body":{}}],["getuserskills",{"_index":1444,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskills(@user",{"_index":1468,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskills(user",{"_index":1451,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["ghi",{"_index":463,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["gi",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateRoleDto.html":{}}}],["gian",{"_index":935,"title":{},"body":{"injectables/JobsService.html":{}}}],["giúp",{"_index":1607,"title":{},"body":{"modules/UsersModule.html":{}}}],["giữa",{"_index":1610,"title":{},"body":{"modules/UsersModule.html":{}}}],["global",{"_index":916,"title":{},"body":{"modules/JobsModule.html":{}}}],["graph",{"_index":1751,"title":{},"body":{"modules.html":{}}}],["gán",{"_index":1026,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["gọi",{"_index":972,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["gửi",{"_index":980,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"classes/UpdateUserDto.html":{}}}],["h",{"_index":1495,"title":{},"body":{"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["handle",{"_index":1274,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["handleautosendemail",{"_index":1046,"title":{},"body":{"controllers/MailController.html":{}}}],["handlebars",{"_index":1723,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1073,"title":{},"body":{"modules/MailModule.html":{}}}],["handledate",{"_index":918,"title":{},"body":{"injectables/JobsService.html":{}}}],["handledate(startdate",{"_index":925,"title":{},"body":{"injectables/JobsService.html":{}}}],["handlefetchbyhr",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["handlegetaccount",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(@user",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(user",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(@req",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(req",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(@user",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(user",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(@req",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(request",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(@body",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(registeruserdto",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":957,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":965,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hash",{"_index":1629,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync",{"_index":1640,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync(password",{"_index":1653,"title":{},"body":{"injectables/UsersService.html":{}}}],["hasspassword",{"_index":1655,"title":{},"body":{"injectables/UsersService.html":{}}}],["header",{"_index":995,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["health",{"_index":828,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":841,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":834,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":832,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":826,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":52,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":140,"title":{},"body":{"injectables/AppService.html":{}}}],["hierarchy",{"_index":1161,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["history",{"_index":1281,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["hiển",{"_index":469,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["hiểu",{"_index":398,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["hoidanit@gmail.com",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":1082,"title":{},"body":{"modules/MailModule.html":{}}}],["hr",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["httponly",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":776,"title":{},"body":{"controllers/FilesController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":800,"title":{},"body":{"controllers/FilesController.html":{}}}],["hydrateddocument",{"_index":522,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hàm",{"_index":1038,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["hình",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["hết",{"_index":471,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["hỏi",{"_index":1762,"title":{},"body":{"properties.html":{}}}],["hợp",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["id",{"_index":372,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateRoleDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["id')@get(':id",{"_index":1569,"title":{},"body":{"controllers/UsersController.html":{}}}],["id')@get(':id')@public",{"_index":885,"title":{},"body":{"controllers/JobsController.html":{}}}],["id'})@isarray({message",{"_index":658,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["identifier",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":477,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["ignoreexpiration",{"_index":1023,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1177,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["image's",{"_index":1181,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["implements",{"_index":718,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":133,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["information')@useguards(throttlerguard)@get('/account",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["init",{"_index":754,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["init_permissions",{"_index":715,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["injectable",{"_index":130,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":131,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":433,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(job.name",{"_index":931,"title":{},"body":{"injectables/JobsService.html":{},"injectables/MailService.html":{}}}],["injectmodel(permission.name",{"_index":720,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["injectmodel(resume.name",{"_index":1348,"title":{},"body":{"injectables/ResumesService.html":{}}}],["injectmodel(role.name",{"_index":721,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(subscriber.name",{"_index":1103,"title":{},"body":{"injectables/MailService.html":{},"injectables/SubscribersService.html":{}}}],["injectmodel(user.name",{"_index":719,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["injectmodel(userm.name",{"_index":1647,"title":{},"body":{"injectables/UsersService.html":{}}}],["intercept",{"_index":1272,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1504,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":843,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":844,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["is_public_key",{"_index":970,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_public_permission",{"_index":971,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":579,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"classes/Role.html":{}}}],["isarray",{"_index":550,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{}}}],["isboolean",{"_index":551,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["isdate",{"_index":552,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["isdate({message",{"_index":608,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isdeleted",{"_index":501,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":583,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isexist",{"_index":1001,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["isglobal",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["isinit",{"_index":722,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["ismongoid",{"_index":584,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["ismongoid({message",{"_index":590,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isnotempty",{"_index":544,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty({message",{"_index":595,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotemptyobject",{"_index":553,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":604,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{}}}],["isobject",{"_index":554,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["ispublic",{"_index":982,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ispublicpermission",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iss",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["isskippermission",{"_index":988,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["isstring",{"_index":555,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["isvalid",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidpassword",{"_index":1618,"title":{},"body":{"injectables/UsersService.html":{}}}],["isvalidpassword(password",{"_index":1628,"title":{},"body":{"injectables/UsersService.html":{}}}],["it's",{"_index":1156,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["item",{"_index":568,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["item.company",{"_index":1116,"title":{},"body":{"injectables/MailService.html":{}}}],["item.name",{"_index":1115,"title":{},"body":{"injectables/MailService.html":{}}}],["item.salary}`.replace(/\\b(?=(\\d{3})+(?!\\d))/g",{"_index":1117,"title":{},"body":{"injectables/MailService.html":{}}}],["item.skills",{"_index":1118,"title":{},"body":{"injectables/MailService.html":{}}}],["iuser",{"_index":152,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["job",{"_index":849,"title":{"classes/Job.html":{}},"body":{"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Resume.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["job')@delete(':id",{"_index":888,"title":{},"body":{"controllers/JobsController.html":{}}}],["job')@get()@public",{"_index":883,"title":{},"body":{"controllers/JobsController.html":{}}}],["job')@patch(':id",{"_index":892,"title":{},"body":{"controllers/JobsController.html":{}}}],["job')@post",{"_index":880,"title":{},"body":{"controllers/JobsController.html":{}}}],["job.dto",{"_index":896,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":543,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:10",{"_index":547,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:13",{"_index":546,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:18",{"_index":615,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:24",{"_index":620,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:27",{"_index":614,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:30",{"_index":617,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:33",{"_index":616,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:36",{"_index":613,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:39",{"_index":606,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:44",{"_index":621,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:50",{"_index":610,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:54",{"_index":612,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:60",{"_index":605,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:7",{"_index":545,"title":{},"body":{"classes/Company-1.html":{}}}],["job.name",{"_index":914,"title":{},"body":{"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["jobdocument",{"_index":872,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"miscellaneous/typealiases.html":{}}}],["jobid",{"_index":635,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["jobmodel",{"_index":921,"title":{},"body":{"injectables/JobsService.html":{},"injectables/MailService.html":{}}}],["jobs",{"_index":877,"title":{},"body":{"controllers/JobsController.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["jobs.controller",{"_index":911,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":895,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":873,"title":{},"body":{"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":875,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":53,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":894,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"overview.html":{}}}],["jobwithmatchingskills",{"_index":1111,"title":{},"body":{"injectables/MailService.html":{}}}],["jobwithmatchingskills.map(item",{"_index":1114,"title":{},"body":{"injectables/MailService.html":{}}}],["jobwithmatchingskills?.length",{"_index":1113,"title":{},"body":{"injectables/MailService.html":{}}}],["join",{"_index":1071,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["join(__dirname",{"_index":1089,"title":{},"body":{"modules/MailModule.html":{}}}],["join(this.getrootpath",{"_index":1175,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jpg|jpeg|png|image\\/png|gif|txt|pdf|doc|docx|application\\/vnd.openxmlformats",{"_index":790,"title":{},"body":{"controllers/FilesController.html":{}}}],["jpg|jpeg|png|image\\/png|image\\/jpeg|pdf)$/i",{"_index":792,"title":{},"body":{"controllers/FilesController.html":{}}}],["jwt",{"_index":1019,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":25,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1021,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"modules/JobsModule.html":{}}}],["jwtmodule.register",{"_index":915,"title":{},"body":{"modules/JobsModule.html":{}}}],["jwtmodule.registerasync",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JobsService.html":{}}}],["jwtstrategy",{"_index":235,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k",{"_index":1537,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["kb",{"_index":796,"title":{},"body":{"controllers/FilesController.html":{}}}],["khai",{"_index":1643,"title":{},"body":{"injectables/UsersService.html":{}}}],["khi",{"_index":1512,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{}}}],["khoản",{"_index":1673,"title":{},"body":{"injectables/UsersService.html":{}}}],["khác",{"_index":1611,"title":{},"body":{"modules/UsersModule.html":{}}}],["không",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["kiểu",{"_index":525,"title":{},"body":{"classes/Company.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["ko",{"_index":1516,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"modules/UsersModule.html":{}}}],["kèm",{"_index":981,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["l",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UpdateCompanyDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["legend",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":572,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["license",{"_index":1759,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["limit(defaultlimit",{"_index":475,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["list",{"_index":365,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["literal",{"_index":508,"title":{},"body":{"classes/Company.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["liệu",{"_index":528,"title":{},"body":{"classes/Company.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["local",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":20,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":236,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":569,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{}}}],["logger",{"_index":701,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{}}}],["logger(databasesservice.name",{"_index":710,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["login",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(user",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":502,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["logout",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["loại",{"_index":526,"title":{},"body":{"classes/Company.html":{},"classes/User.html":{}}}],["lquan",{"_index":1594,"title":{},"body":{"modules/UsersModule.html":{}}}],["lòng",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["lại",{"_index":1539,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["lấy",{"_index":399,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["lệ?'})@isnotempty({message",{"_index":639,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{}}}],["lệnh",{"_index":1743,"title":{},"body":{"index.html":{}}}],["lỗi",{"_index":1645,"title":{},"body":{"injectables/UsersService.html":{}}}],["m",{"_index":975,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["mail",{"_index":1045,"title":{},"body":{"controllers/MailController.html":{}}}],["mail.controller",{"_index":1069,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.service",{"_index":1051,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["mailcontroller",{"_index":1043,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":1070,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1080,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1052,"title":{},"body":{"controllers/MailController.html":{},"injectables/MailService.html":{}}}],["mailmodule",{"_index":54,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":1050,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["male",{"_index":743,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["map",{"_index":1268,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1276,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":466,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["maxage",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxsize",{"_index":794,"title":{},"body":{"controllers/FilesController.html":{}}}],["message",{"_index":559,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":483,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":979,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["method",{"_index":626,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":134,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":1736,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":434,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":36,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":38,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1054,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1074,"title":{},"body":{"modules/MailModule.html":{}}}],["mongo",{"_index":657,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["mongodb",{"_index":536,"title":{},"body":{"classes/Company.html":{},"classes/User.html":{}}}],["mongoose",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.isvalidobjectid(id",{"_index":1250,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["mongoose.schema.types.objectid",{"_index":538,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["mongoose.types.objectid.isvalid(id",{"_index":488,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["mongoosehealthindicator",{"_index":833,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":415,"title":{},"body":{"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["ms",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms(configservice.get('jwt_access_expire",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{}}}],["ms(this.configservice.get(\"jwt_refresh_expire",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["multer",{"_index":1144,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multer.config",{"_index":812,"title":{},"body":{"modules/FilesModule.html":{}}}],["multerconfigservice",{"_index":811,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":810,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":813,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":1135,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":1141,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["muốn",{"_index":1601,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["môi",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["mặc",{"_index":454,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["một",{"_index":524,"title":{},"body":{"classes/Company.html":{},"classes/User.html":{}}}],["n",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["name",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":1264,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":1053,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1510,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":781,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":835,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["new",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["new_job",{"_index":1127,"title":{},"body":{"injectables/MailService.html":{}}}],["newuser",{"_index":1657,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser.createdat",{"_index":1659,"title":{},"body":{"injectables/UsersService.html":{}}}],["next",{"_index":1273,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ng",{"_index":586,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["nghĩa",{"_index":523,"title":{},"body":{"classes/Company.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateCompanyDto.html":{},"classes/User.html":{}}}],["nh",{"_index":455,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/JobsService.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["nhau",{"_index":1612,"title":{},"body":{"modules/UsersModule.html":{}}}],["nhật",{"_index":1544,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["nice",{"_index":1125,"title":{},"body":{"injectables/MailService.html":{}}}],["nodemailer",{"_index":1727,"title":{},"body":{"dependencies.html":{}}}],["normal_user",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1744,"title":{},"body":{"index.html":{}}}],["null",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":425,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["này",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["nên",{"_index":1040,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["nói",{"_index":1602,"title":{},"body":{"modules/UsersModule.html":{}}}],["object",{"_index":510,"title":{},"body":{"classes/Company.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["objectid",{"_index":592,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["objuser",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":1266,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["officedocument.wordprocessingml.document|text\\/plain)$/i",{"_index":791,"title":{},"body":{"controllers/FilesController.html":{}}}],["offset",{"_index":443,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["ok",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["omittype",{"_index":1535,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":1533,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["onmoduleinit",{"_index":702,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["option",{"_index":1515,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["optional",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1092,"title":{},"body":{"modules/MailModule.html":{}}}],["out",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["override",{"_index":1122,"title":{},"body":{"injectables/MailService.html":{}}}],["overview",{"_index":1753,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1701,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":428,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["pages",{"_index":486,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":485,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["paginate",{"_index":1207,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":381,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":437,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parent",{"_index":1160,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["parsefilepipebuilder",{"_index":775,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":1716,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":1509,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createcompanydto",{"_index":1507,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createfiledto",{"_index":1520,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1522,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1524,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":1526,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["partialtype(createroledto",{"_index":1528,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsubscriberdto",{"_index":1530,"title":{},"body":{"classes/UpdateSubscriberDto.html":{}}}],["partialtype(createuserdto",{"_index":1536,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["pass",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{},"classes/UpdateUserDto.html":{}}}],["passport",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/jwt.strategy",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local.strategy",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1020,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1011,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":587,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["password').populate",{"_index":1664,"title":{},"body":{"injectables/UsersService.html":{}}}],["patch",{"_index":380,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":378,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch(':id')@responsemessage('update",{"_index":1214,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch()@responsemessage('update",{"_index":1458,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["path",{"_index":1072,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":1184,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":1180,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["payload",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.role.name",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["pending",{"_index":1350,"title":{},"body":{"injectables/ResumesService.html":{}}}],["permission",{"_index":656,"title":{"classes/Permission.html":{}},"body":{"classes/CreateRoleDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission._id",{"_index":1246,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["permission.apipath",{"_index":1004,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.createdat",{"_index":1247,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["permission.dto",{"_index":1218,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":624,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:11",{"_index":628,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:14",{"_index":629,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:5",{"_index":630,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:8",{"_index":627,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.method",{"_index":1003,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.name",{"_index":698,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"classes/Role.html":{}}}],["permissiondocument",{"_index":711,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodel",{"_index":704,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["permissions.controller",{"_index":1229,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.find(permission",{"_index":1002,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.service",{"_index":1217,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["permissionschema",{"_index":693,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionscontroller",{"_index":1201,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":55,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":1216,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["phải",{"_index":591,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["pipe",{"_index":1275,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["plugin",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["populate",{"_index":1665,"title":{},"body":{"injectables/UsersService.html":{}}}],["populate(population",{"_index":481,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":449,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["post",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post(\"skills",{"_index":1467,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('/login",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('by",{"_index":1311,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('skills')@skipcheckpermission()@responsemessage('get",{"_index":1452,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('upload",{"_index":784,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('upload')@responsemessage('upload",{"_index":768,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@responsemessage('create",{"_index":1204,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["prefix",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":1094,"title":{},"body":{"modules/MailModule.html":{}}}],["private",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":1145,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processnewtoken",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["projection",{"_index":448,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["promise",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["prop",{"_index":504,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({type",{"_index":509,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["properties",{"_index":254,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"classes/RegisterUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@responsemessage('get",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@useguards(localauthguard)@useguards(throttlerguard)@post('/login')@responsemessage('login",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":1176,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["push",{"_index":1358,"title":{},"body":{"injectables/ResumesService.html":{}}}],["quantity",{"_index":571,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["query",{"_index":382,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query(\"current",{"_index":394,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["query(\"pagesize",{"_index":395,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["query.filter.page",{"_index":445,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["querystring",{"_index":363,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["ra",{"_index":978,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["receiver",{"_index":1128,"title":{},"body":{"injectables/MailService.html":{}}}],["recursive",{"_index":1147,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":1283,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["reflect",{"_index":1732,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":959,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["register",{"_index":1619,"title":{},"body":{"injectables/UsersService.html":{}}}],["register(registeruser",{"_index":1631,"title":{},"body":{"injectables/UsersService.html":{}}}],["registeruser",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["registeruser(registeruser",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruserdto",{"_index":179,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["related",{"_index":1376,"title":{},"body":{"classes/Role.html":{}}}],["remove",{"_index":358,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":407,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":373,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":825,"title":{},"body":{"injectables/FilesService.html":{}}}],["render",{"_index":9,"title":{},"body":{"controllers/AppController.html":{}}}],["req",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["req.headers['authorization",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["req.user",{"_index":1029,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req?.headers?.folder_type",{"_index":1172,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/variables.html":{}}}],["request.cookies['refresh_token",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.method",{"_index":997,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.route?.path",{"_index":999,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.user",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":1155,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["res",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PermissionsController.html":{}}}],["reset",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":164,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.clearcookie('refresh_token",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('refresh_token",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_message",{"_index":1270,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage(\"create",{"_index":899,"title":{},"body":{"controllers/JobsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage(\"delete",{"_index":905,"title":{},"body":{"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage(\"fetch",{"_index":393,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage(\"get",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{}}}],["responsemessage(\"login",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage(\"logout",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage(\"register",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage(\"send",{"_index":1059,"title":{},"body":{"controllers/MailController.html":{}}}],["responsemessage(\"update",{"_index":903,"title":{},"body":{"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage(\"upload",{"_index":785,"title":{},"body":{"controllers/FilesController.html":{}}}],["responsemessage('create",{"_index":879,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('delete",{"_index":887,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('fetch",{"_index":882,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('get",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('logout",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('register",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('update",{"_index":891,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["result",{"_index":472,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1279,"title":{"classes/Resume.html":{}},"body":{"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resume._id",{"_index":1351,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resume.createdat",{"_index":1352,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resume.dto",{"_index":1319,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts",{"_index":633,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["resume.dto.ts:17",{"_index":646,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:22",{"_index":645,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:27",{"_index":644,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:35",{"_index":640,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:43",{"_index":643,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:50",{"_index":671,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:58",{"_index":669,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:66",{"_index":670,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:9",{"_index":642,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.name",{"_index":1335,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumedocument",{"_index":1299,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{},"miscellaneous/typealiases.html":{}}}],["resumemodel",{"_index":1340,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1304,"title":{},"body":{"controllers/ResumesController.html":{},"miscellaneous/variables.html":{}}}],["resumes.controller",{"_index":1333,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1318,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/resumes.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":1300,"title":{},"body":{"classes/Resume.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1302,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":56,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1317,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["return",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":138,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":302,"title":{"classes/Role.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role._id",{"_index":1417,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.createdat",{"_index":1418,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.dto",{"_index":1389,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":650,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:13",{"_index":653,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:18",{"_index":659,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:6",{"_index":654,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:9",{"_index":651,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":699,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["roledocument",{"_index":712,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":705,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":1380,"title":{},"body":{"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":1402,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":1388,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/roles.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["roleschema",{"_index":695,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1378,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["rolesmodule",{"_index":57,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesservice",{"_index":192,"title":{"injectables/RolesService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"overview.html":{}}}],["rq",{"_index":426,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":566,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"index.html":{}}}],["rxjs",{"_index":1267,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1269,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["rằng",{"_index":1603,"title":{},"body":{"modules/UsersModule.html":{}}}],["rộng",{"_index":976,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["s",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/JobsService.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["salary",{"_index":570,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/MailService.html":{}}}],["salt",{"_index":1651,"title":{},"body":{"injectables/UsersService.html":{}}}],["saltrounds",{"_index":1650,"title":{},"body":{"injectables/UsersService.html":{}}}],["same",{"_index":1163,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sample",{"_index":717,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["sang",{"_index":1584,"title":{},"body":{"controllers/UsersController.html":{}}}],["schedulemodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["schedulemodule.forroot",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["schema",{"_index":417,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schema({timestamps",{"_index":1199,"title":{},"body":{"classes/Permission.html":{}}}],["schema/permission.schema",{"_index":1230,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schema/resume.schema",{"_index":1334,"title":{},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schema/role.schema",{"_index":1403,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schema/subscriber.schema",{"_index":1479,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["schemafactory",{"_index":521,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(company",{"_index":539,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":874,"title":{},"body":{"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1200,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1301,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1377,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subscriber",{"_index":1441,"title":{},"body":{"classes/Subscriber.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1562,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/company.schema",{"_index":414,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["schemas/job.schemas",{"_index":912,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schemas/user.schema",{"_index":1592,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["sd",{"_index":1606,"title":{},"body":{"modules/UsersModule.html":{}}}],["secret",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":1024,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1084,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":1362,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["select(projection",{"_index":1355,"title":{},"body":{"injectables/ResumesService.html":{}}}],["server",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["setmetadata(is_public_key",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_permission",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signoptions",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{}}}],["single",{"_index":769,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["skills",{"_index":561,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/Job.html":{},"injectables/MailService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["skip(offset",{"_index":474,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["skipcheckpermission",{"_index":1463,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sl",{"_index":461,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["soft",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdeletemodel",{"_index":420,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":451,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["sort(\"createdat\").populate",{"_index":1361,"title":{},"body":{"injectables/ResumesService.html":{}}}],["sort(sort",{"_index":480,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../company.schema.ts",{"_index":1766,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schemas.ts",{"_index":1767,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1738,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.schema.ts",{"_index":1768,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":1769,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":1770,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sample.ts",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subscriber.schema.ts",{"_index":1771,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1772,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":132,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":137,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:26",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:33",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:40",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:49",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:56",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":913,"title":{},"body":{"modules/JobsModule.html":{},"modules/ResumesModule.html":{}}}],["src/auth/auth.module.ts",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service",{"_index":930,"title":{},"body":{"injectables/JobsService.html":{},"injectables/ResumesService.html":{}}}],["src/auth/auth.service.ts",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:134",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:146",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:39",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:43",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:73",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:81",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":952,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local",{"_index":1031,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":1010,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:21",{"_index":1016,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:9",{"_index":1014,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":1033,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:14",{"_index":1037,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:8",{"_index":1035,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/companies/companies.controller.ts",{"_index":353,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:16",{"_index":361,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:23",{"_index":367,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:33",{"_index":371,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:38",{"_index":379,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:43",{"_index":375,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module.ts",{"_index":411,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":418,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:12",{"_index":421,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:15",{"_index":423,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:25",{"_index":427,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:61",{"_index":429,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:70",{"_index":431,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:80",{"_index":430,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":593,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/dto/update",{"_index":1506,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/schemas/company.schema",{"_index":1298,"title":{},"body":{"classes/Resume.html":{}}}],["src/companies/schemas/company.schema.ts",{"_index":496,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schemas/company.schema.ts:11",{"_index":518,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:14",{"_index":505,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:17",{"_index":514,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:20",{"_index":517,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:23",{"_index":511,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:29",{"_index":520,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:35",{"_index":513,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:41",{"_index":507,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:44",{"_index":519,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:47",{"_index":516,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:50",{"_index":512,"title":{},"body":{"classes/Company.html":{}}}],["src/core/transform.interceptor.ts",{"_index":1262,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts:20",{"_index":1503,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.interceptor.ts:24",{"_index":1505,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/databases/databases.controller.ts",{"_index":682,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":689,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":700,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:13",{"_index":707,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:28",{"_index":709,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/sample",{"_index":1412,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["src/databases/sample.ts",{"_index":1689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["src/decorator/customize.ts",{"_index":1690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/dto/create",{"_index":602,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1519,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/entities/file.entity.ts",{"_index":756,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":758,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:16",{"_index":771,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:34",{"_index":761,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:39",{"_index":762,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:44",{"_index":765,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:49",{"_index":763,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":808,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":815,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":818,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":819,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":821,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":820,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":817,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer.config.ts",{"_index":1130,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/multer.config.ts:11",{"_index":1137,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:35",{"_index":1134,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:8",{"_index":1140,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/health/health.controller.ts",{"_index":827,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:15",{"_index":831,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":840,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/jobs/dto/create",{"_index":542,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1521,"title":{},"body":{"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":876,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:17",{"_index":881,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:24",{"_index":884,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:36",{"_index":886,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:42",{"_index":893,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:48",{"_index":889,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":910,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":917,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:109",{"_index":926,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:18",{"_index":920,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:26",{"_index":922,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:40",{"_index":923,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:77",{"_index":924,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:83",{"_index":928,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:98",{"_index":927,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schemas",{"_index":1078,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Resume.html":{}}}],["src/jobs/schemas/job.schemas.ts",{"_index":850,"title":{},"body":{"classes/Job.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schemas/job.schemas.ts:10",{"_index":865,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:13",{"_index":868,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:16",{"_index":854,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:23",{"_index":864,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:26",{"_index":867,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:29",{"_index":866,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:32",{"_index":863,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:35",{"_index":859,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:38",{"_index":869,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:41",{"_index":860,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:44",{"_index":861,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:47",{"_index":856,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:53",{"_index":871,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:59",{"_index":858,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:65",{"_index":855,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:68",{"_index":870,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:71",{"_index":862,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:74",{"_index":857,"title":{},"body":{"classes/Job.html":{}}}],["src/mail/mail.controller.ts",{"_index":1044,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts:17",{"_index":1049,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module.ts",{"_index":1068,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1096,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:14",{"_index":1104,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:17",{"_index":1102,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:19",{"_index":1101,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:9",{"_index":1100,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":1693,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permissions/dto/create",{"_index":623,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1523,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":1202,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:15",{"_index":1205,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:21",{"_index":1208,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:31",{"_index":1210,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:37",{"_index":1215,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:43",{"_index":1212,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module.ts",{"_index":1228,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":1231,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:12",{"_index":1233,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:15",{"_index":1234,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:38",{"_index":1235,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:69",{"_index":1236,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:77",{"_index":1238,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:89",{"_index":1237,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schema/permission.schema",{"_index":694,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{}}}],["src/permissions/schema/permission.schema.ts",{"_index":1187,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schema/permission.schema.ts:12",{"_index":1188,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:15",{"_index":1194,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:18",{"_index":1195,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:21",{"_index":1190,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:27",{"_index":1198,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:33",{"_index":1192,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:39",{"_index":1189,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:42",{"_index":1197,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:45",{"_index":1193,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:48",{"_index":1191,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:9",{"_index":1196,"title":{},"body":{"classes/Permission.html":{}}}],["src/resumes/dto/create",{"_index":632,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":1525,"title":{},"body":{"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1303,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:17",{"_index":1307,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:23",{"_index":1308,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:34",{"_index":1309,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:40",{"_index":1316,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:46",{"_index":1314,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:52",{"_index":1313,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1332,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1336,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:117",{"_index":1346,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:128",{"_index":1344,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:14",{"_index":1339,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:20",{"_index":1341,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:47",{"_index":1342,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:84",{"_index":1345,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:94",{"_index":1347,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schema/resume.schema.ts",{"_index":1280,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schema/resume.schema.ts:11",{"_index":1289,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:14",{"_index":1297,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:17",{"_index":1296,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:20",{"_index":1293,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:23",{"_index":1284,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:26",{"_index":1292,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:29",{"_index":1290,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:39",{"_index":1286,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:45",{"_index":1295,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:51",{"_index":1288,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:57",{"_index":1285,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:60",{"_index":1294,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:63",{"_index":1291,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:66",{"_index":1287,"title":{},"body":{"classes/Resume.html":{}}}],["src/roles/dto/create",{"_index":649,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1527,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1379,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:15",{"_index":1382,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:21",{"_index":1383,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:31",{"_index":1384,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:37",{"_index":1387,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:43",{"_index":1385,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["src/roles/roles.module.ts",{"_index":1401,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/roles/roles.service.ts",{"_index":1404,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:13",{"_index":1406,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:16",{"_index":1407,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:36",{"_index":1408,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:67",{"_index":1409,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:77",{"_index":1411,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:88",{"_index":1410,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schema/role.schema",{"_index":696,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/roles/schema/role.schema.ts",{"_index":1363,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schema/role.schema.ts:10",{"_index":1371,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:13",{"_index":1368,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:16",{"_index":1369,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:19",{"_index":1372,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:22",{"_index":1365,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:28",{"_index":1374,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:34",{"_index":1367,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:40",{"_index":1364,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:43",{"_index":1373,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:46",{"_index":1370,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:49",{"_index":1366,"title":{},"body":{"classes/Role.html":{}}}],["src/subscribers/dto/create",{"_index":661,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/dto/update",{"_index":1529,"title":{},"body":{"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/schema/subscriber.schema",{"_index":1077,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["src/subscribers/schema/subscriber.schema.ts",{"_index":1430,"title":{},"body":{"classes/Subscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:12",{"_index":1437,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:15",{"_index":1438,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:18",{"_index":1432,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:24",{"_index":1440,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:30",{"_index":1434,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:36",{"_index":1431,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:39",{"_index":1439,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:42",{"_index":1436,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:45",{"_index":1433,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:9",{"_index":1435,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1443,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.controller.ts:15",{"_index":1447,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:22",{"_index":1454,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:28",{"_index":1449,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:38",{"_index":1450,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:45",{"_index":1459,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:51",{"_index":1455,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1477,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.service.ts",{"_index":1480,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.service.ts:12",{"_index":1483,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:17",{"_index":1485,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:32",{"_index":1489,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:37",{"_index":1486,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:68",{"_index":1487,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:77",{"_index":1491,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:90",{"_index":1490,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/users/dto/create",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1532,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":692,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1545,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:12",{"_index":1556,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:15",{"_index":1553,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:18",{"_index":1557,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:21",{"_index":1547,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:24",{"_index":1554,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:27",{"_index":1546,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:30",{"_index":1548,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:36",{"_index":1559,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:39",{"_index":1558,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:42",{"_index":1550,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:48",{"_index":1561,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:54",{"_index":1552,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:60",{"_index":1549,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:63",{"_index":1560,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:66",{"_index":1555,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:69",{"_index":1551,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1563,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:16",{"_index":1567,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:22",{"_index":1568,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:32",{"_index":1570,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:39",{"_index":1575,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:45",{"_index":1572,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.interface",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["src/users/users.interface.ts",{"_index":845,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.module",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{},"modules/JobsModule.html":{}}}],["src/users/users.module.ts",{"_index":1590,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{}}}],["src/users/users.service.ts",{"_index":1613,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:108",{"_index":1625,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:118",{"_index":1627,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:124",{"_index":1630,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:128",{"_index":1634,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:139",{"_index":1633,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:159",{"_index":1637,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:16",{"_index":1620,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:163",{"_index":1635,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:25",{"_index":1636,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:32",{"_index":1622,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:50",{"_index":1632,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:72",{"_index":1624,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":573,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["startdate",{"_index":575,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["startdatejs",{"_index":945,"title":{},"body":{"injectables/JobsService.html":{}}}],["startdatejs.isbefore(enddatejs",{"_index":950,"title":{},"body":{"injectables/JobsService.html":{}}}],["started",{"_index":1740,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":636,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":1263,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["storage",{"_index":1168,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["strategy",{"_index":1018,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":1093,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":139,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["subcriber",{"_index":1448,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subcriber')@post",{"_index":1446,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subcriberdocument",{"_index":1105,"title":{},"body":{"injectables/MailService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"miscellaneous/typealiases.html":{}}}],["subcribermodel",{"_index":1484,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subject",{"_index":1123,"title":{},"body":{"injectables/MailService.html":{}}}],["subs",{"_index":1108,"title":{},"body":{"injectables/MailService.html":{}}}],["subs.name",{"_index":1129,"title":{},"body":{"injectables/MailService.html":{}}}],["subs.skills",{"_index":1110,"title":{},"body":{"injectables/MailService.html":{}}}],["subscriber",{"_index":1075,"title":{"classes/Subscriber.html":{}},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber's",{"_index":1453,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscriber.dto",{"_index":1462,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts",{"_index":662,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:14",{"_index":668,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:5",{"_index":664,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:9",{"_index":663,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.name",{"_index":1079,"title":{},"body":{"modules/MailModule.html":{},"modules/SubscribersModule.html":{}}}],["subscribermodel",{"_index":1097,"title":{},"body":{"injectables/MailService.html":{}}}],["subscribers",{"_index":1106,"title":{},"body":{"injectables/MailService.html":{},"controllers/SubscribersController.html":{}}}],["subscribers.controller",{"_index":1478,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers.service",{"_index":1461,"title":{},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberschema",{"_index":1076,"title":{},"body":{"modules/MailModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscriberscontroller",{"_index":1442,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":58,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1460,"title":{"injectables/SubscribersService.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["subsskills",{"_index":1109,"title":{},"body":{"injectables/MailService.html":{}}}],["success",{"_index":1060,"title":{},"body":{"controllers/MailController.html":{}}}],["success')@cron(cronexpression.every_5_minutes",{"_index":1048,"title":{},"body":{"controllers/MailController.html":{}}}],["successfully",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MulterConfigService.html":{}}}],["successfully!')@public()@post('/register",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["sunday",{"_index":1063,"title":{},"body":{"controllers/MailController.html":{}}}],["super",{"_index":977,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":986,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super_admin",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1748,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1749,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1151,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sẵn",{"_index":1039,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["t",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"classes/Company.html":{},"injectables/JobsService.html":{},"classes/User.html":{},"index.html":{}}}],["ta",{"_index":1604,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["table",{"_index":1700,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1699,"title":{},"body":{"coverage.html":{}}}],["targerendpoint",{"_index":998,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targerendpoint.startswith(\"/api/v1/auth",{"_index":1005,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetdirectory",{"_index":1138,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetmethod",{"_index":996,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["tells",{"_index":565,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["temp",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["temp.permissions",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["temp?.permissions",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["template",{"_index":1087,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["templates",{"_index":1090,"title":{},"body":{"modules/MailModule.html":{}}}],["terminusmodule",{"_index":842,"title":{},"body":{"modules/HealthModule.html":{}}}],["th",{"_index":470,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["tham",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["this.authservice.handlefetchbyhr(req",{"_index":937,"title":{},"body":{"injectables/JobsService.html":{},"injectables/ResumesService.html":{}}}],["this.authservice.login(req.user",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(user",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(refreshtoken",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.registeruser(registeruserdto",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":1041,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companiesservice.create(createcompanydto",{"_index":392,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(+currentpage",{"_index":401,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(id",{"_index":404,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id",{"_index":408,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":406,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companymodel.create",{"_index":439,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter",{"_index":473,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter)).length",{"_index":459,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(query.filter).skip(offset).limit(limit).populate('createdby",{"_index":446,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["this.companymodel.findone",{"_index":490,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.softdelete",{"_index":494,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.updateone",{"_index":491,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.configservice.get(\"jwt_refresh_token_secret",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get(\"should_init",{"_index":723,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.configservice.get('jwt_access_token_secret",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createrefreshtoken(payload",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.db.pingcheck('database",{"_index":839,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.ensureexists(`public/images/${folder",{"_index":1173,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.filesservice.findall",{"_index":802,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findone(+id",{"_index":803,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.remove(+id",{"_index":805,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.update(+id",{"_index":804,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.gethashpassword(password",{"_index":1656,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.handledate(startdate",{"_index":932,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.health.check",{"_index":838,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jobmodel.create",{"_index":933,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find",{"_index":1112,"title":{},"body":{"injectables/MailService.html":{}}}],["this.jobmodel.find(filter",{"_index":940,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find(filter)).length",{"_index":939,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findbyid(id",{"_index":941,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete",{"_index":943,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone",{"_index":942,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":900,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(+currentpage",{"_index":901,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(id",{"_index":902,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":906,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":904,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":752,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.mailerservice.sendmail",{"_index":1119,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.autosendemail",{"_index":1065,"title":{},"body":{"controllers/MailController.html":{}}}],["this.permissionmodel.count",{"_index":728,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":1245,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter",{"_index":1249,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter)).length",{"_index":1248,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select(\"_id",{"_index":733,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findone",{"_index":1241,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(init_permissions",{"_index":732,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.softdelete({_id",{"_index":1254,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone",{"_index":1252,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone({_id",{"_index":1253,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":1221,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall(+currentpage",{"_index":1222,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":1223,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":1225,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":1224,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.reflector.get(response_message",{"_index":1278,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":983,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_permission",{"_index":989,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.resumemodel.create",{"_index":1349,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find",{"_index":1360,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter",{"_index":1354,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter)).length",{"_index":1353,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findone",{"_index":1356,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1359,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone",{"_index":1357,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createresumedto",{"_index":1322,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(+currentpage",{"_index":1323,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findbyusers(user",{"_index":1328,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1324,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1326,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.update(id",{"_index":1325,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodel.count",{"_index":730,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1416,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter",{"_index":1420,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter)).length",{"_index":1419,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id",{"_index":1425,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id)).populate",{"_index":1422,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":737,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["this.rolemodel.insertmany",{"_index":734,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.softdelete",{"_index":1429,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.updateone",{"_index":1423,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1392,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(+currentpage",{"_index":1393,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1394,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(user.role._id",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.rolesservice.findone(userrole._id",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.rolesservice.findone(userrole._id)).toobject",{"_index":1030,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.rolesservice.remove(id",{"_index":1397,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1395,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.subcribermodel.create",{"_index":1497,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subcribermodel.find(filter",{"_index":1499,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subcribermodel.find(filter)).length",{"_index":1498,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subcribermodel.findone",{"_index":1492,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subcribermodel.softdelete",{"_index":1502,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subcribermodel.updateone",{"_index":1500,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find",{"_index":1107,"title":{},"body":{"injectables/MailService.html":{}}}],["this.subscribersservice.create(createsubscriberdto",{"_index":1466,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findall(+currentpage",{"_index":1470,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findone(id",{"_index":1471,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.getskills(user",{"_index":1469,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.remove(id",{"_index":1474,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.update(updatesubscriberdto",{"_index":1473,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.usermodel.count",{"_index":726,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":1658,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter",{"_index":1663,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter)).length",{"_index":1662,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":1670,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":1654,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":738,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.softdelete",{"_index":1674,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":1667,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.gethashpassword(this.configservice.get(\"init_password",{"_index":741,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1580,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(+currentpage",{"_index":1581,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":1582,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(payload._id",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyusername(username",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.finduserbytoken(refreshtoken",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isvalidpassword(pass",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.register(registeruser",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(id",{"_index":1586,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto",{"_index":1585,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateusertoken(null",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateusertoken(refresh_token",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["throttle",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlerguard",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["throttlermodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thuộc",{"_index":1540,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["thành",{"_index":747,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["thêm",{"_index":1027,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["thống",{"_index":1496,"title":{},"body":{"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thừa",{"_index":1538,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["thực",{"_index":541,"title":{},"body":{"classes/Company.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["timestamps",{"_index":537,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["tinh",{"_index":1541,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["tm",{"_index":464,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["today",{"_index":944,"title":{},"body":{"injectables/JobsService.html":{}}}],["token",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["token')@get('/refresh",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["total",{"_index":487,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalitems",{"_index":458,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":465,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tpken",{"_index":994,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["tr",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{}}}],["trang",{"_index":467,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["transform",{"_index":548,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["transformer",{"_index":549,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1271,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":1081,"title":{},"body":{"modules/MailModule.html":{}}}],["trong",{"_index":535,"title":{},"body":{"classes/Company.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["true",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["truy",{"_index":1007,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["truyền",{"_index":396,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["try",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["trying",{"_index":1165,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["trên",{"_index":1494,"title":{},"body":{"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["trường",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["trống",{"_index":560,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["trống!'})@isarray({message",{"_index":618,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["trống!'})@isboolean({message",{"_index":611,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["trống!'})@ismongoid({message",{"_index":679,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["trống!'})@transform",{"_index":607,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["trống'})@isarray({message",{"_index":665,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["trống'})@isboolean({message",{"_index":652,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["trống'})@ismongoid({each",{"_index":655,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["ts",{"_index":476,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tt",{"_index":1596,"title":{},"body":{"modules/UsersModule.html":{}}}],["ttl",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["tuanthanh00200@gmail.com",{"_index":1120,"title":{},"body":{"injectables/MailService.html":{}}}],["tuanthanh@gmail.com",{"_index":748,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["tuanthanhdev",{"_index":1121,"title":{},"body":{"injectables/MailService.html":{}}}],["tuấn",{"_index":746,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["type",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1764,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1511,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["tài",{"_index":1672,"title":{},"body":{"injectables/UsersService.html":{}}}],["tác",{"_index":1609,"title":{},"body":{"modules/UsersModule.html":{}}}],["tính",{"_index":1543,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["tương",{"_index":529,"title":{},"body":{"classes/Company.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["tượng",{"_index":1597,"title":{},"body":{"modules/UsersModule.html":{}}}],["tại",{"_index":1244,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tạo",{"_index":540,"title":{},"body":{"classes/Company.html":{},"classes/User.html":{}}}],["tất",{"_index":400,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{}}}],["tồn",{"_index":1243,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tổng",{"_index":460,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tới",{"_index":1595,"title":{},"body":{"modules/UsersModule.html":{}}}],["tức",{"_index":974,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception",{"_index":969,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception(\"token",{"_index":993,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception(\"username/password",{"_index":1042,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":1282,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["unknown",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1760,"title":{},"body":{"properties.html":{}}}],["unreachable",{"_index":478,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["update",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@body",{"_index":1472,"title":{},"body":{"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["update(@param('id",{"_index":405,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["update(id",{"_index":376,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["update(updatesubscriberdto",{"_index":1456,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["update(updateuserdto",{"_index":1573,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateat",{"_index":503,"title":{},"body":{"classes/Company.html":{}}}],["updatecompanydto",{"_index":377,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":853,"title":{},"body":{"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":492,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["updatefiledto",{"_index":764,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejobdto",{"_index":890,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":1213,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updateresumedto",{"_index":1315,"title":{"classes/UpdateResumeDto.html":{}},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["updateroledto",{"_index":1386,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updates",{"_index":824,"title":{},"body":{"injectables/FilesService.html":{}}}],["updatesubscriberdto",{"_index":1457,"title":{"classes/UpdateSubscriberDto.html":{}},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":1531,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto._id",{"_index":1668,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateusertoken",{"_index":1616,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadedfile",{"_index":774,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":760,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(@uploadedfile",{"_index":787,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":766,"title":{},"body":{"controllers/FilesController.html":{}}}],["upsert",{"_index":1501,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["uri",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":637,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{}}}],["useclass",{"_index":814,"title":{},"body":{"modules/FilesModule.html":{}}}],["usefactory",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["useguards",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(localauthguard",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(throttlerguard",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":773,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('fileupload",{"_index":786,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":155,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@delete(':id",{"_index":1571,"title":{},"body":{"controllers/UsersController.html":{}}}],["user')@patch",{"_index":1574,"title":{},"body":{"controllers/UsersController.html":{}}}],["user')@post",{"_index":1566,"title":{},"body":{"controllers/UsersController.html":{}}}],["user')@post('/logout",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["user')@responsemessage('get",{"_index":1312,"title":{},"body":{"controllers/ResumesController.html":{}}}],["user's",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["user._id",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.company",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dto",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":580,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":582,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:13",{"_index":1534,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:18",{"_index":677,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:24",{"_index":675,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:27",{"_index":678,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:30",{"_index":673,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:33",{"_index":676,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":672,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:40",{"_index":680,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:46",{"_index":674,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:53",{"_index":1259,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:59",{"_index":1257,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:62",{"_index":1260,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:65",{"_index":1256,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:68",{"_index":1258,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:71",{"_index":1255,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:74",{"_index":1261,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:8",{"_index":581,"title":{},"body":{"classes/Company-2.html":{}}}],["user.email",{"_index":441,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":697,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.role",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["user:iuser",{"_index":1396,"title":{},"body":{"controllers/RolesController.html":{}}}],["user?._id",{"_index":1660,"title":{},"body":{"injectables/UsersService.html":{}}}],["user?.createdat",{"_index":1661,"title":{},"body":{"injectables/UsersService.html":{}}}],["user?.permissions",{"_index":1000,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["user@gmail.com",{"_index":749,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["user_role",{"_index":716,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdocument",{"_index":713,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":638,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["userm",{"_index":1638,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodel",{"_index":708,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["userrole",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["userrole?._id",{"_index":751,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":1564,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1591,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.interface",{"_index":1577,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":1576,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.controller",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":691,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":70,"title":{"controllers/UsersController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":706,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["usersmodule",{"_index":59,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JobsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":263,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["v",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/PermissionsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["validate",{"_index":1012,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":1015,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":1036,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":556,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["validateuser",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":567,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["validator",{"_index":557,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1688,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1773,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1757,"title":{},"body":{"properties.html":{}}}],["vietnam",{"_index":744,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["việc",{"_index":1600,"title":{},"body":{"modules/UsersModule.html":{}}}],["viện",{"_index":1646,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["void",{"_index":1139,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["vui",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["vào",{"_index":1028,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["với",{"_index":530,"title":{},"body":{"classes/Company.html":{},"injectables/JwtAuthGuard.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["welcome",{"_index":1124,"title":{},"body":{"injectables/MailService.html":{}}}],["without",{"_index":1182,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["world",{"_index":141,"title":{},"body":{"injectables/AppService.html":{}}}],["xóa",{"_index":1428,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["y",{"_index":1593,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["you're",{"_index":1164,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["zoom",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get, Render, Post, UseGuards, Request } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LocalAuthGuard } from './auth/local-auth.guard';\nimport { AuthService } from './auth/auth.service';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\nimport { Public } from './decorator/customize';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private configService: ConfigService,\n    private authService: AuthService\n  ) { }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // AppModule.ts\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UsersController } from './users/users.controller';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { CompaniesModule } from './companies/companies.module';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FilesModule } from './files/files.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { RolesModule } from './roles/roles.module';\nimport { DatabasesModule } from './databases/databases.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { MailModule } from './mail/mail.module';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { APP_GUARD } from '@nestjs/core';\nimport { ThrottlerGuard } from '@nestjs/throttler'\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { HealthModule } from './health/health.module';\n\n@Module({\n  imports: [\n    ScheduleModule.forRoot(),\n    ThrottlerModule.forRoot([{\n      ttl: 60000, // đơn vị: ms = 60s\n      limit: 2,\n    }]),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule], // Import ConfigModule\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGODB_URI'), // Đọc giá trị từ ConfigService\n        connectionFactory: (connection) => {\n          connection.plugin(softDeletePlugin);\n          return connection;\n        }\n      }),\n      inject: [ConfigService],\n    }),\n    ConfigModule.forRoot({\n      isGlobal: true, // module này dùng để cấu hình biến môi trường\n    }),\n\n    UsersModule,\n    AuthModule,\n    CompaniesModule,\n    JobsModule,\n    FilesModule,\n    ResumesModule,\n    PermissionsModule,\n    RolesModule,\n    DatabasesModule,\n    SubscribersModule,\n    MailModule,\n    HealthModule\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                handleGetAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                handleLogin\n                            \n                            \n                                    \n                                    \n                                handleLogout\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRefreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        handleGetAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleGetAccount(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Get user information')@UseGuards(ThrottlerGuard)@Get('/account')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        handleLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogin(req, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(LocalAuthGuard)@UseGuards(ThrottlerGuard)@Post('/login')@ResponseMessage('Login successfully!')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogout(user: IUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Logout user')@Post('/logout')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRefreshToken(request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Get user by refresh token')@Get('/refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRegister(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Register successfully!')@Public()@Post('/register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Req, Res, UseGuards } from \"@nestjs/common\";\nimport { AuthService } from \"./auth.service\";\nimport { Public, ResponseMessage, User } from \"src/decorator/customize\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { RegisterUserDto } from \"src/users/dto/create-user.dto\";\nimport { IUser } from \"src/users/users.interface\";\nimport { Request, Response } from \"express\";\nimport { RolesService } from \"src/roles/roles.service\";\nimport { LocalAuthGuard } from \"./local-auth.guard\";\nimport { Throttle, ThrottlerGuard } from '@nestjs/throttler'\nimport { ApiTags } from \"@nestjs/swagger\";\n\n@ApiTags(\"auth\")\n@Controller(\"auth\")\nexport class AuthController {\n    constructor(\n        private authService: AuthService,\n        private rolesService: RolesService\n    ) { }\n\n    @Public()\n    @UseGuards(LocalAuthGuard)\n    @UseGuards(ThrottlerGuard)\n    @Post('/login')\n    @ResponseMessage(\"Login successfully!\")\n    handleLogin(@Req() req, @Res({ passthrough: true }) response: Response) {\n        return this.authService.login(req.user, response);\n    }\n\n    @ResponseMessage(\"Register successfully!\")\n    @Public()\n    @Post('/register')\n    handleRegister(@Body() registerUserDto: RegisterUserDto) {\n        return this.authService.registerUser(registerUserDto);\n    }\n\n    @ResponseMessage(\"Get user information\")\n    @UseGuards(ThrottlerGuard)\n    @Get('/account')\n    async handleGetAccount(@User() user: IUser) {\n        const temp = await this.rolesService.findOne(user.role._id) as any;\n        user.permissions = temp.permissions;\n        return { user }\n    }\n\n    @Public()\n    @ResponseMessage(\"Get user by refresh token\")\n    @Get('/refresh')\n    handleRefreshToken(@Req() request: Request, @Res({ passthrough: true }) response: Response) {\n        const refreshToken = request.cookies['refresh_token'];\n        return this.authService.processNewToken(refreshToken, response);\n    }\n\n    @ResponseMessage(\"Logout user\")\n    @Post('/logout')\n    handleLogout(@User() user: IUser, @Res({ passthrough: true }) response: Response) {\n        return this.authService.logout(user, response);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './passport/local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport ms from 'ms';\nimport { AuthController } from './auth.controller';\nimport { RolesModule } from 'src/roles/roles.module';\nimport { APP_GUARD } from '@nestjs/core';\n@Module({\n  imports: [\n    UsersModule,\n    RolesModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: ms(configService.get('JWT_ACCESS_EXPIRE')) / 1000,\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n  controllers: [AuthController],\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                            \n                                handleFetchByHR\n                            \n                            \n                                logout\n                            \n                            \n                                processNewToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: IUser, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerUser(registerUser: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUser\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleFetchByHR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processNewToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:81\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { IUser } from 'src/users/users.interface';\nimport { RegisterUserDto } from 'src/users/dto/create-user.dto';\nimport { ConfigService } from '@nestjs/config';\nimport ms from 'ms';\nimport { Request, Response } from 'express';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private usersService: UsersService,\n        private jwtService: JwtService,\n        private configService: ConfigService,\n        private rolesService: RolesService\n    ) { }\n\n    // username và pass là 2 tham số passport trả về\n    async validateUser(username: string, pass: string): Promise {\n        const user = await this.usersService.findOneByUsername(username);\n        if (user) {\n            const isValid = this.usersService.isValidPassword(pass, user.password);\n            if (isValid === true) {\n                const userRole = user.role as unknown as { _id: string; name: string }\n                const temp = await this.rolesService.findOne(userRole._id);\n\n                const objUser = {\n                    ...user.toObject(),\n                    permissions: temp?.permissions ?? []\n                }\n                return objUser;\n            }\n        }\n        return null;\n    }\n\n    async registerUser(registerUser: RegisterUserDto) {\n        return await this.usersService.register(registerUser);\n    }\n\n    async login(user: IUser, response: Response) {\n        const { _id, name, email, role, permissions } = user;\n        const payload = {\n            sub: \"token login\",\n            iss: \"from server\",\n            _id,\n            name,\n            email,\n            role\n        };\n        const refresh_token = this.createRefreshToken(payload);\n\n        await this.usersService.updateUserToken(refresh_token, _id);\n\n        response.cookie('refresh_token', refresh_token, {\n            httpOnly: true,\n            maxAge: ms(this.configService.get(\"JWT_REFRESH_EXPIRE\"))\n        });\n        return {\n            access_token: this.jwtService.sign(payload),\n            user: {\n                _id,\n                name,\n                email,\n                role,\n                permissions\n            }\n        };\n    }\n\n    createRefreshToken = (payload: any) => {\n        const refresh_token = this.jwtService.sign(payload, {\n            secret: this.configService.get(\"JWT_REFRESH_TOKEN_SECRET\"),\n            expiresIn: ms(this.configService.get(\"JWT_REFRESH_EXPIRE\")) / 1000\n        });\n        return refresh_token;\n    }\n\n    processNewToken = async (refreshToken: string, response: Response) => {\n        try {\n            this.jwtService.verify(refreshToken, {\n                secret: this.configService.get(\"JWT_REFRESH_TOKEN_SECRET\"),\n            })\n\n            let user = await this.usersService.findUserByToken(refreshToken);\n            if (user) {\n                //update refresh token\n                const { _id, name, email, role } = user;\n                const payload = {\n                    sub: \"token login\",\n                    iss: \"from server\",\n                    _id,\n                    name,\n                    email,\n                    role\n                };\n                const refresh_token = this.createRefreshToken(payload);\n\n                // update user with refresh token\n                await this.usersService.updateUserToken(refresh_token, _id.toString());\n\n                // fetch user's role\n                const userRole = user.role as unknown as { _id: string; name: string }\n                const temp = await this.rolesService.findOne(userRole._id)\n\n                //set refresh_token as cookies\n                response.clearCookie('refresh_token')\n\n                response.cookie('refresh_token', refresh_token, {\n                    httpOnly: true,\n                    maxAge: ms(this.configService.get(\"JWT_REFRESH_EXPIRE\"))\n                });\n                return {\n                    access_token: this.jwtService.sign(payload),\n                    user: {\n                        _id,\n                        name,\n                        email,\n                        role,\n                        permissions: temp?.permissions ?? []\n                    }\n                };\n            }\n            else\n                throw new BadRequestException('Refresh token không hợp lệ. Vui lòng login.')\n        }\n        catch (error) {\n            throw new BadRequestException('Refresh token không hợp lệ. Vui lòng login.')\n        }\n    }\n\n    logout = async (user: IUser, response: Response) => {\n        try {\n            await this.usersService.updateUserToken(null, user._id);\n            response.clearCookie('refresh_token');\n            return 'ok';\n        }\n        catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    handleFetchByHR = async (req: Request) => {\n        let payload: IUser;\n        const authorizationHeader = req.headers['authorization'];\n\n        if (authorizationHeader) {\n            const [bearer, token] = authorizationHeader.split(' ');\n\n            if (bearer === 'Bearer' && token) {\n                payload = await this.jwtService.verifyAsync(\n                    token,\n                    {\n                        secret: this.configService.get('JWT_ACCESS_TOKEN_SECRET')\n                    }\n                );\n                if (payload.role.name === 'HR') {\n                    let user: any = await this.usersService.findOne(payload._id);\n                    let companyByUser = user.company;\n                    return companyByUser._id as string;\n                }\n            }\n        }\n\n        return '';\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('FETCH LIST COMPANY')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { query } from 'express';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags(\"companies\")\n@Controller('companies')\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) { }\n\n  @Post()\n  create(@Body() createCompanyDto: CreateCompanyDto, @User() user: IUser) {\n    return this.companiesService.create(createCompanyDto, user);\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage(\"FETCH LIST COMPANY\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() queryString: string // Không truyền gì hiểu là lấy tất cả\n  ) {\n    return this.companiesService.findAll(+currentPage, +limit, queryString);\n  }\n\n  @Get(':id')\n  @Public()\n  findOne(@Param('id') id: string) {\n    return this.companiesService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateCompanyDto: UpdateCompanyDto, @User() user: IUser) {\n    return this.companiesService.update(id, updateCompanyDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.companiesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\n\nCompaniesService\n\nCompaniesService\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CompaniesController } from './companies.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from './schemas/company.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }])],\n  controllers: [CompaniesController],\n  providers: [CompaniesService]\n})\nexport class CompaniesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, rq: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rq\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Company, CompanyDocument } from './schemas/company.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport mongoose, { Model } from 'mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class CompaniesService {\n  constructor(@InjectModel(Company.name) private companyModel: SoftDeleteModel) { }\n\n  async create(createCompanyDto: CreateCompanyDto, user: IUser) {\n    return await this.companyModel.create({\n      ...createCompanyDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    });\n  }\n\n  async findAll(page: number, limit: number, rq: string) {\n    // const query = aqp(queryString);\n    // const offset = (currentPage - 1) * limit;\n    // delete query.filter.page;\n    // return await this.companyModel.find(query.filter).skip(offset).limit(limit).populate('createdBy');\n\n    const { filter, projection, population } = aqp(rq);\n    let { sort } = aqp(rq);\n    let offset = (+page - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10; // Không truyền limit set mặc định: 10\n\n    delete filter.current;\n    delete filter.pageSize;\n\n    const totalItems = (await this.companyModel.find(filter)).length; // Tổng SL bản ghi TM\n    const totalPages = Math.ceil(totalItems / defaultLimit); // Số trang cần để hiển thị hết bản ghi\n\n    const result = await this.companyModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .exec()\n\n    return {\n      meta: {\n        current: page,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems\n      },\n      result\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id))\n      return 'Not found company';\n    const result = await this.companyModel.findOne({\n      _id: id\n    })\n    return result;\n  }\n\n  async update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser) {\n    return await this.companyModel.updateOne({ _id: id }, {\n      ...updateCompanyDto,\n      updatedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    });\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.companyModel.updateOne(\n      { _id: id },\n      {\n        deletedby: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n    return this.companyModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updateAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CompanyDocument = HydratedDocument;\n//  định nghĩa một kiểu CompanyDocument, là một loại dữ liệu (type) tương tự với kiểu Document của Mongoose.\n// đại diện cho một bản ghi (document) của model \"Company\" trong cơ sở dữ liệu MongoDB.\n\n@Schema({ timestamps: true })\nexport class Company {\n    @Prop()\n    name: string;\n\n    @Prop()\n    address: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    logo: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop()\n    createAt: Date;\n\n    @Prop()\n    updateAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deleteAt: Date;\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n// Tạo một schema thực tế từ class \"Company\". \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from \"class-transformer\";\nimport { IsArray, IsBoolean, IsDate, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested, isNotEmpty } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n\n    @IsNotEmpty()\n    logo: string;\n}\n\nexport class CreateJobDto {\n    @IsNotEmpty({ message: 'Name không được để trống!' })\n    name: string;\n\n    @IsNotEmpty({ message: 'Skills không được để trống!' })\n    @IsArray({ message: \"Skills có định dạng là array!\" })\n    //\"each\" tells class-validator to run the validation on each item of the array\n    @IsString({ each: true, message: \"Skills có định dạng là string\" })\n    skills: string[];\n\n    @IsNotEmpty({ message: 'Location không được để trống!' })\n    location: string;\n\n    @IsNotEmpty({ message: 'Salary không được để trống!' })\n    salary: string;\n\n    @IsNotEmpty({ message: 'Quantity không được để trống!' })\n    quantity: string;\n\n    @IsNotEmpty({ message: 'Level không được để trống!' })\n    level: string;\n\n    @IsNotEmpty({ message: 'Description không được để trống!' })\n    description: string;\n\n    @IsNotEmpty({ message: \"Start date không được để trống!\" })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'Start Date có định dạng là Date' })\n    startDate: Date;\n\n    @IsNotEmpty({ message: \"End date không được để trống!\" })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'End Date có định dạng là Date' })\n    @IsNotEmpty({ message: \"End date không được để trống!\" })\n    endDate: Date;\n\n    @IsNotEmpty({ message: \"Is active không được để trống!\" })\n    @IsBoolean({ message: \"isActive có định dạng là boolean!\" })\n    isActive: boolean;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-2.html":{"url":"classes/Company-2.html","title":"class - Company-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\n\nexport class CreateUserDto {\n    @IsNotEmpty({\n        message: 'Name không được để trống?',\n    })\n    name: string; // Mặc định là public\n\n    @IsEmail({}, { message: \"Email không đúng định dạng\" })\n    @IsNotEmpty({\n        message: 'Email không được để trống?',\n    })\n    email: string; // Mặc định là public\n\n    @IsNotEmpty({ message: \"Password không được để trống!\" })\n    password: string;\n\n    @IsNotEmpty({ message: \"Age không được để trống!\" })\n    age: number;\n\n    @IsNotEmpty({ message: \"Gender không được để trống!\" })\n    gender: string;\n\n    @IsNotEmpty({ message: \"Address không được để trống!\" })\n    address: string;\n\n    @IsNotEmpty({ message: \"Role không được để trống!\" })\n    @IsMongoId({message: \"Role phải có định dạng ObjectId\"})\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company\n}\n\nexport class RegisterUserDto {\n    @IsNotEmpty({\n        message: 'Name không được để trống?',\n    })\n    name: string; // Mặc định là public\n\n    @IsEmail({}, { message: \"Email không đúng định dạng\" })\n    @IsNotEmpty({\n        message: 'Email không được để trống?',\n    })\n    email: string; // Mặc định là public\n\n    @IsNotEmpty({ message: \"Password không được để trống!\" })\n    password: string;\n\n    @IsNotEmpty({ message: \"Age không được để trống!\" })\n    age: number;\n\n    @IsNotEmpty({ message: \"Gender không được để trống!\" })\n    gender: string;\n\n    @IsNotEmpty({ message: \"Address không được để trống!\" })\n    address: string;\n\n    // @IsNotEmpty({ message: \"Role không được để trống!\" })\n    role: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address chỉ không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Logo không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class CreateCompanyDto {\n    @IsNotEmpty({\n        message: 'Name không được để trống?',\n    })\n    name: string; // Mặc định là public\n\n    @IsNotEmpty({\n        message: 'Address chỉ không được để trống?',\n    })\n    address: string;\n\n    @IsNotEmpty({\n        message: 'Description không được để trống?',\n    })\n    description: string;\n\n    @IsNotEmpty({\n        message: 'Logo không được để trống?',\n    })\n    logo: string\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                endDate\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                            \n                                    \n                                    \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description không được để trống!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'End date không được để trống!'})@Transform( => )@IsDate({message: 'End Date có định dạng là Date'})@IsNotEmpty({message: 'End date không được để trống!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Is active không được để trống!'})@IsBoolean({message: 'isActive có định dạng là boolean!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Level không được để trống!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Location không được để trống!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Quantity không được để trống!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Salary không được để trống!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Skills không được để trống!'})@IsArray({message: 'Skills có định dạng là array!'})@IsString({each: true, message: 'Skills có định dạng là string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Start date không được để trống!'})@Transform( => )@IsDate({message: 'Start Date có định dạng là Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from \"class-transformer\";\nimport { IsArray, IsBoolean, IsDate, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested, isNotEmpty } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n\n    @IsNotEmpty()\n    logo: string;\n}\n\nexport class CreateJobDto {\n    @IsNotEmpty({ message: 'Name không được để trống!' })\n    name: string;\n\n    @IsNotEmpty({ message: 'Skills không được để trống!' })\n    @IsArray({ message: \"Skills có định dạng là array!\" })\n    //\"each\" tells class-validator to run the validation on each item of the array\n    @IsString({ each: true, message: \"Skills có định dạng là string\" })\n    skills: string[];\n\n    @IsNotEmpty({ message: 'Location không được để trống!' })\n    location: string;\n\n    @IsNotEmpty({ message: 'Salary không được để trống!' })\n    salary: string;\n\n    @IsNotEmpty({ message: 'Quantity không được để trống!' })\n    quantity: string;\n\n    @IsNotEmpty({ message: 'Level không được để trống!' })\n    level: string;\n\n    @IsNotEmpty({ message: 'Description không được để trống!' })\n    description: string;\n\n    @IsNotEmpty({ message: \"Start date không được để trống!\" })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'Start Date có định dạng là Date' })\n    startDate: Date;\n\n    @IsNotEmpty({ message: \"End date không được để trống!\" })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'End Date có định dạng là Date' })\n    @IsNotEmpty({ message: \"End date không được để trống!\" })\n    endDate: Date;\n\n    @IsNotEmpty({ message: \"Is active không được để trống!\" })\n    @IsBoolean({ message: \"isActive có định dạng là boolean!\" })\n    isActive: boolean;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'apiPath không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'method không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'module không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from \"class-validator\";\n\nexport class CreatePermissionDto {\n    @IsNotEmpty({message: 'Name không được để trống?'})\n    name: string;\n    \n    @IsNotEmpty({message: 'apiPath không được để trống?'})\n    apiPath: string;\n\n    @IsNotEmpty({message: 'method không được để trống?'})\n    method: string;\n\n    @IsNotEmpty({message: 'module không được để trống?'})\n    module: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId({message: 'companyId không hợp lệ?'})@IsNotEmpty({message: 'companyId không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không đúng định dạng'})@IsNotEmpty({message: 'Email không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId({message: 'jobId không hợp lệ?'})@IsNotEmpty({message: 'jobId không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'status không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId({message: 'userId không hợp lệ?'})@IsNotEmpty({message: 'userId không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsEmail, IsMongoId, IsNotEmpty } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nexport class CreateResumeDto {\n    @IsEmail({}, { message: \"Email không đúng định dạng\" })\n    @IsNotEmpty({\n        message: 'Email không được để trống?',\n    })\n    email: string; // Mặc định là public\n\n    @IsMongoId({\n        message: 'userId không hợp lệ?'\n    })\n    @IsNotEmpty({\n        message: 'userId không được để trống?'\n    })\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({\n        message: 'url không được để trống?'\n    })\n    url: string;\n\n    @IsNotEmpty({\n        message: 'status không được để trống?'\n    })\n    status: string;\n\n    @IsMongoId({\n        message: 'companyId không hợp lệ?'\n    })\n    @IsNotEmpty({\n        message: 'companyId không được để trống?'\n    })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsMongoId({\n        message: 'jobId không hợp lệ?'\n    })\n    @IsNotEmpty({\n        message: 'jobId không được để trống?'\n    })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n    @IsNotEmpty({\n        message: 'url không được để trống?'\n    })\n    url: string;\n    \n    @IsMongoId({\n        message: 'companyId không hợp lệ?'\n    })\n    @IsNotEmpty({\n        message: 'companyId không được để trống?'\n    })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsMongoId({\n        message: 'jobId không hợp lệ?'\n    })\n    @IsNotEmpty({\n        message: 'jobId không được để trống?'\n    })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive không được để trống'})@IsBoolean({message: 'isActive có giá trị boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'permissions không được để trống'})@IsMongoId({each: true, message: 'each permission là mongo object id'})@IsArray({message: 'permissions có định dạng là array'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsMongoId, IsNotEmpty } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nexport class CreateRoleDto {\n    @IsNotEmpty({ message: 'name không được để trống' })\n    name: string;\n\n    @IsNotEmpty({ message: 'description không được để trống' })\n    description: string;\n\n    @IsNotEmpty({ message: 'isActive không được để trống' })\n    @IsBoolean({ message: 'isActive có giá trị boolean' })\n    isActive: boolean;\n\n    @IsNotEmpty({ message: 'permissions không được để trống' })\n    @IsMongoId({ each: true, message: 'each permission là mongo object id' })\n    @IsArray({ message: 'permissions có định dạng là array' })\n    permissions: mongoose.Schema.Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/create-subscriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không đúng định dạng'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Skills không được để trống'})@IsArray({message: 'Skills có định dạng là array'})@IsString({each: true, message: 'Skills dịnh dạng là string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsEmail, IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreateSubscriberDto {\n    @IsNotEmpty({ message: 'Name không được để trống' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được để trống'})\n    email: string;\n\n    @IsNotEmpty({ message: 'Skills không được để trống'})\n    @IsArray({ message: 'Skills có định dạng là array'})\n    @IsString({ each: true, message: 'Skills dịnh dạng là string'})\n    skills: string[];\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCvDto.html":{"url":"classes/CreateUserCvDto.html","title":"class - CreateUserCvDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId({message: 'companyId không hợp lệ?'})@IsNotEmpty({message: 'companyId không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId({message: 'jobId không hợp lệ?'})@IsNotEmpty({message: 'jobId không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsEmail, IsMongoId, IsNotEmpty } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nexport class CreateResumeDto {\n    @IsEmail({}, { message: \"Email không đúng định dạng\" })\n    @IsNotEmpty({\n        message: 'Email không được để trống?',\n    })\n    email: string; // Mặc định là public\n\n    @IsMongoId({\n        message: 'userId không hợp lệ?'\n    })\n    @IsNotEmpty({\n        message: 'userId không được để trống?'\n    })\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({\n        message: 'url không được để trống?'\n    })\n    url: string;\n\n    @IsNotEmpty({\n        message: 'status không được để trống?'\n    })\n    status: string;\n\n    @IsMongoId({\n        message: 'companyId không hợp lệ?'\n    })\n    @IsNotEmpty({\n        message: 'companyId không được để trống?'\n    })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsMongoId({\n        message: 'jobId không hợp lệ?'\n    })\n    @IsNotEmpty({\n        message: 'jobId không được để trống?'\n    })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n    @IsNotEmpty({\n        message: 'url không được để trống?'\n    })\n    url: string;\n    \n    @IsMongoId({\n        message: 'companyId không hợp lệ?'\n    })\n    @IsNotEmpty({\n        message: 'companyId không được để trống?'\n    })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsMongoId({\n        message: 'jobId không hợp lệ?'\n    })\n    @IsNotEmpty({\n        message: 'jobId không được để trống?'\n    })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được để trống!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age không được để trống!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không đúng định dạng'})@IsNotEmpty({message: 'Email không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender không được để trống!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password không được để trống!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Role không được để trống!'})@IsMongoId({message: 'Role phải có định dạng ObjectId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\n\nexport class CreateUserDto {\n    @IsNotEmpty({\n        message: 'Name không được để trống?',\n    })\n    name: string; // Mặc định là public\n\n    @IsEmail({}, { message: \"Email không đúng định dạng\" })\n    @IsNotEmpty({\n        message: 'Email không được để trống?',\n    })\n    email: string; // Mặc định là public\n\n    @IsNotEmpty({ message: \"Password không được để trống!\" })\n    password: string;\n\n    @IsNotEmpty({ message: \"Age không được để trống!\" })\n    age: number;\n\n    @IsNotEmpty({ message: \"Gender không được để trống!\" })\n    gender: string;\n\n    @IsNotEmpty({ message: \"Address không được để trống!\" })\n    address: string;\n\n    @IsNotEmpty({ message: \"Role không được để trống!\" })\n    @IsMongoId({message: \"Role phải có định dạng ObjectId\"})\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company\n}\n\nexport class RegisterUserDto {\n    @IsNotEmpty({\n        message: 'Name không được để trống?',\n    })\n    name: string; // Mặc định là public\n\n    @IsEmail({}, { message: \"Email không đúng định dạng\" })\n    @IsNotEmpty({\n        message: 'Email không được để trống?',\n    })\n    email: string; // Mặc định là public\n\n    @IsNotEmpty({ message: \"Password không được để trống!\" })\n    password: string;\n\n    @IsNotEmpty({ message: \"Age không được để trống!\" })\n    age: number;\n\n    @IsNotEmpty({ message: \"Gender không được để trống!\" })\n    gender: string;\n\n    @IsNotEmpty({ message: \"Address không được để trống!\" })\n    address: string;\n\n    // @IsNotEmpty({ message: \"Role không được để trống!\" })\n    role: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\n\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport { Permission, PermissionSchema } from 'src/permissions/schema/permission.schema';\nimport { Role, RoleSchema } from 'src/roles/schema/role.schema';\nimport { UsersService } from 'src/users/users.service';\n\n@Module({\n  controllers: [DatabasesController],\n  providers: [DatabasesService, UsersService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Permission.name, schema: PermissionSchema },\n      { name: Role.name, schema: RoleSchema }\n    ]),\n  ],\n})\nexport class DatabasesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/databases.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabasesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/databases/databases.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Permission, PermissionDocument } from 'src/permissions/schema/permission.schema';\nimport { Role, RoleDocument } from 'src/roles/schema/role.schema';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './sample';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n    private readonly logger = new Logger(DatabasesService.name);\n    constructor(\n        @InjectModel(User.name)\n        private userModel: SoftDeleteModel,\n\n        @InjectModel(Permission.name)\n        private permissionModel: SoftDeleteModel,\n\n        @InjectModel(Role.name)\n        private roleModel: SoftDeleteModel,\n\n        private configService: ConfigService,\n        private userService: UsersService\n    ) { }\n\n    async onModuleInit() {\n        const isInit = this.configService.get(\"SHOULD_INIT\");\n        if (Boolean(isInit)) {\n            const countUser = await this.userModel.count({});\n            const countPermission = await this.permissionModel.count({});\n            const countRole = await this.roleModel.count({});\n\n            // create permissions\n            if (countPermission === 0) {\n                await this.permissionModel.insertMany(INIT_PERMISSIONS);\n            }\n\n            // create role\n            if (countRole === 0) {\n                const permissions = await this.permissionModel.find({}).select(\"_id\");\n                await this.roleModel.insertMany([\n                    {\n                        name: ADMIN_ROLE,\n                        description: \"FULL PERMISSIONS\",\n                        isActive: true,\n                        permissions: permissions\n                    },\n                    {\n                        name: USER_ROLE,\n                        description: \"USER\",\n                        isActive: true,\n                        permissions: []\n                    }\n                ])\n            }\n\n            // create user\n            if (countUser === 0) {\n                const adminRole = await this.roleModel.findOne({ name: ADMIN_ROLE });\n                const userRole = await this.roleModel.findOne({ name: USER_ROLE })\n                await this.userModel.insertMany([\n                    {\n                        name: \"admin\",\n                        email: \"admin@gmail.com\",\n                        password: this.userService.getHashPassword(this.configService.get(\"INIT_PASSWORD\")),\n                        age: 22,\n                        gender: \"MALE\",\n                        address: \"VietNam\",\n                        role: adminRole?._id\n                    },\n                    {\n                        name: \"Tuấn Thành\",\n                        email: \"tuanthanh@gmail.com\",\n                        password: this.userService.getHashPassword(this.configService.get(\"INIT_PASSWORD\")),\n                        age: 22,\n                        gender: \"MALE\",\n                        address: \"VietNam\",\n                        role: adminRole?._id\n                    },\n                    {\n                        name: \"User\",\n                        email: \"user@gmail.com\",\n                        password: this.userService.getHashPassword(this.configService.get(\"INIT_PASSWORD\")),\n                        age: 69,\n                        gender: \"MALE\",\n                        address: \"VietNam\",\n                        role: userRole?._id\n                    },\n                ])\n            }\n            if (countUser > 0 && countRole > 0 && countPermission > 0) {\n                this.logger.log('>>> ALREADY INIT SAMPLE DATA...');\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/entities/file.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@ResponseMessage('Upload single file')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { fileName: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseInterceptors, UploadedFile, ParseFilePipeBuilder, HttpStatus } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ResponseMessage } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags(\"files\")\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) { }\n\n  @Post('upload')\n  @ResponseMessage(\"Upload single file\")\n  @UseInterceptors(FileInterceptor('fileUpload'))\n  uploadFile(@UploadedFile(\n    new ParseFilePipeBuilder()\n      .addFileTypeValidator({\n        // fileType: /(jpg|jpeg|png|image\\/png|gif|txt|pdf|doc|docx|application\\/vnd.openxmlformats-officedocument.wordprocessingml.document|text\\/plain)$/i,\n        fileType: /(jpg|jpeg|png|image\\/png|image\\/jpeg|pdf)$/i,\n      })\n      .addMaxSizeValidator({\n        maxSize: 1024 * 1024 // KB = 1MB\n      })\n      .build({\n        errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY\n      }),) file: Express.Multer.File) {\n    return {\n      fileName: file.filename\n    };\n  }\n\n  @Get()\n  findAll() {\n    return this.filesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.filesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n    return this.filesService.update(+id, updateFileDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.filesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n\n@Module({\n  imports: [MulterModule.registerAsync({\n   useClass: MulterConfigService\n  })],\n  controllers: [FilesController],\n  providers: [FilesService]\n})\n\nexport class FilesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFileDto\n                                            \n                                                            CreateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all files`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { HealthCheckService, MongooseHealthIndicator, HealthCheck  } from '@nestjs/terminus';\nimport { Public } from 'src/decorator/customize';\n\n@Controller('health')\n\nexport class HealthController {\n    constructor(\n        private health: HealthCheckService,\n        private db: MongooseHealthIndicator,\n    ) { }\n    @Get()\n    @Public()\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.db.pingCheck('database'),\n        ]);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n    _id: string,\n    name: string,\n    email: string,\n    role: {\n        _id: string,\n        name: string\n    };\n    permissions?: {\n        _id: string,\n        name: string,\n        apiPath: string,\n        module: string\n    }[] // Cho app biết permission là 1 arr\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schemas.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { isNotEmpty } from \"class-validator\";\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type JobDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Job {\n    @Prop()\n    name: string;\n\n    @Prop()\n    skills: string[];\n\n    @Prop({ type: Object })\n    company: {\n        _id: mongoose.Schema.Types.ObjectId;\n        name: string;\n        logo: string;\n    };\n\n    @Prop()\n    location: string;\n\n    @Prop()\n    salary: number;\n\n    @Prop()\n    quantity: number;\n\n    @Prop()\n    level: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    startDate: Date;\n\n    @Prop()\n    endDate: Date;\n\n    @Prop()\n    isActive: boolean;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Create a new job')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, queryString: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('FETCH LIST JOB')@Get()@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Fetch user by id')@Get(':id')@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Delete a job')@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Update a job')@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query, Req } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { Request } from 'express';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags(\"jobs\")\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) { }\n\n  @ResponseMessage(\"Create a new job\")\n  @Post()\n  create(@Body() createJobDto: CreateJobDto, @User() user: IUser) {\n    return this.jobsService.create(createJobDto, user);\n  }\n\n  @ResponseMessage(\"FETCH LIST JOB\")\n  @Get()\n  @Public()\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() queryString: string, // Không truyền gì hiểu là lấy tất cả\n    @Req() req: Request\n  ) {\n    return this.jobsService.findAll(+currentPage, +limit, queryString, req);\n  }\n\n  @ResponseMessage(\"Fetch user by id\")\n  @Get(':id')\n  @Public()\n  findOne(@Param('id') id: string) {\n    return this.jobsService.findOne(id);\n  }\n\n  @ResponseMessage(\"Update a job\")\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateJobDto: UpdateJobDto, @User() user: IUser) {\n    return this.jobsService.update(id, updateJobDto, user);\n  }\n\n  @ResponseMessage(\"Delete a job\")\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.jobsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_imports\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nAuthModule->JobsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nJobsModule -->\n\nUsersModule->JobsModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Job, JobSchema } from './schemas/job.schemas';\nimport { ConfigModule } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UsersModule } from 'src/users/users.module';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Job.name, schema: JobSchema }]),\n    ConfigModule,\n    JwtModule.register({\n      global: true,\n    }),\n    UsersModule,\n    AuthModule\n  ],\n  controllers: [JobsController],\n  providers: [JobsService]\n})\nexport class JobsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                handleDate\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel, usersService: UsersService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, rq: string, req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rq\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDate\n                        \n                    \n                \n            \n            \n                \nhandleDate(startDate: Date, endDate: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Job, JobDocument } from './schemas/job.schemas';\nimport { IUser } from 'src/users/users.interface';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport dayjs from 'dayjs';\nimport { Request } from 'express';\nimport { JwtService } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { UsersService } from 'src/users/users.service';\nimport { AuthService } from 'src/auth/auth.service';\n\n@Injectable()\nexport class JobsService {\n\n  constructor(\n    @InjectModel(Job.name) private readonly jobModel: SoftDeleteModel,\n    private usersService: UsersService,\n    private authService: AuthService,\n  ) { }\n\n  async create(createJobDto: CreateJobDto, user: IUser) {\n    const { startDate, endDate } = createJobDto;\n    if (this.handleDate(startDate, endDate)) {\n      return await this.jobModel.create({\n        ...createJobDto, createdBy: {\n          _id: user._id,\n          email: user.email\n        }\n      });\n    }\n    else\n      throw new BadRequestException('Thời gian đặt không hợp lệ!');\n  }\n\n  async findAll(page: number, limit: number, rq: string, req: Request) {\n\n    let { filter, projection, population } = aqp(rq);\n    let { sort } = aqp(rq);\n    let offset = (+page - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10; // Không truyền limit set mặc định: 10\n\n    delete filter.current;\n    delete filter.pageSize;\n\n    let addFilter = await this.authService.handleFetchByHR(req);\n\n    if (addFilter)\n      filter = { ...filter, 'company._id': addFilter }\n\n    const totalItems = (await this.jobModel.find(filter)).length; // Tổng SL bản ghi TM\n    const totalPages = Math.ceil(totalItems / defaultLimit); // Số trang cần để hiển thị hết bản ghi\n\n    const result = await this.jobModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .exec()\n\n    return {\n      meta: {\n        current: page,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems\n      },\n      result\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id))\n      return 'not found job';\n    return await this.jobModel.findById(id);\n  }\n\n  async update(id: string, updateJobDto: UpdateJobDto, user: IUser) {\n    const { startDate, endDate } = updateJobDto;\n    if (this.handleDate(startDate, endDate)) {\n      return await this.jobModel.updateOne({ _id: id }, {\n        ...updateJobDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      });\n    }\n    else\n      throw new BadRequestException('Thời gian đặt không hợp lệ!');\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.jobModel.updateOne({ _id: id }, {\n      deletedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n\n    return this.jobModel.softDelete({ _id: id });\n  }\n\n  handleDate(startDate: Date, endDate: Date) {\n    const today = dayjs();\n    const startDateJS = dayjs(startDate);\n    const endDateJS = dayjs(endDate);\n    if (endDateJS.isAfter(today) && startDateJS.isBefore(endDateJS))\n      return true;\n    else\n      return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, ForbiddenException, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { IS_PUBLIC_KEY, IS_PUBLIC_PERMISSION } from 'src/decorator/customize';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n\n    // gọi constructor của class cha \n    // tức là constructor của class AuthGuard mà JwtAuthGuard mở rộng (extends)\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    // lấy ra metadata gửi kèm với request\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info, context: ExecutionContext) {\n    const request: Request = context.switchToHttp().getRequest();\n\n    const isSkipPermission = this.reflector.getAllAndOverride(IS_PUBLIC_PERMISSION, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    // You can throw an exception based on either \"info\" or \"err\" arguments\n    if (err || !user) {\n      throw err || new UnauthorizedException(\"Token không hợp lệ or không có token ở Bearer tpken ở Header request!\");\n    }\n\n    //check permissions\n    const targetMethod = request.method;\n    const targerEndpoint = request.route?.path as string;\n\n    const permissions = user?.permissions ?? [];\n    let isExist = permissions.find(permission => {\n      return targetMethod == permission.method\n        &&\n        targerEndpoint == permission.apiPath\n    })\n\n    if (targerEndpoint.startsWith(\"/api/v1/auth\")) isExist = true;\n    if (!isExist && !isSkipPermission) {\n      throw new ForbiddenException(\"Bạn không có để truy cập endpoint này!\");\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt.strategy.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        private configService: ConfigService,\n        private rolesService: RolesService\n    ) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: configService.get(\"JWT_ACCESS_TOKEN_SECRET\"),\n        });\n    }\n\n    async validate(payload: IUser) {\n        const { _id, name, email, role } = payload;\n        // Gán thêm permissions vào req.user\n        const userRole = role as unknown as { _id: string; name: string }\n        const temp = (await this.rolesService.findOne(userRole._id)).toObject();\n\n        return {\n            _id,\n            name,\n            email,\n            role,\n            permissions: temp?.permissions ?? []\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/local.strategy.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private authService: AuthService) {\n        super();\n    }\n\n    // Hàm định nghĩa sẵn của PassportStrategy. Nên hàm validate đã có sẵn 2 tham số username, password\n    async validate(username: string, password: string): Promise {\n        const user = await this.authService.validateUser(username, password);\n        if (!user) {\n            throw new UnauthorizedException(\"Username/password không hợp lệ!\");\n        }\n        return user;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                handleAutoSendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        handleAutoSendEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleAutoSendEmail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Send email success')@Cron(CronExpression.EVERY_5_MINUTES)\n                \n            \n\n                    \n                        \n                            Defined in src/mail/mail.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Logger } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags(\"mail\")\n@Controller('mail')\nexport class MailController {\n  constructor(private readonly mailService: MailService) { }\n\n  @Get()\n  @Public()\n  @ResponseMessage(\"Send email success\")\n  // @Cron(\"0 0 0 * * 0\") // 0.00 am every sunday\n  @Cron(CronExpression.EVERY_5_MINUTES)\n  handleAutoSendEmail() {\n    return this.mailService.autoSendEmail();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService\n\nMailService\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailController } from './mail.controller';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberSchema } from 'src/subscribers/schema/subscriber.schema';\nimport { Job, JobSchema } from 'src/jobs/schemas/job.schemas';\nimport { ScheduleModule } from '@nestjs/schedule';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Subscriber.name, schema: SubscriberSchema }]),\n    MongooseModule.forFeature([{ name: Job.name, schema: JobSchema }]),\n    ScheduleModule.forRoot(),\n    MailerModule.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        transport: {\n          host: configService.get(\"EMAIL_HOST\"),\n          secure: false,\n          auth: {\n            user: configService.get(\"EMAIL_AUTH_USER\"),\n            pass: configService.get(\"EMAIL_AUTH_PASS\"),\n          },\n        },\n        template: {\n          dir: join(__dirname, 'templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n        preview: configService.get(\"EMAIL_PREVIEW\") === 'true' ? true : false\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [MailController],\n  providers: [MailService]\n})\nexport class MailModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                jobModel\n                            \n                            \n                                    \n                                    Private\n                                subscriberModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                autoSendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        autoSendEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    autoSendEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        jobModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SoftDeleteModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel(Job.name)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mail/mail.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        subscriberModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SoftDeleteModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel(Subscriber.name)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mail/mail.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Job, JobDocument } from 'src/jobs/schemas/job.schemas';\nimport { SubcriberDocument, Subscriber } from 'src/subscribers/schema/subscriber.schema';\n\n@Injectable()\nexport class MailService {\n    constructor(\n        private mailerService: MailerService,\n    ) { }\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel\n\n    @InjectModel(Job.name)\n    private jobModel: SoftDeleteModel\n\n    async autoSendEmail() {\n        const subscribers = await this.subscriberModel.find({});\n        for (const subs of subscribers) {\n            const subsSkills = subs.skills;\n            const jobWithMatchingSkills = await this.jobModel.find({ skills: { $in: subsSkills } });\n            if (jobWithMatchingSkills?.length) {\n                const jobs = jobWithMatchingSkills.map(item => {\n                    return {\n                        name: item.name,\n                        company: item.company,\n                        salary: `${item.salary}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + \" đ\",\n                        skills: item.skills\n                    }\n                })\n\n                await this.mailerService.sendMail({\n                    to: \"tuanthanh00200@gmail.com\",\n                    from: '\"TuanThanhDev\" ', // override default from\n                    subject: 'Welcome to Nice App! Confirm your Email',\n                    template: \"new_job\",\n                    context: {\n                        receiver: subs.name,\n                        jobs: jobs\n                    }\n                });\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     MulterModuleOptions\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetDirectory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { MulterModuleOptions, MulterOptionsFactory } from \"@nestjs/platform-express\";\nimport fs from 'fs';\nimport { diskStorage } from \"multer\";\nimport path, { join } from \"path\";\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  getRootPath = () => {\n    return process.cwd();\n  };\n  ensureExists(targetDirectory: string) {\n    fs.mkdir(targetDirectory, { recursive: true }, (error) => {\n      if (!error) {\n        console.log('Directory successfully created, or it already exists.');\n        return;\n      }\n      switch (error.code) {\n        case 'EEXIST':\n          // Error:\n          // Requested location already exists, but it's not a directory.\n          break;\n        case 'ENOTDIR':\n          // Error:\n          // The parent hierarchy contains a file with the same name as the dir\n          // you're trying to create.\n          break;\n        default:\n          // Some other error like permission denied.\n          console.error(error);\n          break;\n      }\n    });\n  }\n\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: (req, file, cb) => {\n          const folder = req?.headers?.folder_type ?? \"default\";\n          this.ensureExists(`public/images/${folder}`);\n          cb(null, join(this.getRootPath(), `public/images/${folder}`))\n        },\n        filename: (req, file, cb) => {\n          //get image extension\n          let extName = path.extname(file.originalname);\n          //get image's name (without extension)\n          let baseName = path.basename(file.originalname, extName);\n          let finalName = `${baseName}-${Date.now()}${extName}`\n          cb(null, finalName)\n        }\n      })\n    };\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schema/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type PermissionDocument = HydratedDocument;\n\n@Schema({timestamps: true})\nexport class Permission {\n    @Prop()\n    name: string;\n\n    @Prop()\n    apiPath: string;\n\n    @Prop()\n    method: string;\n\n    @Prop()\n    module: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const PermissionSchema = SchemaFactory.createForClass(Permission);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch permissions with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a permission by id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Res, Query } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags(\"permissions\")\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) { }\n\n  @Post()\n  @ResponseMessage('Create a new permission')\n  create(@Body() createPermissionDto: CreatePermissionDto, @User() user: IUser) {\n    return this.permissionsService.create(createPermissionDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch permissions with paginate')\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() queryString: string // Không truyền gì hiểu là lấy tất cả\n  ) {\n    return this.permissionsService.findAll(+currentPage, +limit, queryString);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch a permission by id')\n  findOne(@Param('id') id: string) {\n    return this.permissionsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a permission')\n  update(@Param('id') id: string, @Body() updatePermissionDto: UpdatePermissionDto, @User() user: IUser) {\n    return this.permissionsService.update(id, updatePermissionDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a permission')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.permissionsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Permission, PermissionSchema } from './schema/permission.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Permission.name, schema: PermissionSchema }])],\n  controllers: [PermissionsController],\n  providers: [PermissionsService]\n})\nexport class PermissionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, rq: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rq\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { Permission, PermissionDocument } from './schema/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(@InjectModel(Permission.name) private permissionModel: SoftDeleteModel) { }\n\n  async create(createPermissionDto: CreatePermissionDto, user: IUser) {\n    const { apiPath, method } = createPermissionDto;\n    let findPermission = await this.permissionModel.findOne({\n      apiPath, method\n    })\n    if (findPermission) {\n      throw new BadRequestException('apiPath và method đã tồn tại!');\n    }\n    else {\n      let permission = await this.permissionModel.create({\n        ...createPermissionDto,\n        createdBy: {\n          _id: user._id,\n          email: user.email\n        }\n      })\n      return {\n        _id: permission._id,\n        createAt: permission.createdAt\n      }\n    }\n  }\n\n  async findAll(page: number, limit: number, rq: string) {\n    const { filter, projection, population } = aqp(rq);\n    let { sort } = aqp(rq);\n    let offset = (+page - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10; // Không truyền limit set mặc định: 10\n\n    delete filter.current;\n    delete filter.pageSize;\n\n    const totalItems = (await this.permissionModel.find(filter)).length; // Tổng SL bản ghi TM\n    const totalPages = Math.ceil(totalItems / defaultLimit); // Số trang cần để hiển thị hết bản ghi\n\n    const result = await this.permissionModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .exec()\n\n    return {\n      meta: {\n        current: page,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems\n      },\n      result\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.isValidObjectId(id))\n      throw new BadRequestException('Not found permission')\n    return await this.permissionModel.findOne({\n      _id: id\n    })\n  }\n\n  async update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser) {\n    if (!mongoose.isValidObjectId(id))\n      throw new BadRequestException('Not found permission')\n    return await this.permissionModel.updateOne({ _id: id }, {\n      ...updatePermissionDto,\n      updatedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.permissionModel.updateOne({_id: id}, {\n      deletedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return this.permissionModel.softDelete({_id: id})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được để trống!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age không được để trống!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không đúng định dạng'})@IsNotEmpty({message: 'Email không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender không được để trống!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password không được để trống!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\n\nexport class CreateUserDto {\n    @IsNotEmpty({\n        message: 'Name không được để trống?',\n    })\n    name: string; // Mặc định là public\n\n    @IsEmail({}, { message: \"Email không đúng định dạng\" })\n    @IsNotEmpty({\n        message: 'Email không được để trống?',\n    })\n    email: string; // Mặc định là public\n\n    @IsNotEmpty({ message: \"Password không được để trống!\" })\n    password: string;\n\n    @IsNotEmpty({ message: \"Age không được để trống!\" })\n    age: number;\n\n    @IsNotEmpty({ message: \"Gender không được để trống!\" })\n    gender: string;\n\n    @IsNotEmpty({ message: \"Address không được để trống!\" })\n    address: string;\n\n    @IsNotEmpty({ message: \"Role không được để trống!\" })\n    @IsMongoId({message: \"Role phải có định dạng ObjectId\"})\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company\n}\n\nexport class RegisterUserDto {\n    @IsNotEmpty({\n        message: 'Name không được để trống?',\n    })\n    name: string; // Mặc định là public\n\n    @IsEmail({}, { message: \"Email không đúng định dạng\" })\n    @IsNotEmpty({\n        message: 'Email không được để trống?',\n    })\n    email: string; // Mặc định là public\n\n    @IsNotEmpty({ message: \"Password không được để trống!\" })\n    password: string;\n\n    @IsNotEmpty({ message: \"Age không được để trống!\" })\n    age: number;\n\n    @IsNotEmpty({ message: \"Gender không được để trống!\" })\n    gender: string;\n\n    @IsNotEmpty({ message: \"Address không được để trống!\" })\n    address: string;\n\n    // @IsNotEmpty({ message: \"Role không được để trống!\" })\n    role: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n    statusCode: number;\n    message: string;\n    data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n    implements NestInterceptor> {\n\n    constructor(private reflector: Reflector) { }\n\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        return next\n            .handle()\n            .pipe(\n                map((data) => ({\n                    statusCode: context.switchToHttp().getResponse().statusCode,\n                    message: this.reflector.get(RESPONSE_MESSAGE, context.getHandler(),) || '',\n                    data: data || ''\n                })),\n            );\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schema/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Job } from 'src/jobs/schemas/job.schemas';\n\nexport type ResumeDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Resume {\n    @Prop()\n    email: string;\n\n    @Prop()\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @Prop()\n    url: string;\n\n    @Prop()\n    status: string;\n\n    @Prop({type: mongoose.Schema.Types.ObjectId, ref: Company.name})\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @Prop({type: mongoose.Schema.Types.ObjectId, ref: Job.name})\n    jobId: mongoose.Schema.Types.ObjectId;\n\n    @Prop({ type: Array })\n    history: {\n        status: string,\n        updatedAt: Date,\n        updatedBy: {\n            _id: mongoose.Schema.Types.ObjectId;\n            email: string\n        }\n    }[]\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                getResumeByUser\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResumeDto: CreateUserCvDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResumeDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, queryString: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch all resumes with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getResumeByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResumeByUser(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('by-user')@ResponseMessage('Get resume by User')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateResumeDto: UpdateResumeDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update status resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateResumeDto\n                                            \n                                                            UpdateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query, Req } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { Request, request } from 'express';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags(\"resumes\")\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) { }\n\n  @Post()\n  @ResponseMessage('Create a new resume')\n  create(@Body() createResumeDto: CreateUserCvDto, @User() user: IUser) {\n    return this.resumesService.create(createResumeDto, user);\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch all resumes with paginate\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() queryString: string, // Không truyền gì hiểu là lấy tất cả\n    @Req() req: Request\n  ) {\n    return this.resumesService.findAll(+currentPage, +limit, queryString, req);\n  }\n\n  @Get(':id')\n  @ResponseMessage(\"Fetch a resume by id\")\n  findOne(@Param('id') id: string) {\n    return this.resumesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage(\"Update status resume\")\n  update(@Param('id') id: string, @Body() updateResumeDto: UpdateResumeDto, @User() user: IUser) {\n    return this.resumesService.update(id, updateResumeDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"Delete a resume by id\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.resumesService.remove(id, user);\n  }\n\n  @Post('by-user')\n  @ResponseMessage(\"Get resume by User\")\n  getResumeByUser(@User() user: IUser) {\n    return this.resumesService.findByUsers(user);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_ResumesModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nAuthModule->ResumesModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Resume, ResumeSchema } from './schema/resume.schema';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Resume.name, schema: ResumeSchema }]), AuthModule],\n  controllers: [ResumesController],\n  providers: [ResumesService]\n})\nexport class ResumesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUsers\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResumeDto: CreateUserCvDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResumeDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, rq: string, req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rq\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsers(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateResumeDto: UpdateResumeDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateResumeDto\n                                            \n                                                            UpdateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Resume, ResumeDocument } from './schema/resume.schema';\nimport mongoose, { Model } from 'mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { AuthService } from 'src/auth/auth.service';\nimport { Request } from 'express';\n\n@Injectable()\nexport class ResumesService {\n  constructor(\n    @InjectModel(Resume.name) private resumeModel: SoftDeleteModel,\n    private authService: AuthService\n  ) { }\n\n  async create(createResumeDto: CreateUserCvDto, user: IUser) {\n    let resume = await this.resumeModel.create({\n      ...createResumeDto,\n      userId: user._id,\n      email: user.email,\n      status: 'PENDING',\n      history: [\n        {\n          status: 'PENDING',\n          updatedAt: new Date(),\n          updatedBy: {\n            _id: user._id,\n            email: user.email\n          }\n        }\n      ],\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return {\n      _id: resume._id,\n      createAt: resume.createdAt\n    };\n  }\n\n  async findAll(page: number, limit: number, rq: string, req: Request) {\n    let { filter, projection, population } = aqp(rq);\n    let { sort } = aqp(rq);\n    let offset = (+page - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10; // Không truyền limit set mặc định: 10\n\n    delete filter.current;\n    delete filter.pageSize;\n\n    let addFilter = await this.authService.handleFetchByHR(req);\n\n    if (addFilter)\n      filter = { ...filter, 'companyId': addFilter }\n\n    const totalItems = (await this.resumeModel.find(filter)).length; // Tổng SL bản ghi TM\n    const totalPages = Math.ceil(totalItems / defaultLimit); // Số trang cần để hiển thị hết bản ghi\n\n    const result = await this.resumeModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .select(projection as any)\n      .exec()\n\n    return {\n      meta: {\n        current: page,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems\n      },\n      result\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id))\n      return 'Not found resume';\n\n    const result = await this.resumeModel.findOne({\n      _id: id\n    })\n    return result;\n  }\n\n  async update(id: string, updateResumeDto: UpdateResumeDto, user: IUser) {\n    const { status } = updateResumeDto;\n    let resume = this.resumeModel.updateOne({ _id: id }, {\n      status,\n      updatedBy: {\n        _id: user._id,\n        email: user.email\n      },\n      $push: {\n        history: {\n          status,\n          updatedAt: new Date(),\n          updatedBy: {\n            _id: user._id,\n            email: user.email\n          }\n        }\n      }\n    })\n\n    return resume;\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.resumeModel.updateOne({ _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      })\n    return this.resumeModel.softDelete({ _id: id });\n  }\n\n  async findByUsers(user: IUser) {\n    let resume = await this.resumeModel.find({\n      userId: user._id\n    }).sort(\"createdAt\").populate([\n      {\n        path: \"companyId\",\n        select: { name: 1 }\n      },\n      {\n        path: \"jobId\",\n        select: { name: 1 }\n      }\n    ])\n    return resume;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schema/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Permission } from 'src/permissions/schema/permission.schema';\n\nexport type RoleDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Role {\n    @Prop()\n    name: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    isActive: boolean;\n\n    @Prop({ type: [{ type: mongoose.Schema.Types.ObjectId, ref: Permission.name }] })\n    permissions: Permission[]; // Assume 'Role' is the name of your related mongoose model\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch list roles')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch role by id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags(\"roles\")\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) { }\n\n  @Post()\n  @ResponseMessage('Create a new role')\n  create(@Body() createRoleDto: CreateRoleDto, @User() user: IUser) {\n    return this.rolesService.create(createRoleDto, user);\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch list roles\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() queryString: string // Không truyền gì hiểu là lấy tất cả\n  ) {\n    return this.rolesService.findAll(+currentPage, +limit, queryString);\n  }\n\n  @Get(':id')\n  @ResponseMessage(\"Fetch role by id\")\n  findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a role')\n  update(@Param('id') id: string, @Body() updateRoleDto: UpdateRoleDto, @User() user: IUser) {\n    return this.rolesService.update(id, updateRoleDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"Delete a role\")\n  remove(@Param('id') id: string, @User() user:IUser) {\n    return this.rolesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from './schema/role.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }])],\n  controllers: [RolesController],\n  providers: [RolesService],\n  exports: [RolesService]\n})\nexport class RolesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, rq: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rq\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { Role, RoleDocument } from './schema/role.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport { ADMIN_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class RolesService {\n  constructor(@InjectModel(Role.name) private roleModel: SoftDeleteModel) { }\n  \n  async create(createRoleDto: CreateRoleDto, user: IUser) {\n    const { name } = createRoleDto;\n    let findRole = await this.roleModel.findOne({ name });\n    if (findRole)\n      throw new BadRequestException('Role đã tồn tại!');\n    else {\n      let role = await this.roleModel.create({\n        ...createRoleDto,\n        createdBy: {\n          _id: user._id,\n          email: user.email\n        }\n      })\n      return {\n        _id: role._id,\n        createAt: role.createdAt\n      }\n    }\n  }\n\n  async findAll(page: number, limit: number, rq: string) {\n    const { filter, projection, population } = aqp(rq);\n    let { sort } = aqp(rq);\n    let offset = (+page - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10; // Không truyền limit set mặc định: 10\n\n    delete filter.current;\n    delete filter.pageSize;\n\n    const totalItems = (await this.roleModel.find(filter)).length; // Tổng SL bản ghi TM\n    const totalPages = Math.ceil(totalItems / defaultLimit); // Số trang cần để hiển thị hết bản ghi\n\n    const result = await this.roleModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .exec()\n\n    return {\n      meta: {\n        current: page,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems\n      },\n      result\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(\"not found role\")\n    }\n    return (await this.roleModel.findById(id)).populate({\n      path: \"permissions\",\n      select: { _id: 1, apiPath: 1, name: 1, method: 1, module: 1 }\n    });\n  }\n\n  async update(id: string, updateRoleDto: UpdateRoleDto, user: IUser) {\n\n    return await this.roleModel.updateOne({ _id: id }, {\n      ...updateRoleDto,\n      updatedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id))\n      return 'Not found user';\n\n    let foundRole = await this.roleModel.findById(id);\n    if (foundRole.name === ADMIN_ROLE) {\n      throw new BadRequestException('Không thể xóa role admin!');\n    }\n\n    await this.roleModel.updateOne({ _id: id }, {\n      deletedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return this.roleModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscriber.html":{"url":"classes/Subscriber.html","title":"class - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/schema/subscriber.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport mongoose, { HydratedDocument } from \"mongoose\";\n\nexport type SubcriberDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Subscriber {\n    @Prop()\n    email: string;\n\n    @Prop()\n    name: string;\n\n    @Prop()\n    skills: string[];\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const SubscriberSchema = SchemaFactory.createForClass(Subscriber);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                getUserSkills\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Create a new Subcriber')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch list Subcriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch Subcriber by id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getUserSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserSkills(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('skills')@SkipCheckPermission()@ResponseMessage('Get subscriber's skills')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a Subcriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ResponseMessage('Update a Subcriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { ResponseMessage, SkipCheckPermission, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags(\"subscribers\")\n@Controller('subscribers')\nexport class SubscribersController {\n  constructor(private readonly subscribersService: SubscribersService) { }\n\n  @ResponseMessage(\"Create a new Subcriber\")\n  @Post()\n  create(@Body() createSubscriberDto: CreateSubscriberDto, @User() user: IUser) {\n    return this.subscribersService.create(createSubscriberDto, user);\n  }\n\n  @Post(\"skills\")\n  @SkipCheckPermission()\n  @ResponseMessage(\"Get subscriber's skills\")\n  getUserSkills(@User() user: IUser) {\n    return this.subscribersService.getSkills(user);\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch list Subcriber\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() queryString: string // Không truyền gì hiểu là lấy tất cả\n  ) {\n    return this.subscribersService.findAll(+currentPage, +limit, queryString);\n  }\n\n  @Get(':id')\n  @ResponseMessage(\"Fetch Subcriber by id\")\n  findOne(@Param('id') id: string) {\n    return this.subscribersService.findOne(id);\n  }\n\n  @Patch()\n  // @SkipCheckPermission()\n  @ResponseMessage(\"Update a Subcriber\")\n  update(@Body() updateSubscriberDto: UpdateSubscriberDto, @User() user: IUser) {\n    return this.subscribersService.update(updateSubscriberDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"Delete a Subcriber\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.subscribersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nSubscribersService\n\nSubscribersService\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { SubscribersController } from './subscribers.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberSchema } from './schema/subscriber.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Subscriber.name, schema: SubscriberSchema }]),\n  ],\n  controllers: [SubscribersController],\n  providers: [SubscribersService]\n})\nexport class SubscribersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getSkills\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subcriberModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/subscribers.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subcriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, rq: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rq\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSkills(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SubcriberDocument, Subscriber } from './schema/subscriber.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class SubscribersService {\n  constructor(\n    @InjectModel(Subscriber.name) private subcriberModel: SoftDeleteModel,\n  ) { }\n\n  async create(createSubscriberDto: CreateSubscriberDto, user: IUser) {\n    const { email } = createSubscriberDto;\n    const isExist = await this.subcriberModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(`Email ${email} đã tồn tại trên hệ thống!`);\n    }\n    return await this.subcriberModel.create({\n      ...createSubscriberDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    });\n  }\n\n  async getSkills(user: IUser) {\n    const { email } = user;\n    return await this.subcriberModel.findOne({ email }, { skills: 1 })\n  }\n\n  async findAll(page: number, limit: number, rq: string) {\n    const { filter, projection, population } = aqp(rq);\n    let { sort } = aqp(rq);\n    let offset = (+page - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10; // Không truyền limit set mặc định: 10\n\n    delete filter.current;\n    delete filter.pageSize;\n\n    const totalItems = (await this.subcriberModel.find(filter)).length; // Tổng SL bản ghi TM\n    const totalPages = Math.ceil(totalItems / defaultLimit); // Số trang cần để hiển thị hết bản ghi\n\n    const result = await this.subcriberModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .exec()\n\n    return {\n      meta: {\n        current: page,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems\n      },\n      result\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id))\n      throw new BadRequestException('Not found company');\n    const result = await this.subcriberModel.findOne({\n      _id: id\n    })\n    return result;\n  }\n\n  async update(updateSubscriberDto: UpdateSubscriberDto, user: IUser) {\n    const { email } = user;\n    return await this.subcriberModel.updateOne({ email: email }, {\n      ...updateSubscriberDto,\n      updatedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    },\n      { upsert: true }\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.subcriberModel.updateOne(\n      { _id: id },\n      {\n        deletedby: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n    return this.subcriberModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/transform.interceptor.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n    statusCode: number;\n    message: string;\n    data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n    implements NestInterceptor> {\n\n    constructor(private reflector: Reflector) { }\n\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        return next\n            .handle()\n            .pipe(\n                map((data) => ({\n                    statusCode: context.switchToHttp().getResponse().statusCode,\n                    message: this.reflector.get(RESPONSE_MESSAGE, context.getHandler(),) || '',\n                    data: data || ''\n                })),\n            );\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCompanyDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/update-company.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from './create-company.dto';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {\n    _id: string\n}\n\n// Khi sử dụng PartialType thì các option sẽ ko được extends: nghĩa là không bắt buộc truyền\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateJobDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobDto } from './create-job.dto';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateResumeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubscriberDto.html":{"url":"classes/UpdateSubscriberDto.html","title":"class - UpdateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/update-subscriber.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSubscriberDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSubscriberDto } from './create-subscriber.dto';\n\nexport class UpdateSubscriberDto extends PartialType(CreateSubscriberDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(CreateUserDto, ['password'] as const)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Không truyền id trong body!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType, PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsNotEmpty } from 'class-validator';\n\n// export class UpdateUserDto extends PartialType(CreateUserDto) {}\n// kế thừa lại tất cả thuộc tinh của createUserDto\n\n// Bỏ thuộc tính password (Không cho cập nhật pass)\nexport class UpdateUserDto extends OmitType(CreateUserDto, ['password'] as const) {\n    @IsNotEmpty({\n        message: \"Không truyền id trong body!\"\n    })\n    _id: string; // cho biết khi gửi request thì sẽ có _id trong body\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Role } from 'src/roles/schema/role.schema';\n\nexport type UserDocument = HydratedDocument;\n//  định nghĩa một kiểu UserDocument, là một loại dữ liệu (type) tương tự với kiểu Document của Mongoose.\n// đại diện cho một bản ghi (document) của model \"User\" trong cơ sở dữ liệu MongoDB.\n\n@Schema({ timestamps: true })\nexport class User {\n  @Prop()\n  name: string;\n\n  @Prop()\n  email: string;\n\n  @Prop()\n  password: string;\n\n  @Prop()\n  age: string;\n\n  @Prop()\n  gender: string;\n\n  @Prop()\n  address: string;\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string\n  };\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  refreshToken: string\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string\n  }\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string\n  }\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string\n  }\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n// Tạo một schema thực tế từ class \"User\". \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(CreateUserDto: CreateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Create a new User')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                CreateUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('FETCH LIST USERS')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Fetch user by id')@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Delete a User')@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Update a new User')@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards, Query } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from './users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags(\"users\")\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) { }\n\n  @ResponseMessage(\"Create a new User\")\n  @Post()\n  create(@Body() CreateUserDto: CreateUserDto, @User() user: IUser) {\n    return this.usersService.create(CreateUserDto, user);\n  }\n\n  @Get()\n  @ResponseMessage(\"FETCH LIST USERS\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() queryString: string // Không truyền gì hiểu là lấy tất cả\n  ) {\n    return this.usersService.findAll(+currentPage, +limit, queryString);\n  }\n\n  @ResponseMessage(\"Fetch user by id\")\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n    // Mặc định: +id -> Chuyển string sang number\n  }\n\n  @ResponseMessage(\"Update a new User\")\n  @Patch()\n  update(@Body() updateUserDto: UpdateUserDto, @User() user: IUser) {\n    return this.usersService.update(updateUserDto, user);\n  }\n\n  @ResponseMessage(\"Delete a User\")\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.usersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { RolesModule } from 'src/roles/roles.module';\nimport { Role, RoleSchema } from 'src/roles/schema/role.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n    MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }])\n  ],\n  // name ở đây ko lquan tới tt name trong đối tượng User,\n  // hiểu nó như là 1 ID định danh và cái ID đó sẽ ứng với model này\n  // Việc import muốn nói cho app rằng ta đang muốn sd UserSchema\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService]\n})\nexport class UsersModule { }\n\n// Việc sử dụng import sẽ giúp chúng ta có thể tương tác dữ liệu giữa các module khác nhau\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findUserByToken\n                            \n                            \n                                getHashPassword\n                            \n                            \n                                updateUserToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                findOneByUsername\n                            \n                            \n                                isValidPassword\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(CreateUser: CreateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                CreateUser\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, rq: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rq\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \nfindOneByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \nisValidPassword(password: string, hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerUser: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUser\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:159\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User as UserM, UserDocument } from './schemas/user.schema';\nimport mongoose from 'mongoose';\nimport { genSaltSync, hashSync, compareSync } from 'bcrypt';\n// Khai báo như này vì import bcrypt và dùng hàm thì lỗi - Lỗi của thư viện\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from './users.interface';\nimport aqp from 'api-query-params';\nimport { Role, RoleDocument } from 'src/roles/schema/role.schema';\nimport { USER_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class UsersService {\n\n  constructor(\n    @InjectModel(UserM.name) private userModel: SoftDeleteModel,\n    @InjectModel(Role.name) private roleModel: SoftDeleteModel\n  ) { }\n  // Cho app biết ta đang muốn dùng cái model đã được khai báo ở module ở đây\n  // userModel thực chất là 1 biến có kiểu dữ liệu là Model -- generic(ép kiểu về đúng Model User)\n\n  getHashPassword = (password: string) => {\n    const saltRounds = 10;\n    const salt = genSaltSync(saltRounds);\n    const hash = hashSync(password, salt);\n    return hash;\n  }\n\n  async create(CreateUser: CreateUserDto, user: IUser) {\n    const { name, email, password, age, gender, address, role, company } = CreateUser\n\n    const isExist = await this.userModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(`Email ${email} đã tồn tại trên hệ thống!`);\n    }\n    const hassPassword = this.getHashPassword(password);\n    let newUser = await this.userModel.create({\n      name, email, password: hassPassword, age, gender, address, role, company\n    })\n    const result = {\n      _id: user._id,\n      createdAt: newUser.createdAt\n    }\n    return result;\n  }\n\n  async register(registerUser: RegisterUserDto) {\n    const { name, email, password, age, gender, address } = registerUser\n    const isExist = await this.userModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(`Email ${email} đã tồn tại trên hệ thống!`);\n    }\n\n    //fetch userRole \n    const userRole = await this.roleModel.findOne({ name: USER_ROLE })\n\n    const hassPassword = this.getHashPassword(password);\n    let user = await this.userModel.create({\n      name, email, password: hassPassword, age, gender, address,\n      role: userRole?._id,\n    })\n    \n    return {\n      _id: user?._id,\n      createdAt: user?.createdAt\n    };\n  }\n\n  async findAll(page: number, limit: number, rq: string) {\n    // const query = aqp(queryString);\n    // const offset = (currentPage - 1) * limit;\n    // delete query.filter.page;\n    // return await this.companyModel.find(query.filter).skip(offset).limit(limit).populate('createdBy');\n\n    const { filter, projection, population } = aqp(rq);\n    let { sort } = aqp(rq);\n    let offset = (+page - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10; // Không truyền limit set mặc định: 10\n\n    delete filter.current;\n    delete filter.pageSize;\n\n    const totalItems = (await this.userModel.find(filter)).length; // Tổng SL bản ghi TM\n    const totalPages = Math.ceil(totalItems / defaultLimit); // Số trang cần để hiển thị hết bản ghi\n\n    const result = await this.userModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .exec()\n\n    return {\n      meta: {\n        current: page,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems\n      },\n      result\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id))\n      return 'Not found user';\n\n    const result = await this.userModel.findOne({\n      _id: id\n    }).select('-password').populate({ path: \"role\", select: { name: 1, _id: 1 } })\n    return result;\n  }\n\n  findOneByUsername(username: string) {\n    return this.userModel.findOne({\n      email: username\n    }).populate({ path: 'role', select: { name: 1 } })\n  }\n\n  isValidPassword(password: string, hash: string) {\n    return compareSync(password, hash);\n  }\n\n  async update(updateUserDto: UpdateUserDto, user: IUser) {\n    const result = await this.userModel.updateOne({ _id: updateUserDto._id }, {\n      ...updateUserDto,\n      updatedby: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return result;\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id))\n      throw new BadRequestException('Not found user');\n\n    let foundUser = await this.userModel.findById(id);\n    if (foundUser && foundUser.email === 'admin@gmail.com') {\n      throw new BadRequestException('Không thể xóa tài khoản admin!');\n    }\n\n    await this.userModel.updateOne({ _id: id }, {\n      deletedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n\n    const result = this.userModel.softDelete({ _id: id })\n    return result;\n  }\n\n  updateUserToken = async (refreshToken: string, _id: string) => {\n    return await this.userModel.updateOne({ _id }, { refreshToken })\n  }\n\n  findUserByToken = async (refreshToken: string) => {\n    return (await this.userModel.findOne({ refreshToken })).populate({\n      path: 'role',\n      select: { name: 1 }\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            SkipCheckPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schemas.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schemas.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schema/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/permissions/schema/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateUserCvDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schema/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/resumes/schema/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schema/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/roles/schema/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dto/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subscribers/dto/update-subscriber.dto.ts\n            \n            class\n            UpdateSubscriberDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/schema/subscriber.schema.ts\n            \n            class\n            Subscriber\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/subscribers/schema/subscriber.schema.ts\n            \n            variable\n            SubscriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : 1.8.1\n        \n            @nestjs/common : 9.4.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : 9.4.0\n        \n            @nestjs/jwt : ^10.1.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : ^10.0.1\n        \n            @nestjs/passport : ^10.0.2\n        \n            @nestjs/platform-express : 9.4.0\n        \n            @nestjs/schedule : ^3.0.4\n        \n            @nestjs/swagger : ^7.1.14\n        \n            @nestjs/terminus : 10.0.1\n        \n            @nestjs/throttler : ^5.0.1\n        \n            api-query-params : ^5.4.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            dayjs : ^1.11.10\n        \n            dotenv : ^16.3.1\n        \n            ejs : ^3.1.9\n        \n            handlebars : 4.7.7\n        \n            mongoose : ^7.5.2\n        \n            ms : ^2.1.3\n        \n            nodemailer : 6.9.3\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rxjs : 7.2.0\n        \n            soft-delete-plugin-mongoose : ^1.0.15\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n1. Cài đặt thư viện với câu lệnh: npm i\n2. Chạy dự án với câu lệnh: npm run dev\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nAuthModule->JobsModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nAuthModule->ResumesModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nJobsModule -->\n\nUsersModule->JobsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    28 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            License : UNLICENSED\n        \n            Author : Hỏi Dân IT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schemas.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            SubcriberDocument   (src/.../subscriber.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schemas/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schemas.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schema/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schema/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schema/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subscribers/schema/subscriber.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubcriberDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../sample.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            IS_PUBLIC_PERMISSION   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schemas.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            SkipCheckPermission   (src/.../customize.ts)\n                        \n                        \n                            SubscriberSchema   (src/.../subscriber.schema.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            USER_ROLE   (src/.../sample.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"SUPER_ADMIN\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        \"_id\": \"648ab415f4328bd3153ee211\",\n        \"name\": \"Get Company with paginate\",\n        \"apiPath\": \"/api/v1/companies\",\n        \"method\": \"GET\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:47:49.369Z\",\n        \"updatedAt\": \"2023-06-15T06:54:05.131Z\",\n        \"__v\": 0,\n        \"updatedBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        }\n    },\n    {\n        \"_id\": \"648ab436f4328bd3153ee216\",\n        \"name\": \"Create Company\",\n        \"apiPath\": \"/api/v1/companies\",\n        \"method\": \"POST\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:48:22.224Z\",\n        \"updatedAt\": \"2023-06-15T06:48:22.224Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab4d5f4328bd3153ee21b\",\n        \"name\": \"Update Company\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:51:01.241Z\",\n        \"updatedAt\": \"2023-06-15T06:51:01.241Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab4ebf4328bd3153ee220\",\n        \"name\": \"Delete Company\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:51:23.973Z\",\n        \"updatedAt\": \"2023-06-15T06:51:23.973Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab5a8072f2a2ef910638d\",\n        \"name\": \"Get Company by id\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"GET\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:54:32.799Z\",\n        \"updatedAt\": \"2023-06-15T06:54:32.799Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6d3fa16b294212e4033\",\n        \"name\": \"Create User\",\n        \"apiPath\": \"/api/v1/users\",\n        \"method\": \"POST\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:59:31.898Z\",\n        \"updatedAt\": \"2023-06-15T06:59:31.898Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6e7fa16b294212e4038\",\n        \"name\": \"Get User by Id\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"GET\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:59:51.041Z\",\n        \"updatedAt\": \"2023-06-15T06:59:51.041Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6fdfa16b294212e403d\",\n        \"name\": \"Get User with paginate\",\n        \"apiPath\": \"/api/v1/users\",\n        \"method\": \"GET\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T07:00:13.364Z\",\n        \"updatedAt\": \"2023-06-15T07:00:13.364Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab719fa16b294212e4042\",\n        \"name\": \"Update User\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T07:00:41.934Z\",\n        \"updatedAt\": \"2023-06-15T07:00:41.934Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab728fa16b294212e4047\",\n        \"name\": \"Delete User\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T07:00:56.274Z\",\n        \"updatedAt\": \"2023-06-15T07:00:56.274Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab750fa16b294212e404c\",\n        \"name\": \"Upload Single File\",\n        \"apiPath\": \"/api/v1/files/upload\",\n        \"method\": \"POST\",\n        \"module\": \"FILES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T07:01:36.923Z\",\n        \"updatedAt\": \"2023-06-15T07:01:36.923Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad488dafdb9754f40b846\",\n        \"name\": \"Create a Job\",\n        \"apiPath\": \"/api/v1/jobs\",\n        \"method\": \"POST\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:06:16.508Z\",\n        \"updatedAt\": \"2023-06-15T09:06:16.508Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad499dafdb9754f40b84b\",\n        \"name\": \"Get a job by id\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"GET\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:06:33.697Z\",\n        \"updatedAt\": \"2023-06-15T09:06:33.697Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4a6dafdb9754f40b850\",\n        \"name\": \"Update a Job\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:06:46.085Z\",\n        \"updatedAt\": \"2023-06-15T09:06:46.085Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4ccdafdb9754f40b859\",\n        \"name\": \"Get Job with paginate\",\n        \"apiPath\": \"/api/v1/jobs\",\n        \"method\": \"GET\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:07:24.175Z\",\n        \"updatedAt\": \"2023-06-15T09:07:24.175Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4d9dafdb9754f40b85e\",\n        \"name\": \"Delete a Job\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:07:37.896Z\",\n        \"updatedAt\": \"2023-06-15T09:07:37.896Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4fedafdb9754f40b863\",\n        \"name\": \"Create a Resume\",\n        \"apiPath\": \"/api/v1/resumes\",\n        \"method\": \"POST\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:08:14.659Z\",\n        \"updatedAt\": \"2023-06-15T09:08:14.659Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad511dafdb9754f40b868\",\n        \"name\": \"Fetch resume with paginate\",\n        \"apiPath\": \"/api/v1/resumes\",\n        \"method\": \"GET\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:08:33.395Z\",\n        \"updatedAt\": \"2023-06-15T09:08:33.395Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad522dafdb9754f40b86d\",\n        \"name\": \"Get resume by id\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"GET\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:08:50.801Z\",\n        \"updatedAt\": \"2023-06-15T09:08:50.801Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad53bdafdb9754f40b872\",\n        \"name\": \"Delete a resume\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:09:15.785Z\",\n        \"updatedAt\": \"2023-06-15T09:09:15.785Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad555dafdb9754f40b877\",\n        \"name\": \"Update resume status\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:09:41.694Z\",\n        \"updatedAt\": \"2023-06-15T09:09:41.694Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad56ddafdb9754f40b87c\",\n        \"name\": \"Fetch resumes by user\",\n        \"apiPath\": \"/api/v1/resumes/by-user\",\n        \"method\": \"POST\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:10:05.961Z\",\n        \"updatedAt\": \"2023-06-15T09:10:05.961Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad59adafdb9754f40b881\",\n        \"name\": \"Create a permission\",\n        \"apiPath\": \"/api/v1/permissions\",\n        \"method\": \"POST\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:10:50.946Z\",\n        \"updatedAt\": \"2023-06-15T09:10:50.946Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5aedafdb9754f40b886\",\n        \"name\": \"Fetch Permission with paginate\",\n        \"apiPath\": \"/api/v1/permissions\",\n        \"method\": \"GET\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:11:10.914Z\",\n        \"updatedAt\": \"2023-06-15T09:11:10.914Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5c5dafdb9754f40b88b\",\n        \"name\": \"Fetch permission by id\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"GET\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:11:33.234Z\",\n        \"updatedAt\": \"2023-06-15T09:11:33.234Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5d4dafdb9754f40b890\",\n        \"name\": \"Update a permission\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:11:48.081Z\",\n        \"updatedAt\": \"2023-06-15T09:11:48.081Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5ebdafdb9754f40b895\",\n        \"name\": \"Delete a permission\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:12:11.323Z\",\n        \"updatedAt\": \"2023-06-15T09:12:11.323Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad613dafdb9754f40b89a\",\n        \"name\": \"Create Role\",\n        \"apiPath\": \"/api/v1/roles\",\n        \"method\": \"POST\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:12:51.974Z\",\n        \"updatedAt\": \"2023-06-15T09:12:51.974Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad622dafdb9754f40b89f\",\n        \"name\": \"Fetch roles with paginate\",\n        \"apiPath\": \"/api/v1/roles\",\n        \"method\": \"GET\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:13:06.618Z\",\n        \"updatedAt\": \"2023-06-15T09:13:06.618Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad630dafdb9754f40b8a6\",\n        \"name\": \"Fetch role by id\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"GET\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:13:20.853Z\",\n        \"updatedAt\": \"2023-06-15T09:13:20.853Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad640dafdb9754f40b8ab\",\n        \"name\": \"Update Role\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:13:36.836Z\",\n        \"updatedAt\": \"2023-06-15T09:13:36.836Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad650dafdb9754f40b8b0\",\n        \"name\": \"Delete a Role\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:13:52.798Z\",\n        \"updatedAt\": \"2023-06-15T09:13:52.798Z\",\n        \"__v\": 0\n    }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"NORMAL_USER\"\n                    \n                \n\n\n        \n    \n\n    src/companies/schemas/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"isPublicPermission\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n    SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkipCheckPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_PERMISSION, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n    (data: unknown, ctx: ExecutionContext) => {\n        const request = ctx.switchToHttp().getRequest();\n        return request.user;\n    },\n)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schemas.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/permissions/schema/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schema/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schema/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/subscribers/schema/subscriber.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubscriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subscriber)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
